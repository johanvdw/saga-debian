# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.
# This file is compatible with both classic and new-style classes.

from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_saga_api', [dirname(__file__)])
        except ImportError:
            import _saga_api
            return _saga_api
        if fp is not None:
            try:
                _mod = imp.load_module('_saga_api', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _saga_api = swig_import_helper()
    del swig_import_helper
else:
    import _saga_api
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


SIZEOF_LONG = _saga_api.SIZEOF_LONG

def SG_Malloc(*args):
  return _saga_api.SG_Malloc(*args)
SG_Malloc = _saga_api.SG_Malloc

def SG_Calloc(*args):
  return _saga_api.SG_Calloc(*args)
SG_Calloc = _saga_api.SG_Calloc

def SG_Realloc(*args):
  return _saga_api.SG_Realloc(*args)
SG_Realloc = _saga_api.SG_Realloc

def SG_Free(*args):
  return _saga_api.SG_Free(*args)
SG_Free = _saga_api.SG_Free

def SG_Swap_Bytes(*args):
  return _saga_api.SG_Swap_Bytes(*args)
SG_Swap_Bytes = _saga_api.SG_Swap_Bytes

def SG_Mem_Get_Int(*args):
  return _saga_api.SG_Mem_Get_Int(*args)
SG_Mem_Get_Int = _saga_api.SG_Mem_Get_Int

def SG_Mem_Set_Int(*args):
  return _saga_api.SG_Mem_Set_Int(*args)
SG_Mem_Set_Int = _saga_api.SG_Mem_Set_Int

def SG_Mem_Get_Double(*args):
  return _saga_api.SG_Mem_Get_Double(*args)
SG_Mem_Get_Double = _saga_api.SG_Mem_Get_Double

def SG_Mem_Set_Double(*args):
  return _saga_api.SG_Mem_Set_Double(*args)
SG_Mem_Set_Double = _saga_api.SG_Mem_Set_Double
class CSG_String(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_String, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_String, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_String(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_String
    __del__ = lambda self : None;
    def c_str(self): return _saga_api.CSG_String_c_str(self)
    def b_str(self): return _saga_api.CSG_String_b_str(self)
    def Length(self): return _saga_api.CSG_String_Length(self)
    def Clear(self): return _saga_api.CSG_String_Clear(self)
    __swig_getmethods__["Format"] = lambda x: _saga_api.CSG_String_Format
    if _newclass:Format = staticmethod(_saga_api.CSG_String_Format)
    def Printf(self, *args): return _saga_api.CSG_String_Printf(self, *args)
    def Scanf(self, *args): return _saga_api.CSG_String_Scanf(self, *args)
    def Append(self, *args): return _saga_api.CSG_String_Append(self, *args)
    def __add__(self, *args): return _saga_api.CSG_String___add__(self, *args)
    def __iadd__(self, *args): return _saga_api.CSG_String___iadd__(self, *args)
    def Cmp(self, *args): return _saga_api.CSG_String_Cmp(self, *args)
    def CmpNoCase(self, *args): return _saga_api.CSG_String_CmpNoCase(self, *args)
    def Make_Lower(self): return _saga_api.CSG_String_Make_Lower(self)
    def Make_Upper(self): return _saga_api.CSG_String_Make_Upper(self)
    def Replace(self, *args): return _saga_api.CSG_String_Replace(self, *args)
    def Remove(self, *args): return _saga_api.CSG_String_Remove(self, *args)
    def Trim(self, fromRight = False): return _saga_api.CSG_String_Trim(self, fromRight)
    def Find(self, *args): return _saga_api.CSG_String_Find(self, *args)
    def Contains(self, *args): return _saga_api.CSG_String_Contains(self, *args)
    def AfterFirst(self, *args): return _saga_api.CSG_String_AfterFirst(self, *args)
    def AfterLast(self, *args): return _saga_api.CSG_String_AfterLast(self, *args)
    def BeforeFirst(self, *args): return _saga_api.CSG_String_BeforeFirst(self, *args)
    def BeforeLast(self, *args): return _saga_api.CSG_String_BeforeLast(self, *args)
    def Right(self, *args): return _saga_api.CSG_String_Right(self, *args)
    def Mid(self, *args): return _saga_api.CSG_String_Mid(self, *args)
    def Left(self, *args): return _saga_api.CSG_String_Left(self, *args)
    def asInt(self, *args): return _saga_api.CSG_String_asInt(self, *args)
    def asDouble(self, *args): return _saga_api.CSG_String_asDouble(self, *args)
CSG_String_swigregister = _saga_api.CSG_String_swigregister
CSG_String_swigregister(CSG_String)

def CSG_String_Format(*args):
  return _saga_api.CSG_String_Format(*args)
CSG_String_Format = _saga_api.CSG_String_Format

class CSG_Strings(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Strings, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Strings, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Strings(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Strings
    __del__ = lambda self : None;
    def Clear(self): return _saga_api.CSG_Strings_Clear(self)
    def Assign(self, *args): return _saga_api.CSG_Strings_Assign(self, *args)
    def Add(self, *args): return _saga_api.CSG_Strings_Add(self, *args)
    def __iadd__(self, *args): return _saga_api.CSG_Strings___iadd__(self, *args)
    def Set_Count(self, *args): return _saga_api.CSG_Strings_Set_Count(self, *args)
    def Get_Count(self): return _saga_api.CSG_Strings_Get_Count(self)
    def Get_String(self, *args): return _saga_api.CSG_Strings_Get_String(self, *args)
CSG_Strings_swigregister = _saga_api.CSG_Strings_swigregister
CSG_Strings_swigregister(CSG_Strings)


def SG_Printf(*args):
  return _saga_api.SG_Printf(*args)
SG_Printf = _saga_api.SG_Printf

def SG_FPrintf(*args):
  return _saga_api.SG_FPrintf(*args)
SG_FPrintf = _saga_api.SG_FPrintf

def SG_Sscanf(*args):
  return _saga_api.SG_Sscanf(*args)
SG_Sscanf = _saga_api.SG_Sscanf

def SG_UTF8_To_String(*args):
  return _saga_api.SG_UTF8_To_String(*args)
SG_UTF8_To_String = _saga_api.SG_UTF8_To_String

def SG_String_To_UTF8(*args):
  return _saga_api.SG_String_To_UTF8(*args)
SG_String_To_UTF8 = _saga_api.SG_String_To_UTF8

def SG_Degree_To_Double(*args):
  return _saga_api.SG_Degree_To_Double(*args)
SG_Degree_To_Double = _saga_api.SG_Degree_To_Double

def SG_Double_To_Degree(*args):
  return _saga_api.SG_Double_To_Degree(*args)
SG_Double_To_Degree = _saga_api.SG_Double_To_Degree

def SG_Date_To_Number(*args):
  return _saga_api.SG_Date_To_Number(*args)
SG_Date_To_Number = _saga_api.SG_Date_To_Number

def SG_Flip_Decimal_Separators(*args):
  return _saga_api.SG_Flip_Decimal_Separators(*args)
SG_Flip_Decimal_Separators = _saga_api.SG_Flip_Decimal_Separators
SG_ARRAY_GROWTH_0 = _saga_api.SG_ARRAY_GROWTH_0
SG_ARRAY_GROWTH_1 = _saga_api.SG_ARRAY_GROWTH_1
SG_ARRAY_GROWTH_2 = _saga_api.SG_ARRAY_GROWTH_2
SG_ARRAY_GROWTH_3 = _saga_api.SG_ARRAY_GROWTH_3
class CSG_Array(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Array, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Array, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _saga_api.delete_CSG_Array
    __del__ = lambda self : None;
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Array(*args)
        try: self.this.append(this)
        except: self.this = this
    def Create(self, *args): return _saga_api.CSG_Array_Create(self, *args)
    def Destroy(self): return _saga_api.CSG_Array_Destroy(self)
    def Set_Growth(self, *args): return _saga_api.CSG_Array_Set_Growth(self, *args)
    def Get_Growth(self): return _saga_api.CSG_Array_Get_Growth(self)
    def Get_Value_Size(self): return _saga_api.CSG_Array_Get_Value_Size(self)
    def Get_Size(self): return _saga_api.CSG_Array_Get_Size(self)
    def Get_Entry(self, *args): return _saga_api.CSG_Array_Get_Entry(self, *args)
    def Get_Array(self, *args): return _saga_api.CSG_Array_Get_Array(self, *args)
    def Set_Array(self, *args): return _saga_api.CSG_Array_Set_Array(self, *args)
    def Inc_Array(self, *args): return _saga_api.CSG_Array_Inc_Array(self, *args)
    def Dec_Array(self, *args): return _saga_api.CSG_Array_Dec_Array(self, *args)
CSG_Array_swigregister = _saga_api.CSG_Array_swigregister
CSG_Array_swigregister(CSG_Array)

def SG_Get_CurrentTimeStr(bWithDate = True):
  return _saga_api.SG_Get_CurrentTimeStr(bWithDate)
SG_Get_CurrentTimeStr = _saga_api.SG_Get_CurrentTimeStr

def SG_Number_To_Date(*args):
  return _saga_api.SG_Number_To_Date(*args)
SG_Number_To_Date = _saga_api.SG_Number_To_Date

def SG_Get_Significant_Decimals(*args):
  return _saga_api.SG_Get_Significant_Decimals(*args)
SG_Get_Significant_Decimals = _saga_api.SG_Get_Significant_Decimals

def SG_Get_String(*args):
  return _saga_api.SG_Get_String(*args)
SG_Get_String = _saga_api.SG_Get_String

class CSG_Buffer(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Buffer, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Buffer, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Buffer(*args)
        try: self.this.append(this)
        except: self.this = this
    def Create(self, *args): return _saga_api.CSG_Buffer_Create(self, *args)
    __swig_destroy__ = _saga_api.delete_CSG_Buffer
    __del__ = lambda self : None;
    def Destroy(self): return _saga_api.CSG_Buffer_Destroy(self)
    def Set_Size(self, *args): return _saga_api.CSG_Buffer_Set_Size(self, *args)
    def Inc_Size(self, *args): return _saga_api.CSG_Buffer_Inc_Size(self, *args)
    def Get_Size(self): return _saga_api.CSG_Buffer_Get_Size(self)
    def Set_Data(self, *args): return _saga_api.CSG_Buffer_Set_Data(self, *args)
    def Get_Data(self, Offset = 0): return _saga_api.CSG_Buffer_Get_Data(self, Offset)
    def Add_Value(self, *args): return _saga_api.CSG_Buffer_Add_Value(self, *args)
    def __iadd__(self, *args): return _saga_api.CSG_Buffer___iadd__(self, *args)
    def Set_Value(self, *args): return _saga_api.CSG_Buffer_Set_Value(self, *args)
    def asShort(self, *args): return _saga_api.CSG_Buffer_asShort(self, *args)
    def asInt(self, *args): return _saga_api.CSG_Buffer_asInt(self, *args)
    def asFloat(self, *args): return _saga_api.CSG_Buffer_asFloat(self, *args)
    def asDouble(self, *args): return _saga_api.CSG_Buffer_asDouble(self, *args)
CSG_Buffer_swigregister = _saga_api.CSG_Buffer_swigregister
CSG_Buffer_swigregister(CSG_Buffer)

class CSG_Bytes(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Bytes, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Bytes, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Bytes(*args)
        try: self.this.append(this)
        except: self.this = this
    def Create(self, *args): return _saga_api.CSG_Bytes_Create(self, *args)
    __swig_destroy__ = _saga_api.delete_CSG_Bytes
    __del__ = lambda self : None;
    def Destroy(self): return _saga_api.CSG_Bytes_Destroy(self)
    def Clear(self): return _saga_api.CSG_Bytes_Clear(self)
    def Rewind(self): return _saga_api.CSG_Bytes_Rewind(self)
    def is_EOF(self): return _saga_api.CSG_Bytes_is_EOF(self)
    def Get_Count(self): return _saga_api.CSG_Bytes_Get_Count(self)
    def Get_Bytes(self, *args): return _saga_api.CSG_Bytes_Get_Bytes(self, *args)
    def __add__(self, *args): return _saga_api.CSG_Bytes___add__(self, *args)
    def Get_Byte(self, *args): return _saga_api.CSG_Bytes_Get_Byte(self, *args)
    def Assign(self, *args): return _saga_api.CSG_Bytes_Assign(self, *args)
    def Add(self, *args): return _saga_api.CSG_Bytes_Add(self, *args)
    def __iadd__(self, *args): return _saga_api.CSG_Bytes___iadd__(self, *args)
    def asByte(self, *args): return _saga_api.CSG_Bytes_asByte(self, *args)
    def asChar(self, *args): return _saga_api.CSG_Bytes_asChar(self, *args)
    def asShort(self, *args): return _saga_api.CSG_Bytes_asShort(self, *args)
    def asWord(self, *args): return _saga_api.CSG_Bytes_asWord(self, *args)
    def asInt(self, *args): return _saga_api.CSG_Bytes_asInt(self, *args)
    def asDWord(self, *args): return _saga_api.CSG_Bytes_asDWord(self, *args)
    def asFloat(self, *args): return _saga_api.CSG_Bytes_asFloat(self, *args)
    def asDouble(self, *args): return _saga_api.CSG_Bytes_asDouble(self, *args)
    def Read_Byte(self): return _saga_api.CSG_Bytes_Read_Byte(self)
    def Read_Char(self): return _saga_api.CSG_Bytes_Read_Char(self)
    def Read_Short(self, bSwapBytes = False): return _saga_api.CSG_Bytes_Read_Short(self, bSwapBytes)
    def Read_Word(self, bSwapBytes = False): return _saga_api.CSG_Bytes_Read_Word(self, bSwapBytes)
    def Read_Int(self, bSwapBytes = False): return _saga_api.CSG_Bytes_Read_Int(self, bSwapBytes)
    def Read_DWord(self, bSwapBytes = False): return _saga_api.CSG_Bytes_Read_DWord(self, bSwapBytes)
    def Read_Float(self, bSwapBytes = False): return _saga_api.CSG_Bytes_Read_Float(self, bSwapBytes)
    def Read_Double(self, bSwapBytes = False): return _saga_api.CSG_Bytes_Read_Double(self, bSwapBytes)
    def toHexString(self): return _saga_api.CSG_Bytes_toHexString(self)
    def fromHexString(self, *args): return _saga_api.CSG_Bytes_fromHexString(self, *args)
CSG_Bytes_swigregister = _saga_api.CSG_Bytes_swigregister
CSG_Bytes_swigregister(CSG_Bytes)

class CSG_Bytes_Array(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Bytes_Array, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Bytes_Array, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _saga_api.new_CSG_Bytes_Array()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Bytes_Array
    __del__ = lambda self : None;
    def Destroy(self): return _saga_api.CSG_Bytes_Array_Destroy(self)
    def Get_Count(self): return _saga_api.CSG_Bytes_Array_Get_Count(self)
    def Get_Bytes(self, *args): return _saga_api.CSG_Bytes_Array_Get_Bytes(self, *args)
    def Add(self): return _saga_api.CSG_Bytes_Array_Add(self)
CSG_Bytes_Array_swigregister = _saga_api.CSG_Bytes_Array_swigregister
CSG_Bytes_Array_swigregister(CSG_Bytes_Array)

class CSG_Stack(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Stack, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Stack, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Stack(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Stack
    __del__ = lambda self : None;
    def Get_RecordSize(self): return _saga_api.CSG_Stack_Get_RecordSize(self)
    def Get_Size(self): return _saga_api.CSG_Stack_Get_Size(self)
    def Clear(self): return _saga_api.CSG_Stack_Clear(self)
    def Destroy(self): return _saga_api.CSG_Stack_Destroy(self)
CSG_Stack_swigregister = _saga_api.CSG_Stack_swigregister
CSG_Stack_swigregister(CSG_Stack)

SG_DATATYPE_Bit = _saga_api.SG_DATATYPE_Bit
SG_DATATYPE_Byte = _saga_api.SG_DATATYPE_Byte
SG_DATATYPE_Char = _saga_api.SG_DATATYPE_Char
SG_DATATYPE_Word = _saga_api.SG_DATATYPE_Word
SG_DATATYPE_Short = _saga_api.SG_DATATYPE_Short
SG_DATATYPE_DWord = _saga_api.SG_DATATYPE_DWord
SG_DATATYPE_Int = _saga_api.SG_DATATYPE_Int
SG_DATATYPE_ULong = _saga_api.SG_DATATYPE_ULong
SG_DATATYPE_Long = _saga_api.SG_DATATYPE_Long
SG_DATATYPE_Float = _saga_api.SG_DATATYPE_Float
SG_DATATYPE_Double = _saga_api.SG_DATATYPE_Double
SG_DATATYPE_String = _saga_api.SG_DATATYPE_String
SG_DATATYPE_Date = _saga_api.SG_DATATYPE_Date
SG_DATATYPE_Color = _saga_api.SG_DATATYPE_Color
SG_DATATYPE_Binary = _saga_api.SG_DATATYPE_Binary
SG_DATATYPE_Undefined = _saga_api.SG_DATATYPE_Undefined

def SG_Data_Type_Get_Size(*args):
  return _saga_api.SG_Data_Type_Get_Size(*args)
SG_Data_Type_Get_Size = _saga_api.SG_Data_Type_Get_Size

def SG_Data_Type_Get_Name(*args):
  return _saga_api.SG_Data_Type_Get_Name(*args)
SG_Data_Type_Get_Name = _saga_api.SG_Data_Type_Get_Name

def SG_Data_Type_is_Numeric(*args):
  return _saga_api.SG_Data_Type_is_Numeric(*args)
SG_Data_Type_is_Numeric = _saga_api.SG_Data_Type_is_Numeric

def SG_DataType_Range_Check(*args):
  return _saga_api.SG_DataType_Range_Check(*args)
SG_DataType_Range_Check = _saga_api.SG_DataType_Range_Check
SG_FILE_R = _saga_api.SG_FILE_R
SG_FILE_W = _saga_api.SG_FILE_W
SG_FILE_RW = _saga_api.SG_FILE_RW
SG_FILE_WA = _saga_api.SG_FILE_WA
SG_FILE_RWA = _saga_api.SG_FILE_RWA
SG_FILE_START = _saga_api.SG_FILE_START
SG_FILE_CURRENT = _saga_api.SG_FILE_CURRENT
SG_FILE_END = _saga_api.SG_FILE_END
class CSG_File(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_File, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_File, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_File(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_File
    __del__ = lambda self : None;
    def Attach(self, *args): return _saga_api.CSG_File_Attach(self, *args)
    def Detach(self): return _saga_api.CSG_File_Detach(self)
    def Get_Stream(self): return _saga_api.CSG_File_Get_Stream(self)
    def Get_UnicodeFlag(self): return _saga_api.CSG_File_Get_UnicodeFlag(self)
    def Set_UnicodeFlag(self, *args): return _saga_api.CSG_File_Set_UnicodeFlag(self, *args)
    def Open(self, *args): return _saga_api.CSG_File_Open(self, *args)
    def Close(self): return _saga_api.CSG_File_Close(self)
    def is_Open(self): return _saga_api.CSG_File_is_Open(self)
    def is_EOF(self): return _saga_api.CSG_File_is_EOF(self)
    def Length(self): return _saga_api.CSG_File_Length(self)
    def Seek(self, *args): return _saga_api.CSG_File_Seek(self, *args)
    def Seek_Start(self): return _saga_api.CSG_File_Seek_Start(self)
    def Seek_End(self): return _saga_api.CSG_File_Seek_End(self)
    def Tell(self): return _saga_api.CSG_File_Tell(self)
    def Flush(self): return _saga_api.CSG_File_Flush(self)
    def Printf(self, *args): return _saga_api.CSG_File_Printf(self, *args)
    def Scanf(self, *args): return _saga_api.CSG_File_Scanf(self, *args)
    def Get_Character(self): return _saga_api.CSG_File_Get_Character(self)
    def Read(self, *args): return _saga_api.CSG_File_Read(self, *args)
    def Write(self, *args): return _saga_api.CSG_File_Write(self, *args)
    def Read_Line(self, *args): return _saga_api.CSG_File_Read_Line(self, *args)
    def Read_Int(self, bBigEndian = False): return _saga_api.CSG_File_Read_Int(self, bBigEndian)
    def Write_Int(self, *args): return _saga_api.CSG_File_Write_Int(self, *args)
    def Read_Double(self, bBigEndian = False): return _saga_api.CSG_File_Read_Double(self, bBigEndian)
    def Write_Double(self, *args): return _saga_api.CSG_File_Write_Double(self, *args)
    def Scan(self, *args): return _saga_api.CSG_File_Scan(self, *args)
    def Scan_Int(self): return _saga_api.CSG_File_Scan_Int(self)
    def Scan_Double(self): return _saga_api.CSG_File_Scan_Double(self)
    def Scan_String(self, *args): return _saga_api.CSG_File_Scan_String(self, *args)
CSG_File_swigregister = _saga_api.CSG_File_swigregister
CSG_File_swigregister(CSG_File)
cvar = _saga_api.cvar
gSG_Data_Type_Identifier = cvar.gSG_Data_Type_Identifier


def SG_Dir_Exists(*args):
  return _saga_api.SG_Dir_Exists(*args)
SG_Dir_Exists = _saga_api.SG_Dir_Exists

def SG_Dir_Create(*args):
  return _saga_api.SG_Dir_Create(*args)
SG_Dir_Create = _saga_api.SG_Dir_Create

def SG_Dir_Get_Current():
  return _saga_api.SG_Dir_Get_Current()
SG_Dir_Get_Current = _saga_api.SG_Dir_Get_Current

def SG_File_Exists(*args):
  return _saga_api.SG_File_Exists(*args)
SG_File_Exists = _saga_api.SG_File_Exists

def SG_File_Delete(*args):
  return _saga_api.SG_File_Delete(*args)
SG_File_Delete = _saga_api.SG_File_Delete

def SG_File_Get_TmpName(*args):
  return _saga_api.SG_File_Get_TmpName(*args)
SG_File_Get_TmpName = _saga_api.SG_File_Get_TmpName

def SG_File_Get_Name(*args):
  return _saga_api.SG_File_Get_Name(*args)
SG_File_Get_Name = _saga_api.SG_File_Get_Name

def SG_File_Get_Path(*args):
  return _saga_api.SG_File_Get_Path(*args)
SG_File_Get_Path = _saga_api.SG_File_Get_Path

def SG_File_Cmp_Extension(*args):
  return _saga_api.SG_File_Cmp_Extension(*args)
SG_File_Cmp_Extension = _saga_api.SG_File_Cmp_Extension

def SG_File_Get_Extension(*args):
  return _saga_api.SG_File_Get_Extension(*args)
SG_File_Get_Extension = _saga_api.SG_File_Get_Extension

def SG_File_Set_Extension(*args):
  return _saga_api.SG_File_Set_Extension(*args)
SG_File_Set_Extension = _saga_api.SG_File_Set_Extension

def SG_Read_Line(*args):
  return _saga_api.SG_Read_Line(*args)
SG_Read_Line = _saga_api.SG_Read_Line

def SG_Set_Environment(*args):
  return _saga_api.SG_Set_Environment(*args)
SG_Set_Environment = _saga_api.SG_Set_Environment
SG_COLOR_NONE = _saga_api.SG_COLOR_NONE
SG_COLOR_RANDOM = _saga_api.SG_COLOR_RANDOM
SG_COLORS_DEFAULT = _saga_api.SG_COLORS_DEFAULT
SG_COLORS_DEFAULT_BRIGHT = _saga_api.SG_COLORS_DEFAULT_BRIGHT
SG_COLORS_BLACK_WHITE = _saga_api.SG_COLORS_BLACK_WHITE
SG_COLORS_BLACK_RED = _saga_api.SG_COLORS_BLACK_RED
SG_COLORS_BLACK_GREEN = _saga_api.SG_COLORS_BLACK_GREEN
SG_COLORS_BLACK_BLUE = _saga_api.SG_COLORS_BLACK_BLUE
SG_COLORS_WHITE_RED = _saga_api.SG_COLORS_WHITE_RED
SG_COLORS_WHITE_GREEN = _saga_api.SG_COLORS_WHITE_GREEN
SG_COLORS_WHITE_BLUE = _saga_api.SG_COLORS_WHITE_BLUE
SG_COLORS_YELLOW_RED = _saga_api.SG_COLORS_YELLOW_RED
SG_COLORS_YELLOW_GREEN = _saga_api.SG_COLORS_YELLOW_GREEN
SG_COLORS_YELLOW_BLUE = _saga_api.SG_COLORS_YELLOW_BLUE
SG_COLORS_RED_GREEN = _saga_api.SG_COLORS_RED_GREEN
SG_COLORS_RED_BLUE = _saga_api.SG_COLORS_RED_BLUE
SG_COLORS_GREEN_BLUE = _saga_api.SG_COLORS_GREEN_BLUE
SG_COLORS_RED_GREY_BLUE = _saga_api.SG_COLORS_RED_GREY_BLUE
SG_COLORS_RED_GREY_GREEN = _saga_api.SG_COLORS_RED_GREY_GREEN
SG_COLORS_GREEN_GREY_BLUE = _saga_api.SG_COLORS_GREEN_GREY_BLUE
SG_COLORS_RED_GREEN_BLUE = _saga_api.SG_COLORS_RED_GREEN_BLUE
SG_COLORS_RED_BLUE_GREEN = _saga_api.SG_COLORS_RED_BLUE_GREEN
SG_COLORS_GREEN_RED_BLUE = _saga_api.SG_COLORS_GREEN_RED_BLUE
SG_COLORS_RAINBOW = _saga_api.SG_COLORS_RAINBOW
SG_COLORS_NEON = _saga_api.SG_COLORS_NEON
SG_COLORS_COUNT = _saga_api.SG_COLORS_COUNT
class CSG_Colors(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Colors, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Colors, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Colors(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Colors
    __del__ = lambda self : None;
    def Destroy(self): return _saga_api.CSG_Colors_Destroy(self)
    def Set_Count(self, *args): return _saga_api.CSG_Colors_Set_Count(self, *args)
    def Get_Count(self): return _saga_api.CSG_Colors_Get_Count(self)
    def Set_Color(self, *args): return _saga_api.CSG_Colors_Set_Color(self, *args)
    def Set_Red(self, *args): return _saga_api.CSG_Colors_Set_Red(self, *args)
    def Set_Green(self, *args): return _saga_api.CSG_Colors_Set_Green(self, *args)
    def Set_Blue(self, *args): return _saga_api.CSG_Colors_Set_Blue(self, *args)
    def Set_Brightness(self, *args): return _saga_api.CSG_Colors_Set_Brightness(self, *args)
    def Get_Color(self, *args): return _saga_api.CSG_Colors_Get_Color(self, *args)
    def Get_Red(self, *args): return _saga_api.CSG_Colors_Get_Red(self, *args)
    def Get_Green(self, *args): return _saga_api.CSG_Colors_Get_Green(self, *args)
    def Get_Blue(self, *args): return _saga_api.CSG_Colors_Get_Blue(self, *args)
    def Get_Brightness(self, *args): return _saga_api.CSG_Colors_Get_Brightness(self, *args)
    def Set_Default(self, nColors = 100): return _saga_api.CSG_Colors_Set_Default(self, nColors)
    def Set_Palette(self, *args): return _saga_api.CSG_Colors_Set_Palette(self, *args)
    def Set_Ramp(self, *args): return _saga_api.CSG_Colors_Set_Ramp(self, *args)
    def Set_Ramp_Brighness(self, *args): return _saga_api.CSG_Colors_Set_Ramp_Brighness(self, *args)
    def Random(self): return _saga_api.CSG_Colors_Random(self)
    def Invert(self): return _saga_api.CSG_Colors_Invert(self)
    def Revert(self): return _saga_api.CSG_Colors_Revert(self)
    def Assign(self, *args): return _saga_api.CSG_Colors_Assign(self, *args)
    def Load(self, *args): return _saga_api.CSG_Colors_Load(self, *args)
    def Save(self, *args): return _saga_api.CSG_Colors_Save(self, *args)
    def Serialize(self, *args): return _saga_api.CSG_Colors_Serialize(self, *args)
    def to_Text(self, *args): return _saga_api.CSG_Colors_to_Text(self, *args)
    def from_Text(self, *args): return _saga_api.CSG_Colors_from_Text(self, *args)
CSG_Colors_swigregister = _saga_api.CSG_Colors_swigregister
CSG_Colors_swigregister(CSG_Colors)

def SG_File_Make_Path(*args):
  return _saga_api.SG_File_Make_Path(*args)
SG_File_Make_Path = _saga_api.SG_File_Make_Path

def SG_Get_Environment(*args):
  return _saga_api.SG_Get_Environment(*args)
SG_Get_Environment = _saga_api.SG_Get_Environment

class CSG_Translator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Translator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Translator, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _saga_api.delete_CSG_Translator
    __del__ = lambda self : None;
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Translator(*args)
        try: self.this.append(this)
        except: self.this = this
    def Create(self, *args): return _saga_api.CSG_Translator_Create(self, *args)
    def Destroy(self): return _saga_api.CSG_Translator_Destroy(self)
    def is_CaseSensitive(self): return _saga_api.CSG_Translator_is_CaseSensitive(self)
    def Get_Count(self): return _saga_api.CSG_Translator_Get_Count(self)
    def Get_Text(self, *args): return _saga_api.CSG_Translator_Get_Text(self, *args)
    def Get_Translation(self, *args): return _saga_api.CSG_Translator_Get_Translation(self, *args)
CSG_Translator_swigregister = _saga_api.CSG_Translator_swigregister
CSG_Translator_swigregister(CSG_Translator)


def SG_Get_Translator():
  return _saga_api.SG_Get_Translator()
SG_Get_Translator = _saga_api.SG_Get_Translator

def SG_Translate(*args):
  return _saga_api.SG_Translate(*args)
SG_Translate = _saga_api.SG_Translate
SG_UI_MSG_STYLE_NORMAL = _saga_api.SG_UI_MSG_STYLE_NORMAL
SG_UI_MSG_STYLE_BOLD = _saga_api.SG_UI_MSG_STYLE_BOLD
SG_UI_MSG_STYLE_ITALIC = _saga_api.SG_UI_MSG_STYLE_ITALIC
SG_UI_MSG_STYLE_SUCCESS = _saga_api.SG_UI_MSG_STYLE_SUCCESS
SG_UI_MSG_STYLE_FAILURE = _saga_api.SG_UI_MSG_STYLE_FAILURE
SG_UI_MSG_STYLE_BIG = _saga_api.SG_UI_MSG_STYLE_BIG
SG_UI_MSG_STYLE_SMALL = _saga_api.SG_UI_MSG_STYLE_SMALL
SG_UI_MSG_STYLE_01 = _saga_api.SG_UI_MSG_STYLE_01
SG_UI_MSG_STYLE_02 = _saga_api.SG_UI_MSG_STYLE_02
SG_UI_MSG_STYLE_03 = _saga_api.SG_UI_MSG_STYLE_03
SG_UI_DATAOBJECT_UPDATE_ONLY = _saga_api.SG_UI_DATAOBJECT_UPDATE_ONLY
SG_UI_DATAOBJECT_SHOW = _saga_api.SG_UI_DATAOBJECT_SHOW
SG_UI_DATAOBJECT_SHOW_NEW_MAP = _saga_api.SG_UI_DATAOBJECT_SHOW_NEW_MAP
SG_UI_DATAOBJECT_SHOW_LAST_MAP = _saga_api.SG_UI_DATAOBJECT_SHOW_LAST_MAP
CALLBACK_PROCESS_GET_OKAY = _saga_api.CALLBACK_PROCESS_GET_OKAY
CALLBACK_PROCESS_SET_OKAY = _saga_api.CALLBACK_PROCESS_SET_OKAY
CALLBACK_PROCESS_SET_PROGRESS = _saga_api.CALLBACK_PROCESS_SET_PROGRESS
CALLBACK_PROCESS_SET_READY = _saga_api.CALLBACK_PROCESS_SET_READY
CALLBACK_PROCESS_SET_TEXT = _saga_api.CALLBACK_PROCESS_SET_TEXT
CALLBACK_STOP_EXECUTION = _saga_api.CALLBACK_STOP_EXECUTION
CALLBACK_DLG_MESSAGE = _saga_api.CALLBACK_DLG_MESSAGE
CALLBACK_DLG_CONTINUE = _saga_api.CALLBACK_DLG_CONTINUE
CALLBACK_DLG_ERROR = _saga_api.CALLBACK_DLG_ERROR
CALLBACK_DLG_PARAMETERS = _saga_api.CALLBACK_DLG_PARAMETERS
CALLBACK_MESSAGE_ADD = _saga_api.CALLBACK_MESSAGE_ADD
CALLBACK_MESSAGE_ADD_ERROR = _saga_api.CALLBACK_MESSAGE_ADD_ERROR
CALLBACK_MESSAGE_ADD_EXECUTION = _saga_api.CALLBACK_MESSAGE_ADD_EXECUTION
CALLBACK_DATAOBJECT_FIND_BY_FILE = _saga_api.CALLBACK_DATAOBJECT_FIND_BY_FILE
CALLBACK_DATAOBJECT_CHECK = _saga_api.CALLBACK_DATAOBJECT_CHECK
CALLBACK_DATAOBJECT_ADD = _saga_api.CALLBACK_DATAOBJECT_ADD
CALLBACK_DATAOBJECT_UPDATE = _saga_api.CALLBACK_DATAOBJECT_UPDATE
CALLBACK_DATAOBJECT_SHOW = _saga_api.CALLBACK_DATAOBJECT_SHOW
CALLBACK_DATAOBJECT_ASIMAGE = _saga_api.CALLBACK_DATAOBJECT_ASIMAGE
CALLBACK_DATAOBJECT_COLORS_GET = _saga_api.CALLBACK_DATAOBJECT_COLORS_GET
CALLBACK_DATAOBJECT_COLORS_SET = _saga_api.CALLBACK_DATAOBJECT_COLORS_SET
CALLBACK_DATAOBJECT_PARAMS_GET = _saga_api.CALLBACK_DATAOBJECT_PARAMS_GET
CALLBACK_DATAOBJECT_PARAMS_SET = _saga_api.CALLBACK_DATAOBJECT_PARAMS_SET
CALLBACK_DATAOBJECT_GET_ALL = _saga_api.CALLBACK_DATAOBJECT_GET_ALL
CALLBACK_GUI_GET_WINDOW = _saga_api.CALLBACK_GUI_GET_WINDOW
CALLBACK_GET_APP_PATH = _saga_api.CALLBACK_GET_APP_PATH
class CSG_UI_Parameter(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_UI_Parameter, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_UI_Parameter, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_UI_Parameter(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_setmethods__["True"] = _saga_api.CSG_UI_Parameter_True_set
    __swig_getmethods__["True"] = _saga_api.CSG_UI_Parameter_True_get
    if _newclass:True = _swig_property(_saga_api.CSG_UI_Parameter_True_get, _saga_api.CSG_UI_Parameter_True_set)
    __swig_setmethods__["Number"] = _saga_api.CSG_UI_Parameter_Number_set
    __swig_getmethods__["Number"] = _saga_api.CSG_UI_Parameter_Number_get
    if _newclass:Number = _swig_property(_saga_api.CSG_UI_Parameter_Number_get, _saga_api.CSG_UI_Parameter_Number_set)
    __swig_setmethods__["Pointer"] = _saga_api.CSG_UI_Parameter_Pointer_set
    __swig_getmethods__["Pointer"] = _saga_api.CSG_UI_Parameter_Pointer_get
    if _newclass:Pointer = _swig_property(_saga_api.CSG_UI_Parameter_Pointer_get, _saga_api.CSG_UI_Parameter_Pointer_set)
    __swig_destroy__ = _saga_api.delete_CSG_UI_Parameter
    __del__ = lambda self : None;
CSG_UI_Parameter_swigregister = _saga_api.CSG_UI_Parameter_swigregister
CSG_UI_Parameter_swigregister(CSG_UI_Parameter)


def SG_Set_UI_Callback(*args):
  return _saga_api.SG_Set_UI_Callback(*args)
SG_Set_UI_Callback = _saga_api.SG_Set_UI_Callback

def SG_Get_UI_Callback():
  return _saga_api.SG_Get_UI_Callback()
SG_Get_UI_Callback = _saga_api.SG_Get_UI_Callback

def SG_UI_Progress_Lock(*args):
  return _saga_api.SG_UI_Progress_Lock(*args)
SG_UI_Progress_Lock = _saga_api.SG_UI_Progress_Lock

def SG_UI_Process_Set_Progress(*args):
  return _saga_api.SG_UI_Process_Set_Progress(*args)
SG_UI_Process_Set_Progress = _saga_api.SG_UI_Process_Set_Progress

def SG_UI_Process_Set_Ready():
  return _saga_api.SG_UI_Process_Set_Ready()
SG_UI_Process_Set_Ready = _saga_api.SG_UI_Process_Set_Ready

def SG_UI_Process_Set_Text(*args):
  return _saga_api.SG_UI_Process_Set_Text(*args)
SG_UI_Process_Set_Text = _saga_api.SG_UI_Process_Set_Text

def SG_UI_Stop_Execution(*args):
  return _saga_api.SG_UI_Stop_Execution(*args)
SG_UI_Stop_Execution = _saga_api.SG_UI_Stop_Execution

def SG_UI_Dlg_Message(*args):
  return _saga_api.SG_UI_Dlg_Message(*args)
SG_UI_Dlg_Message = _saga_api.SG_UI_Dlg_Message

def SG_UI_Dlg_Continue(*args):
  return _saga_api.SG_UI_Dlg_Continue(*args)
SG_UI_Dlg_Continue = _saga_api.SG_UI_Dlg_Continue

def SG_UI_Dlg_Error(*args):
  return _saga_api.SG_UI_Dlg_Error(*args)
SG_UI_Dlg_Error = _saga_api.SG_UI_Dlg_Error

def SG_UI_Dlg_Parameters(*args):
  return _saga_api.SG_UI_Dlg_Parameters(*args)
SG_UI_Dlg_Parameters = _saga_api.SG_UI_Dlg_Parameters

def SG_UI_Msg_Lock(*args):
  return _saga_api.SG_UI_Msg_Lock(*args)
SG_UI_Msg_Lock = _saga_api.SG_UI_Msg_Lock

def SG_UI_Msg_Add_Error(*args):
  return _saga_api.SG_UI_Msg_Add_Error(*args)
SG_UI_Msg_Add_Error = _saga_api.SG_UI_Msg_Add_Error

def SG_UI_DataObject_Find(*args):
  return _saga_api.SG_UI_DataObject_Find(*args)
SG_UI_DataObject_Find = _saga_api.SG_UI_DataObject_Find

def SG_UI_DataObject_Check(*args):
  return _saga_api.SG_UI_DataObject_Check(*args)
SG_UI_DataObject_Check = _saga_api.SG_UI_DataObject_Check

def SG_UI_DataObject_Add(*args):
  return _saga_api.SG_UI_DataObject_Add(*args)
SG_UI_DataObject_Add = _saga_api.SG_UI_DataObject_Add

def SG_UI_DataObject_Update(*args):
  return _saga_api.SG_UI_DataObject_Update(*args)
SG_UI_DataObject_Update = _saga_api.SG_UI_DataObject_Update

def SG_UI_DataObject_Show(*args):
  return _saga_api.SG_UI_DataObject_Show(*args)
SG_UI_DataObject_Show = _saga_api.SG_UI_DataObject_Show

def SG_UI_DataObject_asImage(*args):
  return _saga_api.SG_UI_DataObject_asImage(*args)
SG_UI_DataObject_asImage = _saga_api.SG_UI_DataObject_asImage

def SG_UI_DataObject_Colors_Get(*args):
  return _saga_api.SG_UI_DataObject_Colors_Get(*args)
SG_UI_DataObject_Colors_Get = _saga_api.SG_UI_DataObject_Colors_Get

def SG_UI_DataObject_Colors_Set(*args):
  return _saga_api.SG_UI_DataObject_Colors_Set(*args)
SG_UI_DataObject_Colors_Set = _saga_api.SG_UI_DataObject_Colors_Set

def SG_UI_DataObject_Params_Get(*args):
  return _saga_api.SG_UI_DataObject_Params_Get(*args)
SG_UI_DataObject_Params_Get = _saga_api.SG_UI_DataObject_Params_Get

def SG_UI_DataObject_Params_Set(*args):
  return _saga_api.SG_UI_DataObject_Params_Set(*args)
SG_UI_DataObject_Params_Set = _saga_api.SG_UI_DataObject_Params_Set

def SG_UI_DataObject_Get_All(*args):
  return _saga_api.SG_UI_DataObject_Get_All(*args)
SG_UI_DataObject_Get_All = _saga_api.SG_UI_DataObject_Get_All

def SG_UI_Get_Window_Main():
  return _saga_api.SG_UI_Get_Window_Main()
SG_UI_Get_Window_Main = _saga_api.SG_UI_Get_Window_Main

def SG_UI_Get_Application_Path():
  return _saga_api.SG_UI_Get_Application_Path()
SG_UI_Get_Application_Path = _saga_api.SG_UI_Get_Application_Path
class CSG_MetaData(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_MetaData, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_MetaData, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_MetaData(*args)
        try: self.this.append(this)
        except: self.this = this
    def Create(self, *args): return _saga_api.CSG_MetaData_Create(self, *args)
    __swig_destroy__ = _saga_api.delete_CSG_MetaData
    __del__ = lambda self : None;
    def Destroy(self): return _saga_api.CSG_MetaData_Destroy(self)
    def Load(self, *args): return _saga_api.CSG_MetaData_Load(self, *args)
    def Save(self, *args): return _saga_api.CSG_MetaData_Save(self, *args)
    def Load_WKT(self, *args): return _saga_api.CSG_MetaData_Load_WKT(self, *args)
    def Save_WKT(self, *args): return _saga_api.CSG_MetaData_Save_WKT(self, *args)
    def Assign(self, *args): return _saga_api.CSG_MetaData_Assign(self, *args)
    def __iadd__(self, *args): return _saga_api.CSG_MetaData___iadd__(self, *args)
    def Get_Name(self): return _saga_api.CSG_MetaData_Get_Name(self)
    def Set_Name(self, *args): return _saga_api.CSG_MetaData_Set_Name(self, *args)
    def Get_Content(self): return _saga_api.CSG_MetaData_Get_Content(self)
    def Set_Content(self, *args): return _saga_api.CSG_MetaData_Set_Content(self, *args)
    def Fmt_Content(self, *args): return _saga_api.CSG_MetaData_Fmt_Content(self, *args)
    def Cmp_Content(self, *args): return _saga_api.CSG_MetaData_Cmp_Content(self, *args)
    def Get_Children_Count(self): return _saga_api.CSG_MetaData_Get_Children_Count(self)
    def Get_Child(self, *args): return _saga_api.CSG_MetaData_Get_Child(self, *args)
    def Add_Child(self, *args): return _saga_api.CSG_MetaData_Add_Child(self, *args)
    def Del_Child(self, *args): return _saga_api.CSG_MetaData_Del_Child(self, *args)
    def Del_Children(self, Depth = 0): return _saga_api.CSG_MetaData_Del_Children(self, Depth)
    def is_Valid(self): return _saga_api.CSG_MetaData_is_Valid(self)
    def Get_Property_Count(self): return _saga_api.CSG_MetaData_Get_Property_Count(self)
    def Get_Property_Name(self, *args): return _saga_api.CSG_MetaData_Get_Property_Name(self, *args)
    def Get_Property(self, *args): return _saga_api.CSG_MetaData_Get_Property(self, *args)
    def Add_Property(self, *args): return _saga_api.CSG_MetaData_Add_Property(self, *args)
    def Set_Property(self, *args): return _saga_api.CSG_MetaData_Set_Property(self, *args)
    def Cmp_Property(self, *args): return _saga_api.CSG_MetaData_Cmp_Property(self, *args)
CSG_MetaData_swigregister = _saga_api.CSG_MetaData_swigregister
CSG_MetaData_swigregister(CSG_MetaData)

def SG_UI_Process_Get_Okay(bBlink = False):
  return _saga_api.SG_UI_Process_Get_Okay(bBlink)
SG_UI_Process_Get_Okay = _saga_api.SG_UI_Process_Get_Okay

def SG_UI_Process_Set_Okay(bOkay = True):
  return _saga_api.SG_UI_Process_Set_Okay(bOkay)
SG_UI_Process_Set_Okay = _saga_api.SG_UI_Process_Set_Okay

def SG_UI_Msg_Add(*args):
  return _saga_api.SG_UI_Msg_Add(*args)
SG_UI_Msg_Add = _saga_api.SG_UI_Msg_Add

def SG_UI_Msg_Add_Execution(*args):
  return _saga_api.SG_UI_Msg_Add_Execution(*args)
SG_UI_Msg_Add_Execution = _saga_api.SG_UI_Msg_Add_Execution

INTERSECTION_None = _saga_api.INTERSECTION_None
INTERSECTION_Identical = _saga_api.INTERSECTION_Identical
INTERSECTION_Overlaps = _saga_api.INTERSECTION_Overlaps
INTERSECTION_Contained = _saga_api.INTERSECTION_Contained
INTERSECTION_Contains = _saga_api.INTERSECTION_Contains
SG_POINT_TYPE_XY = _saga_api.SG_POINT_TYPE_XY
SG_POINT_TYPE_XYZ = _saga_api.SG_POINT_TYPE_XYZ
SG_POINT_TYPE_XYZM = _saga_api.SG_POINT_TYPE_XYZM
SG_POINT_TYPE_XY_Int = _saga_api.SG_POINT_TYPE_XY_Int
class TSG_Point(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, TSG_Point, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, TSG_Point, name)
    __repr__ = _swig_repr
    __swig_setmethods__["x"] = _saga_api.TSG_Point_x_set
    __swig_getmethods__["x"] = _saga_api.TSG_Point_x_get
    if _newclass:x = _swig_property(_saga_api.TSG_Point_x_get, _saga_api.TSG_Point_x_set)
    __swig_setmethods__["y"] = _saga_api.TSG_Point_y_set
    __swig_getmethods__["y"] = _saga_api.TSG_Point_y_get
    if _newclass:y = _swig_property(_saga_api.TSG_Point_y_get, _saga_api.TSG_Point_y_set)
    def __init__(self): 
        this = _saga_api.new_TSG_Point()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_TSG_Point
    __del__ = lambda self : None;
TSG_Point_swigregister = _saga_api.TSG_Point_swigregister
TSG_Point_swigregister(TSG_Point)

class TSG_Point_Z(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, TSG_Point_Z, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, TSG_Point_Z, name)
    __repr__ = _swig_repr
    __swig_setmethods__["x"] = _saga_api.TSG_Point_Z_x_set
    __swig_getmethods__["x"] = _saga_api.TSG_Point_Z_x_get
    if _newclass:x = _swig_property(_saga_api.TSG_Point_Z_x_get, _saga_api.TSG_Point_Z_x_set)
    __swig_setmethods__["y"] = _saga_api.TSG_Point_Z_y_set
    __swig_getmethods__["y"] = _saga_api.TSG_Point_Z_y_get
    if _newclass:y = _swig_property(_saga_api.TSG_Point_Z_y_get, _saga_api.TSG_Point_Z_y_set)
    __swig_setmethods__["z"] = _saga_api.TSG_Point_Z_z_set
    __swig_getmethods__["z"] = _saga_api.TSG_Point_Z_z_get
    if _newclass:z = _swig_property(_saga_api.TSG_Point_Z_z_get, _saga_api.TSG_Point_Z_z_set)
    def __init__(self): 
        this = _saga_api.new_TSG_Point_Z()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_TSG_Point_Z
    __del__ = lambda self : None;
TSG_Point_Z_swigregister = _saga_api.TSG_Point_Z_swigregister
TSG_Point_Z_swigregister(TSG_Point_Z)

class TSG_Point_ZM(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, TSG_Point_ZM, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, TSG_Point_ZM, name)
    __repr__ = _swig_repr
    __swig_setmethods__["x"] = _saga_api.TSG_Point_ZM_x_set
    __swig_getmethods__["x"] = _saga_api.TSG_Point_ZM_x_get
    if _newclass:x = _swig_property(_saga_api.TSG_Point_ZM_x_get, _saga_api.TSG_Point_ZM_x_set)
    __swig_setmethods__["y"] = _saga_api.TSG_Point_ZM_y_set
    __swig_getmethods__["y"] = _saga_api.TSG_Point_ZM_y_get
    if _newclass:y = _swig_property(_saga_api.TSG_Point_ZM_y_get, _saga_api.TSG_Point_ZM_y_set)
    __swig_setmethods__["z"] = _saga_api.TSG_Point_ZM_z_set
    __swig_getmethods__["z"] = _saga_api.TSG_Point_ZM_z_get
    if _newclass:z = _swig_property(_saga_api.TSG_Point_ZM_z_get, _saga_api.TSG_Point_ZM_z_set)
    __swig_setmethods__["m"] = _saga_api.TSG_Point_ZM_m_set
    __swig_getmethods__["m"] = _saga_api.TSG_Point_ZM_m_get
    if _newclass:m = _swig_property(_saga_api.TSG_Point_ZM_m_get, _saga_api.TSG_Point_ZM_m_set)
    def __init__(self): 
        this = _saga_api.new_TSG_Point_ZM()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_TSG_Point_ZM
    __del__ = lambda self : None;
TSG_Point_ZM_swigregister = _saga_api.TSG_Point_ZM_swigregister
TSG_Point_ZM_swigregister(TSG_Point_ZM)

class TSG_Point_Int(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, TSG_Point_Int, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, TSG_Point_Int, name)
    __repr__ = _swig_repr
    __swig_setmethods__["x"] = _saga_api.TSG_Point_Int_x_set
    __swig_getmethods__["x"] = _saga_api.TSG_Point_Int_x_get
    if _newclass:x = _swig_property(_saga_api.TSG_Point_Int_x_get, _saga_api.TSG_Point_Int_x_set)
    __swig_setmethods__["y"] = _saga_api.TSG_Point_Int_y_set
    __swig_getmethods__["y"] = _saga_api.TSG_Point_Int_y_get
    if _newclass:y = _swig_property(_saga_api.TSG_Point_Int_y_get, _saga_api.TSG_Point_Int_y_set)
    def __init__(self): 
        this = _saga_api.new_TSG_Point_Int()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_TSG_Point_Int
    __del__ = lambda self : None;
TSG_Point_Int_swigregister = _saga_api.TSG_Point_Int_swigregister
TSG_Point_Int_swigregister(TSG_Point_Int)

class TSG_Rect(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, TSG_Rect, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, TSG_Rect, name)
    __repr__ = _swig_repr
    __swig_setmethods__["xMin"] = _saga_api.TSG_Rect_xMin_set
    __swig_getmethods__["xMin"] = _saga_api.TSG_Rect_xMin_get
    if _newclass:xMin = _swig_property(_saga_api.TSG_Rect_xMin_get, _saga_api.TSG_Rect_xMin_set)
    __swig_setmethods__["yMin"] = _saga_api.TSG_Rect_yMin_set
    __swig_getmethods__["yMin"] = _saga_api.TSG_Rect_yMin_get
    if _newclass:yMin = _swig_property(_saga_api.TSG_Rect_yMin_get, _saga_api.TSG_Rect_yMin_set)
    __swig_setmethods__["xMax"] = _saga_api.TSG_Rect_xMax_set
    __swig_getmethods__["xMax"] = _saga_api.TSG_Rect_xMax_get
    if _newclass:xMax = _swig_property(_saga_api.TSG_Rect_xMax_get, _saga_api.TSG_Rect_xMax_set)
    __swig_setmethods__["yMax"] = _saga_api.TSG_Rect_yMax_set
    __swig_getmethods__["yMax"] = _saga_api.TSG_Rect_yMax_get
    if _newclass:yMax = _swig_property(_saga_api.TSG_Rect_yMax_get, _saga_api.TSG_Rect_yMax_set)
    def __init__(self): 
        this = _saga_api.new_TSG_Rect()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_TSG_Rect
    __del__ = lambda self : None;
TSG_Rect_swigregister = _saga_api.TSG_Rect_swigregister
TSG_Rect_swigregister(TSG_Rect)

class CSG_Point(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Point, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Point, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Point(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Point
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Point_Get_Type(self)
    def Get_X(self): return _saga_api.CSG_Point_Get_X(self)
    def Set_X(self, *args): return _saga_api.CSG_Point_Set_X(self, *args)
    def Get_Y(self): return _saga_api.CSG_Point_Get_Y(self)
    def Set_Y(self, *args): return _saga_api.CSG_Point_Set_Y(self, *args)
    def __eq__(self, *args): return _saga_api.CSG_Point___eq__(self, *args)
    def __ne__(self, *args): return _saga_api.CSG_Point___ne__(self, *args)
    def __add__(self, *args): return _saga_api.CSG_Point___add__(self, *args)
    def __sub__(self, *args): return _saga_api.CSG_Point___sub__(self, *args)
    def __iadd__(self, *args): return _saga_api.CSG_Point___iadd__(self, *args)
    def __isub__(self, *args): return _saga_api.CSG_Point___isub__(self, *args)
    def Assign(self, *args): return _saga_api.CSG_Point_Assign(self, *args)
    def Add(self, *args): return _saga_api.CSG_Point_Add(self, *args)
    def Subtract(self, *args): return _saga_api.CSG_Point_Subtract(self, *args)
    def is_Equal(self, *args): return _saga_api.CSG_Point_is_Equal(self, *args)
CSG_Point_swigregister = _saga_api.CSG_Point_swigregister
CSG_Point_swigregister(CSG_Point)

class CSG_Point_Z(CSG_Point):
    __swig_setmethods__ = {}
    for _s in [CSG_Point]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Point_Z, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Point]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Point_Z, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Point_Z(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Point_Z
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Point_Z_Get_Type(self)
    def Get_Z(self): return _saga_api.CSG_Point_Z_Get_Z(self)
    def Set_Z(self, *args): return _saga_api.CSG_Point_Z_Set_Z(self, *args)
    def __eq__(self, *args): return _saga_api.CSG_Point_Z___eq__(self, *args)
    def __ne__(self, *args): return _saga_api.CSG_Point_Z___ne__(self, *args)
    def __add__(self, *args): return _saga_api.CSG_Point_Z___add__(self, *args)
    def __sub__(self, *args): return _saga_api.CSG_Point_Z___sub__(self, *args)
    def __iadd__(self, *args): return _saga_api.CSG_Point_Z___iadd__(self, *args)
    def __isub__(self, *args): return _saga_api.CSG_Point_Z___isub__(self, *args)
    def Assign(self, *args): return _saga_api.CSG_Point_Z_Assign(self, *args)
    def Add(self, *args): return _saga_api.CSG_Point_Z_Add(self, *args)
    def Subtract(self, *args): return _saga_api.CSG_Point_Z_Subtract(self, *args)
    def is_Equal(self, *args): return _saga_api.CSG_Point_Z_is_Equal(self, *args)
CSG_Point_Z_swigregister = _saga_api.CSG_Point_Z_swigregister
CSG_Point_Z_swigregister(CSG_Point_Z)

class CSG_Point_ZM(CSG_Point_Z):
    __swig_setmethods__ = {}
    for _s in [CSG_Point_Z]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Point_ZM, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Point_Z]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Point_ZM, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Point_ZM(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Point_ZM
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Point_ZM_Get_Type(self)
    def Get_M(self): return _saga_api.CSG_Point_ZM_Get_M(self)
    def Set_M(self, *args): return _saga_api.CSG_Point_ZM_Set_M(self, *args)
    def __eq__(self, *args): return _saga_api.CSG_Point_ZM___eq__(self, *args)
    def __ne__(self, *args): return _saga_api.CSG_Point_ZM___ne__(self, *args)
    def __add__(self, *args): return _saga_api.CSG_Point_ZM___add__(self, *args)
    def __sub__(self, *args): return _saga_api.CSG_Point_ZM___sub__(self, *args)
    def __iadd__(self, *args): return _saga_api.CSG_Point_ZM___iadd__(self, *args)
    def __isub__(self, *args): return _saga_api.CSG_Point_ZM___isub__(self, *args)
    def Assign(self, *args): return _saga_api.CSG_Point_ZM_Assign(self, *args)
    def Add(self, *args): return _saga_api.CSG_Point_ZM_Add(self, *args)
    def Subtract(self, *args): return _saga_api.CSG_Point_ZM_Subtract(self, *args)
    def is_Equal(self, *args): return _saga_api.CSG_Point_ZM_is_Equal(self, *args)
CSG_Point_ZM_swigregister = _saga_api.CSG_Point_ZM_swigregister
CSG_Point_ZM_swigregister(CSG_Point_ZM)

class CSG_Points(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Points, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Points, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _saga_api.new_CSG_Points()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Points
    __del__ = lambda self : None;
    def Clear(self): return _saga_api.CSG_Points_Clear(self)
    def Assign(self, *args): return _saga_api.CSG_Points_Assign(self, *args)
    def Add(self, *args): return _saga_api.CSG_Points_Add(self, *args)
    def Del(self, *args): return _saga_api.CSG_Points_Del(self, *args)
    def Set_Count(self, *args): return _saga_api.CSG_Points_Set_Count(self, *args)
    def Get_Count(self): return _saga_api.CSG_Points_Get_Count(self)
    def Get_Point(self, *args): return _saga_api.CSG_Points_Get_Point(self, *args)
    def Get_X(self, *args): return _saga_api.CSG_Points_Get_X(self, *args)
    def Get_Y(self, *args): return _saga_api.CSG_Points_Get_Y(self, *args)
CSG_Points_swigregister = _saga_api.CSG_Points_swigregister
CSG_Points_swigregister(CSG_Points)

class CSG_Points_Int(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Points_Int, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Points_Int, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _saga_api.new_CSG_Points_Int()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Points_Int
    __del__ = lambda self : None;
    def Clear(self): return _saga_api.CSG_Points_Int_Clear(self)
    def Assign(self, *args): return _saga_api.CSG_Points_Int_Assign(self, *args)
    def Add(self, *args): return _saga_api.CSG_Points_Int_Add(self, *args)
    def Del(self, *args): return _saga_api.CSG_Points_Int_Del(self, *args)
    def Set_Count(self, *args): return _saga_api.CSG_Points_Int_Set_Count(self, *args)
    def Get_Count(self): return _saga_api.CSG_Points_Int_Get_Count(self)
    def Get_Point(self, *args): return _saga_api.CSG_Points_Int_Get_Point(self, *args)
    def Get_X(self, *args): return _saga_api.CSG_Points_Int_Get_X(self, *args)
    def Get_Y(self, *args): return _saga_api.CSG_Points_Int_Get_Y(self, *args)
CSG_Points_Int_swigregister = _saga_api.CSG_Points_Int_swigregister
CSG_Points_Int_swigregister(CSG_Points_Int)

class CSG_Points_Z(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Points_Z, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Points_Z, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _saga_api.new_CSG_Points_Z()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Points_Z
    __del__ = lambda self : None;
    def Clear(self): return _saga_api.CSG_Points_Z_Clear(self)
    def Assign(self, *args): return _saga_api.CSG_Points_Z_Assign(self, *args)
    def Add(self, *args): return _saga_api.CSG_Points_Z_Add(self, *args)
    def Del(self, *args): return _saga_api.CSG_Points_Z_Del(self, *args)
    def Set_Count(self, *args): return _saga_api.CSG_Points_Z_Set_Count(self, *args)
    def Get_Count(self): return _saga_api.CSG_Points_Z_Get_Count(self)
    def Get_Point(self, *args): return _saga_api.CSG_Points_Z_Get_Point(self, *args)
    def Get_X(self, *args): return _saga_api.CSG_Points_Z_Get_X(self, *args)
    def Get_Y(self, *args): return _saga_api.CSG_Points_Z_Get_Y(self, *args)
    def Get_Z(self, *args): return _saga_api.CSG_Points_Z_Get_Z(self, *args)
CSG_Points_Z_swigregister = _saga_api.CSG_Points_Z_swigregister
CSG_Points_Z_swigregister(CSG_Points_Z)

class CSG_Rect(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Rect, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Rect, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Rect(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Rect
    __del__ = lambda self : None;
    def __eq__(self, *args): return _saga_api.CSG_Rect___eq__(self, *args)
    def __ne__(self, *args): return _saga_api.CSG_Rect___ne__(self, *args)
    def __iadd__(self, *args): return _saga_api.CSG_Rect___iadd__(self, *args)
    def __isub__(self, *args): return _saga_api.CSG_Rect___isub__(self, *args)
    def Assign(self, *args): return _saga_api.CSG_Rect_Assign(self, *args)
    def Set_BottomLeft(self, *args): return _saga_api.CSG_Rect_Set_BottomLeft(self, *args)
    def Set_TopRight(self, *args): return _saga_api.CSG_Rect_Set_TopRight(self, *args)
    def is_Equal(self, *args): return _saga_api.CSG_Rect_is_Equal(self, *args)
    def Get_XMin(self): return _saga_api.CSG_Rect_Get_XMin(self)
    def Get_XMax(self): return _saga_api.CSG_Rect_Get_XMax(self)
    def Get_YMin(self): return _saga_api.CSG_Rect_Get_YMin(self)
    def Get_YMax(self): return _saga_api.CSG_Rect_Get_YMax(self)
    def Get_XRange(self): return _saga_api.CSG_Rect_Get_XRange(self)
    def Get_YRange(self): return _saga_api.CSG_Rect_Get_YRange(self)
    def Get_TopLeft(self): return _saga_api.CSG_Rect_Get_TopLeft(self)
    def Get_BottomRight(self): return _saga_api.CSG_Rect_Get_BottomRight(self)
    def Get_Center(self): return _saga_api.CSG_Rect_Get_Center(self)
    def Get_XCenter(self): return _saga_api.CSG_Rect_Get_XCenter(self)
    def Get_YCenter(self): return _saga_api.CSG_Rect_Get_YCenter(self)
    def Move(self, *args): return _saga_api.CSG_Rect_Move(self, *args)
    def Inflate(self, *args): return _saga_api.CSG_Rect_Inflate(self, *args)
    def Deflate(self, *args): return _saga_api.CSG_Rect_Deflate(self, *args)
    def Union(self, *args): return _saga_api.CSG_Rect_Union(self, *args)
    def Intersect(self, *args): return _saga_api.CSG_Rect_Intersect(self, *args)
    def Intersects(self, *args): return _saga_api.CSG_Rect_Intersects(self, *args)
    def Contains(self, *args): return _saga_api.CSG_Rect_Contains(self, *args)
    __swig_setmethods__["m_rect"] = _saga_api.CSG_Rect_m_rect_set
    __swig_getmethods__["m_rect"] = _saga_api.CSG_Rect_m_rect_get
    if _newclass:m_rect = _swig_property(_saga_api.CSG_Rect_m_rect_get, _saga_api.CSG_Rect_m_rect_set)
CSG_Rect_swigregister = _saga_api.CSG_Rect_swigregister
CSG_Rect_swigregister(CSG_Rect)

class CSG_Rects(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Rects, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Rects, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _saga_api.new_CSG_Rects()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Rects
    __del__ = lambda self : None;
    def Clear(self): return _saga_api.CSG_Rects_Clear(self)
    def Assign(self, *args): return _saga_api.CSG_Rects_Assign(self, *args)
    def Add(self, *args): return _saga_api.CSG_Rects_Add(self, *args)
    def Get_Count(self): return _saga_api.CSG_Rects_Get_Count(self)
    def Get_Rect(self, *args): return _saga_api.CSG_Rects_Get_Rect(self, *args)
CSG_Rects_swigregister = _saga_api.CSG_Rects_swigregister
CSG_Rects_swigregister(CSG_Rects)

SG_DISTWGHT_None = _saga_api.SG_DISTWGHT_None
SG_DISTWGHT_IDW = _saga_api.SG_DISTWGHT_IDW
SG_DISTWGHT_EXP = _saga_api.SG_DISTWGHT_EXP
SG_DISTWGHT_GAUSS = _saga_api.SG_DISTWGHT_GAUSS
class CSG_Distance_Weighting(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Distance_Weighting, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Distance_Weighting, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _saga_api.new_CSG_Distance_Weighting()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Distance_Weighting
    __del__ = lambda self : None;
    def Get_Parameters(self): return _saga_api.CSG_Distance_Weighting_Get_Parameters(self)
    def Set_Parameters(self, *args): return _saga_api.CSG_Distance_Weighting_Set_Parameters(self, *args)
    def Get_Weighting(self): return _saga_api.CSG_Distance_Weighting_Get_Weighting(self)
    def Set_Weighting(self, *args): return _saga_api.CSG_Distance_Weighting_Set_Weighting(self, *args)
    def Get_IDW_Power(self): return _saga_api.CSG_Distance_Weighting_Get_IDW_Power(self)
    def Set_IDW_Power(self, *args): return _saga_api.CSG_Distance_Weighting_Set_IDW_Power(self, *args)
    def Get_IDW_Offset(self): return _saga_api.CSG_Distance_Weighting_Get_IDW_Offset(self)
    def Set_IDW_Offset(self, bOn = True): return _saga_api.CSG_Distance_Weighting_Set_IDW_Offset(self, bOn)
    def Get_BandWidth(self): return _saga_api.CSG_Distance_Weighting_Get_BandWidth(self)
    def Set_BandWidth(self, *args): return _saga_api.CSG_Distance_Weighting_Set_BandWidth(self, *args)
    def Get_Weight(self, *args): return _saga_api.CSG_Distance_Weighting_Get_Weight(self, *args)
CSG_Distance_Weighting_swigregister = _saga_api.CSG_Distance_Weighting_swigregister
CSG_Distance_Weighting_swigregister(CSG_Distance_Weighting)

SG_PROJ_FMT_WKT = _saga_api.SG_PROJ_FMT_WKT
SG_PROJ_FMT_Proj4 = _saga_api.SG_PROJ_FMT_Proj4
SG_PROJ_FMT_EPSG = _saga_api.SG_PROJ_FMT_EPSG
SG_PROJ_FMT_Undefined = _saga_api.SG_PROJ_FMT_Undefined
SG_PROJ_TYPE_CS_Undefined = _saga_api.SG_PROJ_TYPE_CS_Undefined
SG_PROJ_TYPE_CS_Projected = _saga_api.SG_PROJ_TYPE_CS_Projected
SG_PROJ_TYPE_CS_Geographic = _saga_api.SG_PROJ_TYPE_CS_Geographic
SG_PROJ_TYPE_CS_Geocentric = _saga_api.SG_PROJ_TYPE_CS_Geocentric

def SG_Get_Projection_Type_Name(*args):
  return _saga_api.SG_Get_Projection_Type_Name(*args)
SG_Get_Projection_Type_Name = _saga_api.SG_Get_Projection_Type_Name
class CSG_Projection(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Projection, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Projection, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _saga_api.delete_CSG_Projection
    __del__ = lambda self : None;
    def Destroy(self): return _saga_api.CSG_Projection_Destroy(self)
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Projection(*args)
        try: self.this.append(this)
        except: self.this = this
    def Create(self, *args): return _saga_api.CSG_Projection_Create(self, *args)
    def Assign(self, *args): return _saga_api.CSG_Projection_Assign(self, *args)
    def is_Okay(self): return _saga_api.CSG_Projection_is_Okay(self)
    def is_Equal(self, *args): return _saga_api.CSG_Projection_is_Equal(self, *args)
    def __eq__(self, *args): return _saga_api.CSG_Projection___eq__(self, *args)
    def __ne__(self, *args): return _saga_api.CSG_Projection___ne__(self, *args)
    def Load(self, *args): return _saga_api.CSG_Projection_Load(self, *args)
    def Save(self, *args): return _saga_api.CSG_Projection_Save(self, *args)
    def Get_Name(self): return _saga_api.CSG_Projection_Get_Name(self)
    def Get_WKT(self): return _saga_api.CSG_Projection_Get_WKT(self)
    def Get_Proj4(self): return _saga_api.CSG_Projection_Get_Proj4(self)
    def Get_Authority(self): return _saga_api.CSG_Projection_Get_Authority(self)
    def Get_Authority_ID(self): return _saga_api.CSG_Projection_Get_Authority_ID(self)
    def Get_EPSG(self): return _saga_api.CSG_Projection_Get_EPSG(self)
    def Get_Description(self): return _saga_api.CSG_Projection_Get_Description(self)
    def Get_Type(self): return _saga_api.CSG_Projection_Get_Type(self)
    def Get_Type_Name(self): return _saga_api.CSG_Projection_Get_Type_Name(self)
    def Get_Type_Identifier(self): return _saga_api.CSG_Projection_Get_Type_Identifier(self)
CSG_Projection_swigregister = _saga_api.CSG_Projection_swigregister
CSG_Projection_swigregister(CSG_Projection)
gSG_Projection_Type_Identifier = cvar.gSG_Projection_Type_Identifier

class CSG_Projections(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Projections, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Projections, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _saga_api.delete_CSG_Projections
    __del__ = lambda self : None;
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Projections(*args)
        try: self.this.append(this)
        except: self.this = this
    def Create(self, *args): return _saga_api.CSG_Projections_Create(self, *args)
    def Destroy(self): return _saga_api.CSG_Projections_Destroy(self)
    def Reset_Dictionary(self): return _saga_api.CSG_Projections_Reset_Dictionary(self)
    def Load_Dictionary(self, *args): return _saga_api.CSG_Projections_Load_Dictionary(self, *args)
    def Save_Dictionary(self, *args): return _saga_api.CSG_Projections_Save_Dictionary(self, *args)
    def Load_DB(self, *args): return _saga_api.CSG_Projections_Load_DB(self, *args)
    def Save_DB(self, *args): return _saga_api.CSG_Projections_Save_DB(self, *args)
    def Get_Count(self): return _saga_api.CSG_Projections_Get_Count(self)
    def Add(self, *args): return _saga_api.CSG_Projections_Add(self, *args)
    def Get_Projection(self, *args): return _saga_api.CSG_Projections_Get_Projection(self, *args)
    def Get_Names_List(self, *args): return _saga_api.CSG_Projections_Get_Names_List(self, *args)
    __swig_getmethods__["WKT_to_MetaData"] = lambda x: _saga_api.CSG_Projections_WKT_to_MetaData
    if _newclass:WKT_to_MetaData = staticmethod(_saga_api.CSG_Projections_WKT_to_MetaData)
    def WKT_to_Proj4(self, *args): return _saga_api.CSG_Projections_WKT_to_Proj4(self, *args)
    def WKT_from_Proj4(self, *args): return _saga_api.CSG_Projections_WKT_from_Proj4(self, *args)
    def EPSG_to_Proj4(self, *args): return _saga_api.CSG_Projections_EPSG_to_Proj4(self, *args)
    def EPSG_to_WKT(self, *args): return _saga_api.CSG_Projections_EPSG_to_WKT(self, *args)
CSG_Projections_swigregister = _saga_api.CSG_Projections_swigregister
CSG_Projections_swigregister(CSG_Projections)

def CSG_Projections_WKT_to_MetaData(*args):
  return _saga_api.CSG_Projections_WKT_to_MetaData(*args)
CSG_Projections_WKT_to_MetaData = _saga_api.CSG_Projections_WKT_to_MetaData


def SG_Get_Projections():
  return _saga_api.SG_Get_Projections()
SG_Get_Projections = _saga_api.SG_Get_Projections

def SG_Get_Length(*args):
  return _saga_api.SG_Get_Length(*args)
SG_Get_Length = _saga_api.SG_Get_Length

def SG_Get_Crossing_InRegion(*args):
  return _saga_api.SG_Get_Crossing_InRegion(*args)
SG_Get_Crossing_InRegion = _saga_api.SG_Get_Crossing_InRegion

def SG_Get_Triangle_CircumCircle(*args):
  return _saga_api.SG_Get_Triangle_CircumCircle(*args)
SG_Get_Triangle_CircumCircle = _saga_api.SG_Get_Triangle_CircumCircle
M_PI = _saga_api.M_PI
M_PI_045 = _saga_api.M_PI_045
M_PI_090 = _saga_api.M_PI_090
M_PI_135 = _saga_api.M_PI_135
M_PI_180 = _saga_api.M_PI_180
M_PI_225 = _saga_api.M_PI_225
M_PI_270 = _saga_api.M_PI_270
M_PI_315 = _saga_api.M_PI_315
M_PI_360 = _saga_api.M_PI_360
M_RAD_TO_DEG = _saga_api.M_RAD_TO_DEG
M_DEG_TO_RAD = _saga_api.M_DEG_TO_RAD
M_EULER = _saga_api.M_EULER
N_MEGABYTE_BYTES = _saga_api.N_MEGABYTE_BYTES
M_ALMOST_ZERO = _saga_api.M_ALMOST_ZERO
M_TINY = _saga_api.M_TINY

def SG_Get_Square(*args):
  return _saga_api.SG_Get_Square(*args)
SG_Get_Square = _saga_api.SG_Get_Square
class CSG_Index(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Index, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Index, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _saga_api.delete_CSG_Index
    __del__ = lambda self : None;
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Index(*args)
        try: self.this.append(this)
        except: self.this = this
    def Create(self, *args): return _saga_api.CSG_Index_Create(self, *args)
    def Destroy(self): return _saga_api.CSG_Index_Destroy(self)
    def is_Okay(self): return _saga_api.CSG_Index_is_Okay(self)
    def Get_Count(self): return _saga_api.CSG_Index_Get_Count(self)
    def Get_Index(self, *args): return _saga_api.CSG_Index_Get_Index(self, *args)
CSG_Index_swigregister = _saga_api.CSG_Index_swigregister
CSG_Index_swigregister(CSG_Index)

def SG_Get_Distance(*args):
  return _saga_api.SG_Get_Distance(*args)
SG_Get_Distance = _saga_api.SG_Get_Distance

def SG_Get_Angle_Of_Direction(*args):
  return _saga_api.SG_Get_Angle_Of_Direction(*args)
SG_Get_Angle_Of_Direction = _saga_api.SG_Get_Angle_Of_Direction

def SG_Get_Crossing(*args):
  return _saga_api.SG_Get_Crossing(*args)
SG_Get_Crossing = _saga_api.SG_Get_Crossing

def SG_Get_Nearest_Point_On_Line(*args):
  return _saga_api.SG_Get_Nearest_Point_On_Line(*args)
SG_Get_Nearest_Point_On_Line = _saga_api.SG_Get_Nearest_Point_On_Line

def SG_Get_Polygon_Area(*args):
  return _saga_api.SG_Get_Polygon_Area(*args)
SG_Get_Polygon_Area = _saga_api.SG_Get_Polygon_Area

class CSG_Vector(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Vector, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Vector, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _saga_api.delete_CSG_Vector
    __del__ = lambda self : None;
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Vector(*args)
        try: self.this.append(this)
        except: self.this = this
    def Create(self, *args): return _saga_api.CSG_Vector_Create(self, *args)
    def Destroy(self): return _saga_api.CSG_Vector_Destroy(self)
    def Get_N(self): return _saga_api.CSG_Vector_Get_N(self)
    def Get_Data(self): return _saga_api.CSG_Vector_Get_Data(self)
    def __call__(self, *args): return _saga_api.CSG_Vector___call__(self, *args)
    def asString(self): return _saga_api.CSG_Vector_asString(self)
    def is_Equal(self, *args): return _saga_api.CSG_Vector_is_Equal(self, *args)
    def Assign(self, *args): return _saga_api.CSG_Vector_Assign(self, *args)
    def Add(self, *args): return _saga_api.CSG_Vector_Add(self, *args)
    def Subtract(self, *args): return _saga_api.CSG_Vector_Subtract(self, *args)
    def Multiply_Scalar(self, *args): return _saga_api.CSG_Vector_Multiply_Scalar(self, *args)
    def Multiply(self, *args): return _saga_api.CSG_Vector_Multiply(self, *args)
    def __eq__(self, *args): return _saga_api.CSG_Vector___eq__(self, *args)
    def __iadd__(self, *args): return _saga_api.CSG_Vector___iadd__(self, *args)
    def __isub__(self, *args): return _saga_api.CSG_Vector___isub__(self, *args)
    def __imul__(self, *args): return _saga_api.CSG_Vector___imul__(self, *args)
    def __add__(self, *args): return _saga_api.CSG_Vector___add__(self, *args)
    def __sub__(self, *args): return _saga_api.CSG_Vector___sub__(self, *args)
    def __mul__(self, *args): return _saga_api.CSG_Vector___mul__(self, *args)
    def Set_Zero(self): return _saga_api.CSG_Vector_Set_Zero(self)
    def Set_Unity(self): return _saga_api.CSG_Vector_Set_Unity(self)
    def Get_Length(self): return _saga_api.CSG_Vector_Get_Length(self)
    def Get_Angle(self, *args): return _saga_api.CSG_Vector_Get_Angle(self, *args)
    def Get_Unity(self): return _saga_api.CSG_Vector_Get_Unity(self)
CSG_Vector_swigregister = _saga_api.CSG_Vector_swigregister
CSG_Vector_swigregister(CSG_Vector)

class CSG_Matrix(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Matrix, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Matrix, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _saga_api.delete_CSG_Matrix
    __del__ = lambda self : None;
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Matrix(*args)
        try: self.this.append(this)
        except: self.this = this
    def Create(self, *args): return _saga_api.CSG_Matrix_Create(self, *args)
    def Destroy(self): return _saga_api.CSG_Matrix_Destroy(self)
    def Add_Cols(self, *args): return _saga_api.CSG_Matrix_Add_Cols(self, *args)
    def Add_Rows(self, *args): return _saga_api.CSG_Matrix_Add_Rows(self, *args)
    def Get_NX(self): return _saga_api.CSG_Matrix_Get_NX(self)
    def Get_NY(self): return _saga_api.CSG_Matrix_Get_NY(self)
    def Get_Data(self): return _saga_api.CSG_Matrix_Get_Data(self)
    def __call__(self, *args): return _saga_api.CSG_Matrix___call__(self, *args)
    def asString(self): return _saga_api.CSG_Matrix_asString(self)
    def is_Square(self): return _saga_api.CSG_Matrix_is_Square(self)
    def is_Equal(self, *args): return _saga_api.CSG_Matrix_is_Equal(self, *args)
    def Assign(self, *args): return _saga_api.CSG_Matrix_Assign(self, *args)
    def Add(self, *args): return _saga_api.CSG_Matrix_Add(self, *args)
    def Subtract(self, *args): return _saga_api.CSG_Matrix_Subtract(self, *args)
    def Multiply(self, *args): return _saga_api.CSG_Matrix_Multiply(self, *args)
    def __eq__(self, *args): return _saga_api.CSG_Matrix___eq__(self, *args)
    def __iadd__(self, *args): return _saga_api.CSG_Matrix___iadd__(self, *args)
    def __isub__(self, *args): return _saga_api.CSG_Matrix___isub__(self, *args)
    def __imul__(self, *args): return _saga_api.CSG_Matrix___imul__(self, *args)
    def __add__(self, *args): return _saga_api.CSG_Matrix___add__(self, *args)
    def __sub__(self, *args): return _saga_api.CSG_Matrix___sub__(self, *args)
    def __mul__(self, *args): return _saga_api.CSG_Matrix___mul__(self, *args)
    def Set_Zero(self): return _saga_api.CSG_Matrix_Set_Zero(self)
    def Set_Identity(self): return _saga_api.CSG_Matrix_Set_Identity(self)
    def Set_Transpose(self): return _saga_api.CSG_Matrix_Set_Transpose(self)
    def Set_Inverse(self, bSilent = True, nSubSquare = 0): return _saga_api.CSG_Matrix_Set_Inverse(self, bSilent, nSubSquare)
    def Get_Determinant(self): return _saga_api.CSG_Matrix_Get_Determinant(self)
    def Get_Transpose(self): return _saga_api.CSG_Matrix_Get_Transpose(self)
    def Get_Inverse(self, bSilent = True, nSubSquare = 0): return _saga_api.CSG_Matrix_Get_Inverse(self, bSilent, nSubSquare)
CSG_Matrix_swigregister = _saga_api.CSG_Matrix_swigregister
CSG_Matrix_swigregister(CSG_Matrix)

class CSG_Grid_Radius(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Grid_Radius, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Grid_Radius, name)
    __repr__ = _swig_repr
    def __init__(self, maxRadius = 0): 
        this = _saga_api.new_CSG_Grid_Radius(maxRadius)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Grid_Radius
    __del__ = lambda self : None;
    def Create(self, *args): return _saga_api.CSG_Grid_Radius_Create(self, *args)
    def Destroy(self): return _saga_api.CSG_Grid_Radius_Destroy(self)
    def Get_Maximum(self): return _saga_api.CSG_Grid_Radius_Get_Maximum(self)
    def Get_nPoints(self, *args): return _saga_api.CSG_Grid_Radius_Get_nPoints(self, *args)
    def Get_Point(self, *args): return _saga_api.CSG_Grid_Radius_Get_Point(self, *args)
CSG_Grid_Radius_swigregister = _saga_api.CSG_Grid_Radius_swigregister
CSG_Grid_Radius_swigregister(CSG_Grid_Radius)

def SG_Matrix_Solve(*args):
  return _saga_api.SG_Matrix_Solve(*args)
SG_Matrix_Solve = _saga_api.SG_Matrix_Solve

def SG_Matrix_Eigen_Reduction(*args):
  return _saga_api.SG_Matrix_Eigen_Reduction(*args)
SG_Matrix_Eigen_Reduction = _saga_api.SG_Matrix_Eigen_Reduction

class CSG_Simple_Statistics(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Simple_Statistics, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Simple_Statistics, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Simple_Statistics(*args)
        try: self.this.append(this)
        except: self.this = this
    def Create(self, *args): return _saga_api.CSG_Simple_Statistics_Create(self, *args)
    def Invalidate(self): return _saga_api.CSG_Simple_Statistics_Invalidate(self)
    def is_Evaluated(self): return _saga_api.CSG_Simple_Statistics_is_Evaluated(self)
    def Get_Count(self): return _saga_api.CSG_Simple_Statistics_Get_Count(self)
    def Get_Weights(self): return _saga_api.CSG_Simple_Statistics_Get_Weights(self)
    def Get_Minimum(self): return _saga_api.CSG_Simple_Statistics_Get_Minimum(self)
    def Get_Maximum(self): return _saga_api.CSG_Simple_Statistics_Get_Maximum(self)
    def Get_Range(self): return _saga_api.CSG_Simple_Statistics_Get_Range(self)
    def Get_Sum(self): return _saga_api.CSG_Simple_Statistics_Get_Sum(self)
    def Get_Mean(self): return _saga_api.CSG_Simple_Statistics_Get_Mean(self)
    def Get_Variance(self): return _saga_api.CSG_Simple_Statistics_Get_Variance(self)
    def Get_StdDev(self): return _saga_api.CSG_Simple_Statistics_Get_StdDev(self)
    def Add_Value(self, *args): return _saga_api.CSG_Simple_Statistics_Add_Value(self, *args)
    def Get_Value(self, *args): return _saga_api.CSG_Simple_Statistics_Get_Value(self, *args)
    def __iadd__(self, *args): return _saga_api.CSG_Simple_Statistics___iadd__(self, *args)
    __swig_destroy__ = _saga_api.delete_CSG_Simple_Statistics
    __del__ = lambda self : None;
CSG_Simple_Statistics_swigregister = _saga_api.CSG_Simple_Statistics_swigregister
CSG_Simple_Statistics_swigregister(CSG_Simple_Statistics)

class CSG_Class_Statistics(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Class_Statistics, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Class_Statistics, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _saga_api.new_CSG_Class_Statistics()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Class_Statistics
    __del__ = lambda self : None;
    def Create(self): return _saga_api.CSG_Class_Statistics_Create(self)
    def Destroy(self): return _saga_api.CSG_Class_Statistics_Destroy(self)
    def Reset(self): return _saga_api.CSG_Class_Statistics_Reset(self)
    def Get_Count(self): return _saga_api.CSG_Class_Statistics_Get_Count(self)
    def Get_Class_Count(self, *args): return _saga_api.CSG_Class_Statistics_Get_Class_Count(self, *args)
    def Get_Class_Value(self, *args): return _saga_api.CSG_Class_Statistics_Get_Class_Value(self, *args)
    def Get_Class(self, *args): return _saga_api.CSG_Class_Statistics_Get_Class(self, *args)
    def Add_Value(self, *args): return _saga_api.CSG_Class_Statistics_Add_Value(self, *args)
    def Get_Majority(self, *args): return _saga_api.CSG_Class_Statistics_Get_Majority(self, *args)
    def Get_Minority(self, *args): return _saga_api.CSG_Class_Statistics_Get_Minority(self, *args)
CSG_Class_Statistics_swigregister = _saga_api.CSG_Class_Statistics_swigregister
CSG_Class_Statistics_swigregister(CSG_Class_Statistics)

SG_CLUSTERANALYSIS_Minimum_Distance = _saga_api.SG_CLUSTERANALYSIS_Minimum_Distance
SG_CLUSTERANALYSIS_Hill_Climbing = _saga_api.SG_CLUSTERANALYSIS_Hill_Climbing
SG_CLUSTERANALYSIS_Combined = _saga_api.SG_CLUSTERANALYSIS_Combined
class CSG_Cluster_Analysis(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Cluster_Analysis, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Cluster_Analysis, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _saga_api.new_CSG_Cluster_Analysis()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Cluster_Analysis
    __del__ = lambda self : None;
    def Create(self, *args): return _saga_api.CSG_Cluster_Analysis_Create(self, *args)
    def Destroy(self): return _saga_api.CSG_Cluster_Analysis_Destroy(self)
    def Add_Element(self): return _saga_api.CSG_Cluster_Analysis_Add_Element(self)
    def Set_Feature(self, *args): return _saga_api.CSG_Cluster_Analysis_Set_Feature(self, *args)
    def Get_Cluster(self, *args): return _saga_api.CSG_Cluster_Analysis_Get_Cluster(self, *args)
    def Execute(self, *args): return _saga_api.CSG_Cluster_Analysis_Execute(self, *args)
    def Get_nElements(self): return _saga_api.CSG_Cluster_Analysis_Get_nElements(self)
    def Get_nFeatures(self): return _saga_api.CSG_Cluster_Analysis_Get_nFeatures(self)
    def Get_nClusters(self): return _saga_api.CSG_Cluster_Analysis_Get_nClusters(self)
    def Get_Iteration(self): return _saga_api.CSG_Cluster_Analysis_Get_Iteration(self)
    def Get_SP(self): return _saga_api.CSG_Cluster_Analysis_Get_SP(self)
    def Get_nMembers(self, *args): return _saga_api.CSG_Cluster_Analysis_Get_nMembers(self, *args)
    def Get_Variance(self, *args): return _saga_api.CSG_Cluster_Analysis_Get_Variance(self, *args)
    def Get_Centroid(self, *args): return _saga_api.CSG_Cluster_Analysis_Get_Centroid(self, *args)
CSG_Cluster_Analysis_swigregister = _saga_api.CSG_Cluster_Analysis_swigregister
CSG_Cluster_Analysis_swigregister(CSG_Cluster_Analysis)

class CSG_Spline(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Spline, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Spline, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _saga_api.new_CSG_Spline()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Spline
    __del__ = lambda self : None;
    def Destroy(self): return _saga_api.CSG_Spline_Destroy(self)
    def Create(self, *args): return _saga_api.CSG_Spline_Create(self, *args)
    def Add(self, *args): return _saga_api.CSG_Spline_Add(self, *args)
    def Get_xMin(self): return _saga_api.CSG_Spline_Get_xMin(self)
    def Get_xMax(self): return _saga_api.CSG_Spline_Get_xMax(self)
    def Get_Value(self, *args): return _saga_api.CSG_Spline_Get_Value(self, *args)
CSG_Spline_swigregister = _saga_api.CSG_Spline_swigregister
CSG_Spline_swigregister(CSG_Spline)

class CSG_Thin_Plate_Spline(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Thin_Plate_Spline, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Thin_Plate_Spline, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _saga_api.new_CSG_Thin_Plate_Spline()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Thin_Plate_Spline
    __del__ = lambda self : None;
    def Destroy(self): return _saga_api.CSG_Thin_Plate_Spline_Destroy(self)
    def Set_Point_Count(self, *args): return _saga_api.CSG_Thin_Plate_Spline_Set_Point_Count(self, *args)
    def Get_Point_Count(self): return _saga_api.CSG_Thin_Plate_Spline_Get_Point_Count(self)
    def Get_Points(self): return _saga_api.CSG_Thin_Plate_Spline_Get_Points(self)
    def Add_Point(self, *args): return _saga_api.CSG_Thin_Plate_Spline_Add_Point(self, *args)
    def Set_Point(self, *args): return _saga_api.CSG_Thin_Plate_Spline_Set_Point(self, *args)
    def Create(self, Regularization = 0.0, bSilent = True): return _saga_api.CSG_Thin_Plate_Spline_Create(self, Regularization, bSilent)
    def is_Okay(self): return _saga_api.CSG_Thin_Plate_Spline_is_Okay(self)
    def Get_Value(self, *args): return _saga_api.CSG_Thin_Plate_Spline_Get_Value(self, *args)
CSG_Thin_Plate_Spline_swigregister = _saga_api.CSG_Thin_Plate_Spline_swigregister
CSG_Thin_Plate_Spline_swigregister(CSG_Thin_Plate_Spline)

REGRESSION_Linear = _saga_api.REGRESSION_Linear
REGRESSION_Rez_X = _saga_api.REGRESSION_Rez_X
REGRESSION_Rez_Y = _saga_api.REGRESSION_Rez_Y
REGRESSION_Pow = _saga_api.REGRESSION_Pow
REGRESSION_Exp = _saga_api.REGRESSION_Exp
REGRESSION_Log = _saga_api.REGRESSION_Log
class CSG_Regression(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Regression, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Regression, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _saga_api.new_CSG_Regression()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Regression
    __del__ = lambda self : None;
    def Destroy(self): return _saga_api.CSG_Regression_Destroy(self)
    def Set_Values(self, *args): return _saga_api.CSG_Regression_Set_Values(self, *args)
    def Add_Values(self, *args): return _saga_api.CSG_Regression_Add_Values(self, *args)
    def Get_Count(self): return _saga_api.CSG_Regression_Get_Count(self)
    def Get_xValue(self, *args): return _saga_api.CSG_Regression_Get_xValue(self, *args)
    def Get_yValue(self, *args): return _saga_api.CSG_Regression_Get_yValue(self, *args)
    def Get_Values(self, *args): return _saga_api.CSG_Regression_Get_Values(self, *args)
    def Get_xMin(self): return _saga_api.CSG_Regression_Get_xMin(self)
    def Get_xMax(self): return _saga_api.CSG_Regression_Get_xMax(self)
    def Get_xMean(self): return _saga_api.CSG_Regression_Get_xMean(self)
    def Get_xVariance(self): return _saga_api.CSG_Regression_Get_xVariance(self)
    def Get_x(self, *args): return _saga_api.CSG_Regression_Get_x(self, *args)
    def Get_yMin(self): return _saga_api.CSG_Regression_Get_yMin(self)
    def Get_yMax(self): return _saga_api.CSG_Regression_Get_yMax(self)
    def Get_yMean(self): return _saga_api.CSG_Regression_Get_yMean(self)
    def Get_yVariance(self): return _saga_api.CSG_Regression_Get_yVariance(self)
    def Get_y(self, *args): return _saga_api.CSG_Regression_Get_y(self, *args)
    def Get_Constant(self): return _saga_api.CSG_Regression_Get_Constant(self)
    def Get_Coefficient(self): return _saga_api.CSG_Regression_Get_Coefficient(self)
    def Get_R(self): return _saga_api.CSG_Regression_Get_R(self)
    def Get_R2(self): return _saga_api.CSG_Regression_Get_R2(self)
    def asString(self): return _saga_api.CSG_Regression_asString(self)
    def Get_Type(self): return _saga_api.CSG_Regression_Get_Type(self)
    def Calculate(self, *args): return _saga_api.CSG_Regression_Calculate(self, *args)
CSG_Regression_swigregister = _saga_api.CSG_Regression_swigregister
CSG_Regression_swigregister(CSG_Regression)

class CSG_Regression_Multiple(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Regression_Multiple, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Regression_Multiple, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _saga_api.new_CSG_Regression_Multiple()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Regression_Multiple
    __del__ = lambda self : None;
    def Destroy(self): return _saga_api.CSG_Regression_Multiple_Destroy(self)
    def Calculate(self, *args): return _saga_api.CSG_Regression_Multiple_Calculate(self, *args)
    def Get_Result(self): return _saga_api.CSG_Regression_Multiple_Get_Result(self)
    def Get_Count(self): return _saga_api.CSG_Regression_Multiple_Get_Count(self)
    def Get_Index(self, *args): return _saga_api.CSG_Regression_Multiple_Get_Index(self, *args)
    def Get_Order(self, *args): return _saga_api.CSG_Regression_Multiple_Get_Order(self, *args)
    def Get_RConst(self): return _saga_api.CSG_Regression_Multiple_Get_RConst(self)
    def Get_RCoeff(self, *args): return _saga_api.CSG_Regression_Multiple_Get_RCoeff(self, *args)
    def Get_R2(self, *args): return _saga_api.CSG_Regression_Multiple_Get_R2(self, *args)
    def Get_R2_Change(self, *args): return _saga_api.CSG_Regression_Multiple_Get_R2_Change(self, *args)
    def Get_Name(self, *args): return _saga_api.CSG_Regression_Multiple_Get_Name(self, *args)
CSG_Regression_Multiple_swigregister = _saga_api.CSG_Regression_Multiple_swigregister
CSG_Regression_Multiple_swigregister(CSG_Regression_Multiple)

class CSG_Formula(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Formula, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Formula, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _saga_api.new_CSG_Formula()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Formula
    __del__ = lambda self : None;
    __swig_getmethods__["Get_Help_Operators"] = lambda x: _saga_api.CSG_Formula_Get_Help_Operators
    if _newclass:Get_Help_Operators = staticmethod(_saga_api.CSG_Formula_Get_Help_Operators)
    __swig_getmethods__["Get_Help_Usage"] = lambda x: _saga_api.CSG_Formula_Get_Help_Usage
    if _newclass:Get_Help_Usage = staticmethod(_saga_api.CSG_Formula_Get_Help_Usage)
    def Get_Error(self, *args): return _saga_api.CSG_Formula_Get_Error(self, *args)
    def Add_Function(self, *args): return _saga_api.CSG_Formula_Add_Function(self, *args)
    def Del_Function(self, *args): return _saga_api.CSG_Formula_Del_Function(self, *args)
    def Set_Formula(self, *args): return _saga_api.CSG_Formula_Set_Formula(self, *args)
    def Get_Formula(self): return _saga_api.CSG_Formula_Get_Formula(self)
    def Set_Variable(self, *args): return _saga_api.CSG_Formula_Set_Variable(self, *args)
    def Get_Value(self, *args): return _saga_api.CSG_Formula_Get_Value(self, *args)
    def Get_Used_Variables(self): return _saga_api.CSG_Formula_Get_Used_Variables(self)
CSG_Formula_swigregister = _saga_api.CSG_Formula_swigregister
CSG_Formula_swigregister(CSG_Formula)

def CSG_Formula_Get_Help_Operators():
  return _saga_api.CSG_Formula_Get_Help_Operators()
CSG_Formula_Get_Help_Operators = _saga_api.CSG_Formula_Get_Help_Operators

def CSG_Formula_Get_Help_Usage():
  return _saga_api.CSG_Formula_Get_Help_Usage()
CSG_Formula_Get_Help_Usage = _saga_api.CSG_Formula_Get_Help_Usage

class CSG_Formula_TSG_Formula_Item(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Formula_TSG_Formula_Item, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Formula_TSG_Formula_Item, name)
    __repr__ = _swig_repr
    __swig_setmethods__["name"] = _saga_api.CSG_Formula_TSG_Formula_Item_name_set
    __swig_getmethods__["name"] = _saga_api.CSG_Formula_TSG_Formula_Item_name_get
    if _newclass:name = _swig_property(_saga_api.CSG_Formula_TSG_Formula_Item_name_get, _saga_api.CSG_Formula_TSG_Formula_Item_name_set)
    __swig_setmethods__["f"] = _saga_api.CSG_Formula_TSG_Formula_Item_f_set
    __swig_getmethods__["f"] = _saga_api.CSG_Formula_TSG_Formula_Item_f_get
    if _newclass:f = _swig_property(_saga_api.CSG_Formula_TSG_Formula_Item_f_get, _saga_api.CSG_Formula_TSG_Formula_Item_f_set)
    __swig_setmethods__["n_pars"] = _saga_api.CSG_Formula_TSG_Formula_Item_n_pars_set
    __swig_getmethods__["n_pars"] = _saga_api.CSG_Formula_TSG_Formula_Item_n_pars_get
    if _newclass:n_pars = _swig_property(_saga_api.CSG_Formula_TSG_Formula_Item_n_pars_get, _saga_api.CSG_Formula_TSG_Formula_Item_n_pars_set)
    __swig_setmethods__["varying"] = _saga_api.CSG_Formula_TSG_Formula_Item_varying_set
    __swig_getmethods__["varying"] = _saga_api.CSG_Formula_TSG_Formula_Item_varying_get
    if _newclass:varying = _swig_property(_saga_api.CSG_Formula_TSG_Formula_Item_varying_get, _saga_api.CSG_Formula_TSG_Formula_Item_varying_set)
    def __init__(self): 
        this = _saga_api.new_CSG_Formula_TSG_Formula_Item()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Formula_TSG_Formula_Item
    __del__ = lambda self : None;
CSG_Formula_TSG_Formula_Item_swigregister = _saga_api.CSG_Formula_TSG_Formula_Item_swigregister
CSG_Formula_TSG_Formula_Item_swigregister(CSG_Formula_TSG_Formula_Item)

SG_TREND_STRING_Formula = _saga_api.SG_TREND_STRING_Formula
SG_TREND_STRING_Function = _saga_api.SG_TREND_STRING_Function
SG_TREND_STRING_Formula_Parameters = _saga_api.SG_TREND_STRING_Formula_Parameters
SG_TREND_STRING_Complete = _saga_api.SG_TREND_STRING_Complete
class CSG_Trend(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Trend, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Trend, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _saga_api.new_CSG_Trend()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Trend
    __del__ = lambda self : None;
    def Set_Formula(self, Formula = None): return _saga_api.CSG_Trend_Set_Formula(self, Formula)
    def Get_Formula(self, *args): return _saga_api.CSG_Trend_Get_Formula(self, *args)
    def Get_Parameter_Count(self): return _saga_api.CSG_Trend_Get_Parameter_Count(self)
    def Get_Parameters(self): return _saga_api.CSG_Trend_Get_Parameters(self)
    def Clr_Data(self): return _saga_api.CSG_Trend_Clr_Data(self)
    def Set_Data(self, *args): return _saga_api.CSG_Trend_Set_Data(self, *args)
    def Add_Data(self, *args): return _saga_api.CSG_Trend_Add_Data(self, *args)
    def Get_Data_Count(self): return _saga_api.CSG_Trend_Get_Data_Count(self)
    def Get_Data_X(self, *args): return _saga_api.CSG_Trend_Get_Data_X(self, *args)
    def Get_Data_Y(self, *args): return _saga_api.CSG_Trend_Get_Data_Y(self, *args)
    def Get_Data_XMin(self): return _saga_api.CSG_Trend_Get_Data_XMin(self)
    def Get_Data_XMax(self): return _saga_api.CSG_Trend_Get_Data_XMax(self)
    def Get_Data_YMin(self): return _saga_api.CSG_Trend_Get_Data_YMin(self)
    def Get_Data_YMax(self): return _saga_api.CSG_Trend_Get_Data_YMax(self)
    def Set_Max_Iterations(self, *args): return _saga_api.CSG_Trend_Set_Max_Iterations(self, *args)
    def Get_Max_Iterations(self): return _saga_api.CSG_Trend_Get_Max_Iterations(self)
    def Set_Max_Lambda(self, *args): return _saga_api.CSG_Trend_Set_Max_Lambda(self, *args)
    def Get_Max_Lambda(self): return _saga_api.CSG_Trend_Get_Max_Lambda(self)
    def Get_Trend(self, *args): return _saga_api.CSG_Trend_Get_Trend(self, *args)
    def is_Okay(self): return _saga_api.CSG_Trend_is_Okay(self)
    def Get_Error(self): return _saga_api.CSG_Trend_Get_Error(self)
    def Get_ChiSquare(self): return _saga_api.CSG_Trend_Get_ChiSquare(self)
    def Get_R2(self): return _saga_api.CSG_Trend_Get_R2(self)
    def Get_Value(self, *args): return _saga_api.CSG_Trend_Get_Value(self, *args)
CSG_Trend_swigregister = _saga_api.CSG_Trend_swigregister
CSG_Trend_swigregister(CSG_Trend)

DATAOBJECT_TYPE_Grid = _saga_api.DATAOBJECT_TYPE_Grid
DATAOBJECT_TYPE_Table = _saga_api.DATAOBJECT_TYPE_Table
DATAOBJECT_TYPE_Shapes = _saga_api.DATAOBJECT_TYPE_Shapes
DATAOBJECT_TYPE_TIN = _saga_api.DATAOBJECT_TYPE_TIN
DATAOBJECT_TYPE_PointCloud = _saga_api.DATAOBJECT_TYPE_PointCloud
DATAOBJECT_TYPE_Undefined = _saga_api.DATAOBJECT_TYPE_Undefined

def SG_Get_DataObject_Identifier(*args):
  return _saga_api.SG_Get_DataObject_Identifier(*args)
SG_Get_DataObject_Identifier = _saga_api.SG_Get_DataObject_Identifier

def SG_Get_DataObject_Name(*args):
  return _saga_api.SG_Get_DataObject_Name(*args)
SG_Get_DataObject_Name = _saga_api.SG_Get_DataObject_Name

def SG_Set_History_Depth(*args):
  return _saga_api.SG_Set_History_Depth(*args)
SG_Set_History_Depth = _saga_api.SG_Set_History_Depth

def SG_Get_History_Depth():
  return _saga_api.SG_Get_History_Depth()
SG_Get_History_Depth = _saga_api.SG_Get_History_Depth
class CSG_Data_Object(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Data_Object, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Data_Object, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _saga_api.delete_CSG_Data_Object
    __del__ = lambda self : None;
    def Destroy(self): return _saga_api.CSG_Data_Object_Destroy(self)
    def Get_ObjectType(self): return _saga_api.CSG_Data_Object_Get_ObjectType(self)
    def is_Valid(self): return _saga_api.CSG_Data_Object_is_Valid(self)
    def Save(self, *args): return _saga_api.CSG_Data_Object_Save(self, *args)
    def Get_File_Name(self, bNullAsString = False): return _saga_api.CSG_Data_Object_Get_File_Name(self, bNullAsString)
    def Get_File_Type(self): return _saga_api.CSG_Data_Object_Get_File_Type(self)
    def Assign(self, *args): return _saga_api.CSG_Data_Object_Assign(self, *args)
    def Set_Name(self, *args): return _saga_api.CSG_Data_Object_Set_Name(self, *args)
    def Get_Name(self): return _saga_api.CSG_Data_Object_Get_Name(self)
    def Set_Description(self, *args): return _saga_api.CSG_Data_Object_Set_Description(self, *args)
    def Get_Description(self): return _saga_api.CSG_Data_Object_Get_Description(self)
    def Set_Modified(self, bOn = True): return _saga_api.CSG_Data_Object_Set_Modified(self, bOn)
    def is_Modified(self): return _saga_api.CSG_Data_Object_is_Modified(self)
    def Update(self): return _saga_api.CSG_Data_Object_Update(self)
    def Get_MetaData(self): return _saga_api.CSG_Data_Object_Get_MetaData(self)
    def Get_MetaData_DB(self): return _saga_api.CSG_Data_Object_Get_MetaData_DB(self)
    def Get_History(self): return _saga_api.CSG_Data_Object_Get_History(self)
    def Get_Projection(self): return _saga_api.CSG_Data_Object_Get_Projection(self)
    def asTable(self): return _saga_api.CSG_Data_Object_asTable(self)
    def asShapes(self): return _saga_api.CSG_Data_Object_asShapes(self)
    def asTIN(self): return _saga_api.CSG_Data_Object_asTIN(self)
    def asPointCloud(self): return _saga_api.CSG_Data_Object_asPointCloud(self)
    def asGrid(self): return _saga_api.CSG_Data_Object_asGrid(self)
    def Set_NoData_Value(self, *args): return _saga_api.CSG_Data_Object_Set_NoData_Value(self, *args)
    def Set_NoData_Value_Range(self, *args): return _saga_api.CSG_Data_Object_Set_NoData_Value_Range(self, *args)
    def Get_NoData_Value(self): return _saga_api.CSG_Data_Object_Get_NoData_Value(self)
    def Get_NoData_hiValue(self): return _saga_api.CSG_Data_Object_Get_NoData_hiValue(self)
    def is_NoData_Value(self, *args): return _saga_api.CSG_Data_Object_is_NoData_Value(self, *args)
CSG_Data_Object_swigregister = _saga_api.CSG_Data_Object_swigregister
CSG_Data_Object_swigregister(CSG_Data_Object)

class CSG_Table_Value(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Table_Value, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Table_Value, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _saga_api.delete_CSG_Table_Value
    __del__ = lambda self : None;
    def Set_Value(self, *args): return _saga_api.CSG_Table_Value_Set_Value(self, *args)
    def asBinary(self): return _saga_api.CSG_Table_Value_asBinary(self)
    def asString(self, *args): return _saga_api.CSG_Table_Value_asString(self, *args)
    def asInt(self): return _saga_api.CSG_Table_Value_asInt(self)
    def asDouble(self): return _saga_api.CSG_Table_Value_asDouble(self)
CSG_Table_Value_swigregister = _saga_api.CSG_Table_Value_swigregister
CSG_Table_Value_swigregister(CSG_Table_Value)

class CSG_Table_Value_Binary(CSG_Table_Value):
    __swig_setmethods__ = {}
    for _s in [CSG_Table_Value]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Table_Value_Binary, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Table_Value]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Table_Value_Binary, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _saga_api.new_CSG_Table_Value_Binary()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Table_Value_Binary
    __del__ = lambda self : None;
    def Set_Value(self, *args): return _saga_api.CSG_Table_Value_Binary_Set_Value(self, *args)
    def Set_NoData(self): return _saga_api.CSG_Table_Value_Binary_Set_NoData(self)
    def is_NoData(self): return _saga_api.CSG_Table_Value_Binary_is_NoData(self)
    def asBinary(self): return _saga_api.CSG_Table_Value_Binary_asBinary(self)
    def asString(self, *args): return _saga_api.CSG_Table_Value_Binary_asString(self, *args)
    def asInt(self): return _saga_api.CSG_Table_Value_Binary_asInt(self)
    def asDouble(self): return _saga_api.CSG_Table_Value_Binary_asDouble(self)
    def Get_Binary(self): return _saga_api.CSG_Table_Value_Binary_Get_Binary(self)
CSG_Table_Value_Binary_swigregister = _saga_api.CSG_Table_Value_Binary_swigregister
CSG_Table_Value_Binary_swigregister(CSG_Table_Value_Binary)

class CSG_Table_Value_String(CSG_Table_Value):
    __swig_setmethods__ = {}
    for _s in [CSG_Table_Value]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Table_Value_String, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Table_Value]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Table_Value_String, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _saga_api.new_CSG_Table_Value_String()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Table_Value_String
    __del__ = lambda self : None;
    def Set_Value(self, *args): return _saga_api.CSG_Table_Value_String_Set_Value(self, *args)
    def asBinary(self): return _saga_api.CSG_Table_Value_String_asBinary(self)
    def asString(self, *args): return _saga_api.CSG_Table_Value_String_asString(self, *args)
    def asInt(self): return _saga_api.CSG_Table_Value_String_asInt(self)
    def asDouble(self): return _saga_api.CSG_Table_Value_String_asDouble(self)
CSG_Table_Value_String_swigregister = _saga_api.CSG_Table_Value_String_swigregister
CSG_Table_Value_String_swigregister(CSG_Table_Value_String)

class CSG_Table_Value_Date(CSG_Table_Value):
    __swig_setmethods__ = {}
    for _s in [CSG_Table_Value]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Table_Value_Date, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Table_Value]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Table_Value_Date, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _saga_api.new_CSG_Table_Value_Date()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Table_Value_Date
    __del__ = lambda self : None;
    def Set_Value(self, *args): return _saga_api.CSG_Table_Value_Date_Set_Value(self, *args)
    def asBinary(self): return _saga_api.CSG_Table_Value_Date_asBinary(self)
    def asString(self, *args): return _saga_api.CSG_Table_Value_Date_asString(self, *args)
    def asInt(self): return _saga_api.CSG_Table_Value_Date_asInt(self)
    def asDouble(self): return _saga_api.CSG_Table_Value_Date_asDouble(self)
CSG_Table_Value_Date_swigregister = _saga_api.CSG_Table_Value_Date_swigregister
CSG_Table_Value_Date_swigregister(CSG_Table_Value_Date)

class CSG_Table_Value_Int(CSG_Table_Value):
    __swig_setmethods__ = {}
    for _s in [CSG_Table_Value]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Table_Value_Int, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Table_Value]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Table_Value_Int, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _saga_api.new_CSG_Table_Value_Int()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Table_Value_Int
    __del__ = lambda self : None;
    def Set_Value(self, *args): return _saga_api.CSG_Table_Value_Int_Set_Value(self, *args)
    def asString(self, *args): return _saga_api.CSG_Table_Value_Int_asString(self, *args)
    def asBinary(self): return _saga_api.CSG_Table_Value_Int_asBinary(self)
    def asInt(self): return _saga_api.CSG_Table_Value_Int_asInt(self)
    def asDouble(self): return _saga_api.CSG_Table_Value_Int_asDouble(self)
CSG_Table_Value_Int_swigregister = _saga_api.CSG_Table_Value_Int_swigregister
CSG_Table_Value_Int_swigregister(CSG_Table_Value_Int)

class CSG_Table_Value_Double(CSG_Table_Value):
    __swig_setmethods__ = {}
    for _s in [CSG_Table_Value]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Table_Value_Double, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Table_Value]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Table_Value_Double, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _saga_api.new_CSG_Table_Value_Double()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Table_Value_Double
    __del__ = lambda self : None;
    def Set_Value(self, *args): return _saga_api.CSG_Table_Value_Double_Set_Value(self, *args)
    def asString(self, *args): return _saga_api.CSG_Table_Value_Double_asString(self, *args)
    def asBinary(self): return _saga_api.CSG_Table_Value_Double_asBinary(self)
    def asInt(self): return _saga_api.CSG_Table_Value_Double_asInt(self)
    def asDouble(self): return _saga_api.CSG_Table_Value_Double_asDouble(self)
CSG_Table_Value_Double_swigregister = _saga_api.CSG_Table_Value_Double_swigregister
CSG_Table_Value_Double_swigregister(CSG_Table_Value_Double)

TABLE_FILETYPE_Undefined = _saga_api.TABLE_FILETYPE_Undefined
TABLE_FILETYPE_Text = _saga_api.TABLE_FILETYPE_Text
TABLE_FILETYPE_Text_NoHeadLine = _saga_api.TABLE_FILETYPE_Text_NoHeadLine
TABLE_FILETYPE_DBase = _saga_api.TABLE_FILETYPE_DBase
TABLE_INDEX_None = _saga_api.TABLE_INDEX_None
TABLE_INDEX_Ascending = _saga_api.TABLE_INDEX_Ascending
TABLE_INDEX_Descending = _saga_api.TABLE_INDEX_Descending
SG_TABLE_REC_FLAG_Modified = _saga_api.SG_TABLE_REC_FLAG_Modified
SG_TABLE_REC_FLAG_Selected = _saga_api.SG_TABLE_REC_FLAG_Selected
class CSG_Table_Record(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Table_Record, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Table_Record, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def Get_Table(self): return _saga_api.CSG_Table_Record_Get_Table(self)
    def Get_Index(self): return _saga_api.CSG_Table_Record_Get_Index(self)
    def Set_Value(self, *args): return _saga_api.CSG_Table_Record_Set_Value(self, *args)
    def Add_Value(self, *args): return _saga_api.CSG_Table_Record_Add_Value(self, *args)
    def Mul_Value(self, *args): return _saga_api.CSG_Table_Record_Mul_Value(self, *args)
    def Set_NoData(self, *args): return _saga_api.CSG_Table_Record_Set_NoData(self, *args)
    def is_NoData(self, *args): return _saga_api.CSG_Table_Record_is_NoData(self, *args)
    def asString(self, *args): return _saga_api.CSG_Table_Record_asString(self, *args)
    def asChar(self, *args): return _saga_api.CSG_Table_Record_asChar(self, *args)
    def asShort(self, *args): return _saga_api.CSG_Table_Record_asShort(self, *args)
    def asInt(self, *args): return _saga_api.CSG_Table_Record_asInt(self, *args)
    def asFloat(self, *args): return _saga_api.CSG_Table_Record_asFloat(self, *args)
    def asDouble(self, *args): return _saga_api.CSG_Table_Record_asDouble(self, *args)
    def Get_Value(self, *args): return _saga_api.CSG_Table_Record_Get_Value(self, *args)
    def Assign(self, *args): return _saga_api.CSG_Table_Record_Assign(self, *args)
    def is_Selected(self): return _saga_api.CSG_Table_Record_is_Selected(self)
    def is_Modified(self): return _saga_api.CSG_Table_Record_is_Modified(self)
CSG_Table_Record_swigregister = _saga_api.CSG_Table_Record_swigregister
CSG_Table_Record_swigregister(CSG_Table_Record)

class CSG_Table(CSG_Data_Object):
    __swig_setmethods__ = {}
    for _s in [CSG_Data_Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Table, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Data_Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Table, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Table(*args)
        try: self.this.append(this)
        except: self.this = this
    def Create(self, *args): return _saga_api.CSG_Table_Create(self, *args)
    __swig_destroy__ = _saga_api.delete_CSG_Table
    __del__ = lambda self : None;
    def Destroy(self): return _saga_api.CSG_Table_Destroy(self)
    def Get_ObjectType(self): return _saga_api.CSG_Table_Get_ObjectType(self)
    def Assign(self, *args): return _saga_api.CSG_Table_Assign(self, *args)
    def Assign_Values(self, *args): return _saga_api.CSG_Table_Assign_Values(self, *args)
    def Save(self, *args): return _saga_api.CSG_Table_Save(self, *args)
    def Serialize(self, *args): return _saga_api.CSG_Table_Serialize(self, *args)
    def Get_Owner(self): return _saga_api.CSG_Table_Get_Owner(self)
    def is_Private(self): return _saga_api.CSG_Table_is_Private(self)
    def is_Valid(self): return _saga_api.CSG_Table_is_Valid(self)
    def is_Compatible(self, *args): return _saga_api.CSG_Table_is_Compatible(self, *args)
    def Add_Field(self, *args): return _saga_api.CSG_Table_Add_Field(self, *args)
    def Del_Field(self, *args): return _saga_api.CSG_Table_Del_Field(self, *args)
    def Get_Field_Count(self): return _saga_api.CSG_Table_Get_Field_Count(self)
    def Get_Field_Name(self, *args): return _saga_api.CSG_Table_Get_Field_Name(self, *args)
    def Get_Field_Type(self, *args): return _saga_api.CSG_Table_Get_Field_Type(self, *args)
    def Get_Field_Length(self, *args): return _saga_api.CSG_Table_Get_Field_Length(self, *args)
    def Set_Field_Name(self, *args): return _saga_api.CSG_Table_Set_Field_Name(self, *args)
    def Get_Minimum(self, *args): return _saga_api.CSG_Table_Get_Minimum(self, *args)
    def Get_Maximum(self, *args): return _saga_api.CSG_Table_Get_Maximum(self, *args)
    def Get_Range(self, *args): return _saga_api.CSG_Table_Get_Range(self, *args)
    def Get_Mean(self, *args): return _saga_api.CSG_Table_Get_Mean(self, *args)
    def Get_StdDev(self, *args): return _saga_api.CSG_Table_Get_StdDev(self, *args)
    def Get_Variance(self, *args): return _saga_api.CSG_Table_Get_Variance(self, *args)
    def Add_Record(self, pCopy = None): return _saga_api.CSG_Table_Add_Record(self, pCopy)
    def Ins_Record(self, *args): return _saga_api.CSG_Table_Ins_Record(self, *args)
    def Del_Record(self, *args): return _saga_api.CSG_Table_Del_Record(self, *args)
    def Del_Records(self): return _saga_api.CSG_Table_Del_Records(self)
    def Get_Count(self): return _saga_api.CSG_Table_Get_Count(self)
    def Get_Record_Count(self): return _saga_api.CSG_Table_Get_Record_Count(self)
    def Get_Record(self, *args): return _saga_api.CSG_Table_Get_Record(self, *args)
    def Get_Index(self, *args): return _saga_api.CSG_Table_Get_Index(self, *args)
    def Get_Record_byIndex(self, *args): return _saga_api.CSG_Table_Get_Record_byIndex(self, *args)
    def Set_Value(self, *args): return _saga_api.CSG_Table_Set_Value(self, *args)
    def Get_Value(self, *args): return _saga_api.CSG_Table_Get_Value(self, *args)
    def Set_Modified(self, bModified = True): return _saga_api.CSG_Table_Set_Modified(self, bModified)
    def Get_Selection_Count(self): return _saga_api.CSG_Table_Get_Selection_Count(self)
    def Get_Selection(self, Index = 0): return _saga_api.CSG_Table_Get_Selection(self, Index)
    def is_Selected(self, *args): return _saga_api.CSG_Table_is_Selected(self, *args)
    def Select(self, *args): return _saga_api.CSG_Table_Select(self, *args)
    def Del_Selection(self): return _saga_api.CSG_Table_Del_Selection(self)
    def Inv_Selection(self): return _saga_api.CSG_Table_Inv_Selection(self)
    def Set_Index(self, *args): return _saga_api.CSG_Table_Set_Index(self, *args)
    def Del_Index(self): return _saga_api.CSG_Table_Del_Index(self)
    def Toggle_Index(self, *args): return _saga_api.CSG_Table_Toggle_Index(self, *args)
    def is_Indexed(self): return _saga_api.CSG_Table_is_Indexed(self)
    def Get_Index_Field(self, *args): return _saga_api.CSG_Table_Get_Index_Field(self, *args)
    def Get_Index_Order(self, *args): return _saga_api.CSG_Table_Get_Index_Order(self, *args)
CSG_Table_swigregister = _saga_api.CSG_Table_swigregister
CSG_Table_swigregister(CSG_Table)

GRID_PYRAMID_Mean = _saga_api.GRID_PYRAMID_Mean
GRID_PYRAMID_Max = _saga_api.GRID_PYRAMID_Max
GRID_PYRAMID_Min = _saga_api.GRID_PYRAMID_Min
GRID_PYRAMID_MaxCount = _saga_api.GRID_PYRAMID_MaxCount
GRID_PYRAMID_Arithmetic = _saga_api.GRID_PYRAMID_Arithmetic
GRID_PYRAMID_Geometric = _saga_api.GRID_PYRAMID_Geometric
class CSG_Grid_Pyramid(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Grid_Pyramid, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Grid_Pyramid, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Grid_Pyramid(*args)
        try: self.this.append(this)
        except: self.this = this
    def Create(self, *args): return _saga_api.CSG_Grid_Pyramid_Create(self, *args)
    __swig_destroy__ = _saga_api.delete_CSG_Grid_Pyramid
    __del__ = lambda self : None;
    def Destroy(self): return _saga_api.CSG_Grid_Pyramid_Destroy(self)
    def Get_Count(self): return _saga_api.CSG_Grid_Pyramid_Get_Count(self)
    def Get_Grid(self, *args): return _saga_api.CSG_Grid_Pyramid_Get_Grid(self, *args)
CSG_Grid_Pyramid_swigregister = _saga_api.CSG_Grid_Pyramid_swigregister
CSG_Grid_Pyramid_swigregister(CSG_Grid_Pyramid)

def SG_Create_Table(*args):
  return _saga_api.SG_Create_Table(*args)
SG_Create_Table = _saga_api.SG_Create_Table

GRID_MEMORY_Normal = _saga_api.GRID_MEMORY_Normal
GRID_MEMORY_Cache = _saga_api.GRID_MEMORY_Cache
GRID_MEMORY_Compression = _saga_api.GRID_MEMORY_Compression
GRID_FILE_FORMAT_Undefined = _saga_api.GRID_FILE_FORMAT_Undefined
GRID_FILE_FORMAT_Binary = _saga_api.GRID_FILE_FORMAT_Binary
GRID_FILE_FORMAT_ASCII = _saga_api.GRID_FILE_FORMAT_ASCII
GRID_FILE_KEY_NAME = _saga_api.GRID_FILE_KEY_NAME
GRID_FILE_KEY_DESCRIPTION = _saga_api.GRID_FILE_KEY_DESCRIPTION
GRID_FILE_KEY_UNITNAME = _saga_api.GRID_FILE_KEY_UNITNAME
GRID_FILE_KEY_DATAFILE_NAME = _saga_api.GRID_FILE_KEY_DATAFILE_NAME
GRID_FILE_KEY_DATAFILE_OFFSET = _saga_api.GRID_FILE_KEY_DATAFILE_OFFSET
GRID_FILE_KEY_DATAFORMAT = _saga_api.GRID_FILE_KEY_DATAFORMAT
GRID_FILE_KEY_BYTEORDER_BIG = _saga_api.GRID_FILE_KEY_BYTEORDER_BIG
GRID_FILE_KEY_POSITION_XMIN = _saga_api.GRID_FILE_KEY_POSITION_XMIN
GRID_FILE_KEY_POSITION_YMIN = _saga_api.GRID_FILE_KEY_POSITION_YMIN
GRID_FILE_KEY_CELLCOUNT_X = _saga_api.GRID_FILE_KEY_CELLCOUNT_X
GRID_FILE_KEY_CELLCOUNT_Y = _saga_api.GRID_FILE_KEY_CELLCOUNT_Y
GRID_FILE_KEY_CELLSIZE = _saga_api.GRID_FILE_KEY_CELLSIZE
GRID_FILE_KEY_Z_FACTOR = _saga_api.GRID_FILE_KEY_Z_FACTOR
GRID_FILE_KEY_NODATA_VALUE = _saga_api.GRID_FILE_KEY_NODATA_VALUE
GRID_FILE_KEY_TOPTOBOTTOM = _saga_api.GRID_FILE_KEY_TOPTOBOTTOM
GRID_FILE_KEY_Count = _saga_api.GRID_FILE_KEY_Count
GRID_INTERPOLATION_NearestNeighbour = _saga_api.GRID_INTERPOLATION_NearestNeighbour
GRID_INTERPOLATION_Bilinear = _saga_api.GRID_INTERPOLATION_Bilinear
GRID_INTERPOLATION_InverseDistance = _saga_api.GRID_INTERPOLATION_InverseDistance
GRID_INTERPOLATION_BicubicSpline = _saga_api.GRID_INTERPOLATION_BicubicSpline
GRID_INTERPOLATION_BSpline = _saga_api.GRID_INTERPOLATION_BSpline
GRID_INTERPOLATION_Mean_Nodes = _saga_api.GRID_INTERPOLATION_Mean_Nodes
GRID_INTERPOLATION_Mean_Cells = _saga_api.GRID_INTERPOLATION_Mean_Cells
GRID_INTERPOLATION_Minimum = _saga_api.GRID_INTERPOLATION_Minimum
GRID_INTERPOLATION_Maximum = _saga_api.GRID_INTERPOLATION_Maximum
GRID_INTERPOLATION_Majority = _saga_api.GRID_INTERPOLATION_Majority
GRID_INTERPOLATION_Undefined = _saga_api.GRID_INTERPOLATION_Undefined
GRID_OPERATION_Addition = _saga_api.GRID_OPERATION_Addition
GRID_OPERATION_Subtraction = _saga_api.GRID_OPERATION_Subtraction
GRID_OPERATION_Multiplication = _saga_api.GRID_OPERATION_Multiplication
GRID_OPERATION_Division = _saga_api.GRID_OPERATION_Division
class CSG_Grid_System(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Grid_System, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Grid_System, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Grid_System(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Grid_System
    __del__ = lambda self : None;
    def is_Valid(self): return _saga_api.CSG_Grid_System_is_Valid(self)
    def Get_Name(self, bShort = True): return _saga_api.CSG_Grid_System_Get_Name(self, bShort)
    def Get_Cellsize(self): return _saga_api.CSG_Grid_System_Get_Cellsize(self)
    def Get_Cellarea(self): return _saga_api.CSG_Grid_System_Get_Cellarea(self)
    def Get_NX(self): return _saga_api.CSG_Grid_System_Get_NX(self)
    def Get_NY(self): return _saga_api.CSG_Grid_System_Get_NY(self)
    def Get_NCells(self): return _saga_api.CSG_Grid_System_Get_NCells(self)
    def Get_Extent(self, bCells = False): return _saga_api.CSG_Grid_System_Get_Extent(self, bCells)
    def Get_XMin(self, bCells = False): return _saga_api.CSG_Grid_System_Get_XMin(self, bCells)
    def Get_XMax(self, bCells = False): return _saga_api.CSG_Grid_System_Get_XMax(self, bCells)
    def Get_XRange(self, bCells = False): return _saga_api.CSG_Grid_System_Get_XRange(self, bCells)
    def Get_YMin(self, bCells = False): return _saga_api.CSG_Grid_System_Get_YMin(self, bCells)
    def Get_YMax(self, bCells = False): return _saga_api.CSG_Grid_System_Get_YMax(self, bCells)
    def Get_YRange(self, bCells = False): return _saga_api.CSG_Grid_System_Get_YRange(self, bCells)
    def __eq__(self, *args): return _saga_api.CSG_Grid_System___eq__(self, *args)
    def Assign(self, *args): return _saga_api.CSG_Grid_System_Assign(self, *args)
    def is_Equal(self, *args): return _saga_api.CSG_Grid_System_is_Equal(self, *args)
    def Fit_xto_Grid_System(self, *args): return _saga_api.CSG_Grid_System_Fit_xto_Grid_System(self, *args)
    def Fit_yto_Grid_System(self, *args): return _saga_api.CSG_Grid_System_Fit_yto_Grid_System(self, *args)
    def Fit_to_Grid_System(self, *args): return _saga_api.CSG_Grid_System_Fit_to_Grid_System(self, *args)
    def Get_xGrid_to_World(self, *args): return _saga_api.CSG_Grid_System_Get_xGrid_to_World(self, *args)
    def Get_yGrid_to_World(self, *args): return _saga_api.CSG_Grid_System_Get_yGrid_to_World(self, *args)
    def Get_Grid_to_World(self, *args): return _saga_api.CSG_Grid_System_Get_Grid_to_World(self, *args)
    def Get_xWorld_to_Grid(self, *args): return _saga_api.CSG_Grid_System_Get_xWorld_to_Grid(self, *args)
    def Get_yWorld_to_Grid(self, *args): return _saga_api.CSG_Grid_System_Get_yWorld_to_Grid(self, *args)
    def Get_World_to_Grid(self, *args): return _saga_api.CSG_Grid_System_Get_World_to_Grid(self, *args)
    def Get_Neighbor_Pos(self, *args): return _saga_api.CSG_Grid_System_Get_Neighbor_Pos(self, *args)
    __swig_getmethods__["Get_xTo"] = lambda x: _saga_api.CSG_Grid_System_Get_xTo
    if _newclass:Get_xTo = staticmethod(_saga_api.CSG_Grid_System_Get_xTo)
    __swig_getmethods__["Get_yTo"] = lambda x: _saga_api.CSG_Grid_System_Get_yTo
    if _newclass:Get_yTo = staticmethod(_saga_api.CSG_Grid_System_Get_yTo)
    __swig_getmethods__["Get_xFrom"] = lambda x: _saga_api.CSG_Grid_System_Get_xFrom
    if _newclass:Get_xFrom = staticmethod(_saga_api.CSG_Grid_System_Get_xFrom)
    __swig_getmethods__["Get_yFrom"] = lambda x: _saga_api.CSG_Grid_System_Get_yFrom
    if _newclass:Get_yFrom = staticmethod(_saga_api.CSG_Grid_System_Get_yFrom)
    def Get_xToSave(self, *args): return _saga_api.CSG_Grid_System_Get_xToSave(self, *args)
    def Get_yToSave(self, *args): return _saga_api.CSG_Grid_System_Get_yToSave(self, *args)
    def Get_xFromSave(self, *args): return _saga_api.CSG_Grid_System_Get_xFromSave(self, *args)
    def Get_yFromSave(self, *args): return _saga_api.CSG_Grid_System_Get_yFromSave(self, *args)
    def is_InGrid(self, *args): return _saga_api.CSG_Grid_System_is_InGrid(self, *args)
    def Get_Length(self, *args): return _saga_api.CSG_Grid_System_Get_Length(self, *args)
    __swig_getmethods__["Get_UnitLength"] = lambda x: _saga_api.CSG_Grid_System_Get_UnitLength
    if _newclass:Get_UnitLength = staticmethod(_saga_api.CSG_Grid_System_Get_UnitLength)
CSG_Grid_System_swigregister = _saga_api.CSG_Grid_System_swigregister
CSG_Grid_System_swigregister(CSG_Grid_System)
gSG_Grid_File_Key_Names = cvar.gSG_Grid_File_Key_Names

def CSG_Grid_System_Get_xTo(*args):
  return _saga_api.CSG_Grid_System_Get_xTo(*args)
CSG_Grid_System_Get_xTo = _saga_api.CSG_Grid_System_Get_xTo

def CSG_Grid_System_Get_yTo(*args):
  return _saga_api.CSG_Grid_System_Get_yTo(*args)
CSG_Grid_System_Get_yTo = _saga_api.CSG_Grid_System_Get_yTo

def CSG_Grid_System_Get_xFrom(*args):
  return _saga_api.CSG_Grid_System_Get_xFrom(*args)
CSG_Grid_System_Get_xFrom = _saga_api.CSG_Grid_System_Get_xFrom

def CSG_Grid_System_Get_yFrom(*args):
  return _saga_api.CSG_Grid_System_Get_yFrom(*args)
CSG_Grid_System_Get_yFrom = _saga_api.CSG_Grid_System_Get_yFrom

def CSG_Grid_System_Get_UnitLength(*args):
  return _saga_api.CSG_Grid_System_Get_UnitLength(*args)
CSG_Grid_System_Get_UnitLength = _saga_api.CSG_Grid_System_Get_UnitLength

class CSG_Grid(CSG_Data_Object):
    __swig_setmethods__ = {}
    for _s in [CSG_Data_Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Grid, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Data_Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Grid, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Grid(*args)
        try: self.this.append(this)
        except: self.this = this
    def Create(self, *args): return _saga_api.CSG_Grid_Create(self, *args)
    __swig_destroy__ = _saga_api.delete_CSG_Grid
    __del__ = lambda self : None;
    def Destroy(self): return _saga_api.CSG_Grid_Destroy(self)
    def Get_ObjectType(self): return _saga_api.CSG_Grid_Get_ObjectType(self)
    def Get_Type(self): return _saga_api.CSG_Grid_Get_Type(self)
    def Get_nValueBytes(self): return _saga_api.CSG_Grid_Get_nValueBytes(self)
    def Get_nLineBytes(self): return _saga_api.CSG_Grid_Get_nLineBytes(self)
    def Set_Unit(self, *args): return _saga_api.CSG_Grid_Set_Unit(self, *args)
    def Get_Unit(self): return _saga_api.CSG_Grid_Get_Unit(self)
    def Get_System(self): return _saga_api.CSG_Grid_Get_System(self)
    def Get_NX(self): return _saga_api.CSG_Grid_Get_NX(self)
    def Get_NY(self): return _saga_api.CSG_Grid_Get_NY(self)
    def Get_NCells(self): return _saga_api.CSG_Grid_Get_NCells(self)
    def Get_Cellsize(self): return _saga_api.CSG_Grid_Get_Cellsize(self)
    def Get_Cellarea(self): return _saga_api.CSG_Grid_Get_Cellarea(self)
    def Get_Extent(self, bCells = False): return _saga_api.CSG_Grid_Get_Extent(self, bCells)
    def Get_XMin(self, bCells = False): return _saga_api.CSG_Grid_Get_XMin(self, bCells)
    def Get_XMax(self, bCells = False): return _saga_api.CSG_Grid_Get_XMax(self, bCells)
    def Get_XRange(self, bCells = False): return _saga_api.CSG_Grid_Get_XRange(self, bCells)
    def Get_YMin(self, bCells = False): return _saga_api.CSG_Grid_Get_YMin(self, bCells)
    def Get_YMax(self, bCells = False): return _saga_api.CSG_Grid_Get_YMax(self, bCells)
    def Get_YRange(self, bCells = False): return _saga_api.CSG_Grid_Get_YRange(self, bCells)
    def Get_ZMin(self, bZFactor = False): return _saga_api.CSG_Grid_Get_ZMin(self, bZFactor)
    def Get_ZMax(self, bZFactor = False): return _saga_api.CSG_Grid_Get_ZMax(self, bZFactor)
    def Get_ZRange(self, bZFactor = False): return _saga_api.CSG_Grid_Get_ZRange(self, bZFactor)
    def Set_ZFactor(self, *args): return _saga_api.CSG_Grid_Set_ZFactor(self, *args)
    def Get_ZFactor(self): return _saga_api.CSG_Grid_Get_ZFactor(self)
    def Get_ArithMean(self, bZFactor = False): return _saga_api.CSG_Grid_Get_ArithMean(self, bZFactor)
    def Get_StdDev(self, bZFactor = False): return _saga_api.CSG_Grid_Get_StdDev(self, bZFactor)
    def Get_Variance(self): return _saga_api.CSG_Grid_Get_Variance(self)
    def Get_NoData_Count(self): return _saga_api.CSG_Grid_Get_NoData_Count(self)
    def Save(self, *args): return _saga_api.CSG_Grid_Save(self, *args)
    def is_Valid(self): return _saga_api.CSG_Grid_is_Valid(self)
    def is_Intersecting(self, *args): return _saga_api.CSG_Grid_is_Intersecting(self, *args)
    def is_Compatible(self, *args): return _saga_api.CSG_Grid_is_Compatible(self, *args)
    def is_InGrid(self, *args): return _saga_api.CSG_Grid_is_InGrid(self, *args)
    def is_InGrid_byPos(self, *args): return _saga_api.CSG_Grid_is_InGrid_byPos(self, *args)
    def Get_Buffer_Size(self): return _saga_api.CSG_Grid_Get_Buffer_Size(self)
    def Set_Buffer_Size(self, *args): return _saga_api.CSG_Grid_Set_Buffer_Size(self, *args)
    def Set_Cache(self, *args): return _saga_api.CSG_Grid_Set_Cache(self, *args)
    def is_Cached(self): return _saga_api.CSG_Grid_is_Cached(self)
    def Set_Compression(self, *args): return _saga_api.CSG_Grid_Set_Compression(self, *args)
    def is_Compressed(self): return _saga_api.CSG_Grid_is_Compressed(self)
    def Get_Compression_Ratio(self): return _saga_api.CSG_Grid_Get_Compression_Ratio(self)
    def Assign_NoData(self): return _saga_api.CSG_Grid_Assign_NoData(self)
    def Assign(self, *args): return _saga_api.CSG_Grid_Assign(self, *args)
    def Flip(self): return _saga_api.CSG_Grid_Flip(self)
    def Mirror(self): return _saga_api.CSG_Grid_Mirror(self)
    def Invert(self): return _saga_api.CSG_Grid_Invert(self)
    def Normalise(self): return _saga_api.CSG_Grid_Normalise(self)
    def DeNormalise(self, *args): return _saga_api.CSG_Grid_DeNormalise(self, *args)
    def Standardise(self): return _saga_api.CSG_Grid_Standardise(self)
    def DeStandardise(self, *args): return _saga_api.CSG_Grid_DeStandardise(self, *args)
    def Get_Gradient_NeighborDir(self, *args): return _saga_api.CSG_Grid_Get_Gradient_NeighborDir(self, *args)
    def Get_Gradient(self, *args): return _saga_api.CSG_Grid_Get_Gradient(self, *args)
    def Set_Modified(self, bFlag = True): return _saga_api.CSG_Grid_Set_Modified(self, bFlag)
    def Set_Index(self, bOn = False): return _saga_api.CSG_Grid_Set_Index(self, bOn)
    def Get_Sorted(self, *args): return _saga_api.CSG_Grid_Get_Sorted(self, *args)
    def Get_Percentile(self, *args): return _saga_api.CSG_Grid_Get_Percentile(self, *args)
    def is_NoData(self, *args): return _saga_api.CSG_Grid_is_NoData(self, *args)
    def Set_NoData(self, *args): return _saga_api.CSG_Grid_Set_NoData(self, *args)
    def __add__(self, *args): return _saga_api.CSG_Grid___add__(self, *args)
    def __iadd__(self, *args): return _saga_api.CSG_Grid___iadd__(self, *args)
    def Add(self, *args): return _saga_api.CSG_Grid_Add(self, *args)
    def __sub__(self, *args): return _saga_api.CSG_Grid___sub__(self, *args)
    def __isub__(self, *args): return _saga_api.CSG_Grid___isub__(self, *args)
    def Subtract(self, *args): return _saga_api.CSG_Grid_Subtract(self, *args)
    def __mul__(self, *args): return _saga_api.CSG_Grid___mul__(self, *args)
    def __imul__(self, *args): return _saga_api.CSG_Grid___imul__(self, *args)
    def Multiply(self, *args): return _saga_api.CSG_Grid_Multiply(self, *args)
    def __div__(self, *args): return _saga_api.CSG_Grid___div__(self, *args)
    def __idiv__(self, *args): return _saga_api.CSG_Grid___idiv__(self, *args)
    def Divide(self, *args): return _saga_api.CSG_Grid_Divide(self, *args)
    def __call__(self, *args): return _saga_api.CSG_Grid___call__(self, *args)
    def Get_Value(self, *args): return _saga_api.CSG_Grid_Get_Value(self, *args)
    def asByte(self, *args): return _saga_api.CSG_Grid_asByte(self, *args)
    def asChar(self, *args): return _saga_api.CSG_Grid_asChar(self, *args)
    def asShort(self, *args): return _saga_api.CSG_Grid_asShort(self, *args)
    def asInt(self, *args): return _saga_api.CSG_Grid_asInt(self, *args)
    def asFloat(self, *args): return _saga_api.CSG_Grid_asFloat(self, *args)
    def asDouble(self, *args): return _saga_api.CSG_Grid_asDouble(self, *args)
    def Add_Value(self, *args): return _saga_api.CSG_Grid_Add_Value(self, *args)
    def Mul_Value(self, *args): return _saga_api.CSG_Grid_Mul_Value(self, *args)
    def Set_Value(self, *args): return _saga_api.CSG_Grid_Set_Value(self, *args)
    def Set_Value_And_Sort(self, *args): return _saga_api.CSG_Grid_Set_Value_And_Sort(self, *args)
CSG_Grid_swigregister = _saga_api.CSG_Grid_swigregister
CSG_Grid_swigregister(CSG_Grid)


def SG_Grid_Cache_Get_Directory():
  return _saga_api.SG_Grid_Cache_Get_Directory()
SG_Grid_Cache_Get_Directory = _saga_api.SG_Grid_Cache_Get_Directory

def SG_Grid_Cache_Set_Directory(*args):
  return _saga_api.SG_Grid_Cache_Set_Directory(*args)
SG_Grid_Cache_Set_Directory = _saga_api.SG_Grid_Cache_Set_Directory

def SG_Grid_Cache_Set_Automatic(*args):
  return _saga_api.SG_Grid_Cache_Set_Automatic(*args)
SG_Grid_Cache_Set_Automatic = _saga_api.SG_Grid_Cache_Set_Automatic

def SG_Grid_Cache_Get_Automatic():
  return _saga_api.SG_Grid_Cache_Get_Automatic()
SG_Grid_Cache_Get_Automatic = _saga_api.SG_Grid_Cache_Get_Automatic

def SG_Grid_Cache_Set_Confirm(*args):
  return _saga_api.SG_Grid_Cache_Set_Confirm(*args)
SG_Grid_Cache_Set_Confirm = _saga_api.SG_Grid_Cache_Set_Confirm

def SG_Grid_Cache_Get_Confirm():
  return _saga_api.SG_Grid_Cache_Get_Confirm()
SG_Grid_Cache_Get_Confirm = _saga_api.SG_Grid_Cache_Get_Confirm

def SG_Grid_Cache_Set_Threshold(*args):
  return _saga_api.SG_Grid_Cache_Set_Threshold(*args)
SG_Grid_Cache_Set_Threshold = _saga_api.SG_Grid_Cache_Set_Threshold

def SG_Grid_Cache_Set_Threshold_MB(*args):
  return _saga_api.SG_Grid_Cache_Set_Threshold_MB(*args)
SG_Grid_Cache_Set_Threshold_MB = _saga_api.SG_Grid_Cache_Set_Threshold_MB

def SG_Grid_Cache_Get_Threshold():
  return _saga_api.SG_Grid_Cache_Get_Threshold()
SG_Grid_Cache_Get_Threshold = _saga_api.SG_Grid_Cache_Get_Threshold

def SG_Grid_Cache_Get_Threshold_MB():
  return _saga_api.SG_Grid_Cache_Get_Threshold_MB()
SG_Grid_Cache_Get_Threshold_MB = _saga_api.SG_Grid_Cache_Get_Threshold_MB
class CSG_Grid_Stack(CSG_Stack):
    __swig_setmethods__ = {}
    for _s in [CSG_Stack]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Grid_Stack, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Stack]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Grid_Stack, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _saga_api.new_CSG_Grid_Stack()
        try: self.this.append(this)
        except: self.this = this
    def Push(self, *args): return _saga_api.CSG_Grid_Stack_Push(self, *args)
    def Pop(self, *args): return _saga_api.CSG_Grid_Stack_Pop(self, *args)
    __swig_destroy__ = _saga_api.delete_CSG_Grid_Stack
    __del__ = lambda self : None;
CSG_Grid_Stack_swigregister = _saga_api.CSG_Grid_Stack_swigregister
CSG_Grid_Stack_swigregister(CSG_Grid_Stack)

def SG_Create_Grid(*args):
  return _saga_api.SG_Create_Grid(*args)
SG_Create_Grid = _saga_api.SG_Create_Grid

class CSG_Grid_Cell_Addressor(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Grid_Cell_Addressor, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Grid_Cell_Addressor, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _saga_api.new_CSG_Grid_Cell_Addressor()
        try: self.this.append(this)
        except: self.this = this
    def Destroy(self): return _saga_api.CSG_Grid_Cell_Addressor_Destroy(self)
    def Get_Weighting(self): return _saga_api.CSG_Grid_Cell_Addressor_Get_Weighting(self)
    def Set_Radius(self, *args): return _saga_api.CSG_Grid_Cell_Addressor_Set_Radius(self, *args)
    def Set_Sector(self, *args): return _saga_api.CSG_Grid_Cell_Addressor_Set_Sector(self, *args)
    def Get_Count(self): return _saga_api.CSG_Grid_Cell_Addressor_Get_Count(self)
    def Get_X(self, *args): return _saga_api.CSG_Grid_Cell_Addressor_Get_X(self, *args)
    def Get_Y(self, *args): return _saga_api.CSG_Grid_Cell_Addressor_Get_Y(self, *args)
    def Get_Distance(self, *args): return _saga_api.CSG_Grid_Cell_Addressor_Get_Distance(self, *args)
    def Get_Weight(self, *args): return _saga_api.CSG_Grid_Cell_Addressor_Get_Weight(self, *args)
    def Get_Values(self, *args): return _saga_api.CSG_Grid_Cell_Addressor_Get_Values(self, *args)
    __swig_destroy__ = _saga_api.delete_CSG_Grid_Cell_Addressor
    __del__ = lambda self : None;
CSG_Grid_Cell_Addressor_swigregister = _saga_api.CSG_Grid_Cell_Addressor_swigregister
CSG_Grid_Cell_Addressor_swigregister(CSG_Grid_Cell_Addressor)

SG_VERTEX_TYPE_XY = _saga_api.SG_VERTEX_TYPE_XY
SG_VERTEX_TYPE_XYZ = _saga_api.SG_VERTEX_TYPE_XYZ
SG_VERTEX_TYPE_XYZM = _saga_api.SG_VERTEX_TYPE_XYZM
SHAPE_TYPE_Undefined = _saga_api.SHAPE_TYPE_Undefined
SHAPE_TYPE_Point = _saga_api.SHAPE_TYPE_Point
SHAPE_TYPE_Points = _saga_api.SHAPE_TYPE_Points
SHAPE_TYPE_Line = _saga_api.SHAPE_TYPE_Line
SHAPE_TYPE_Polygon = _saga_api.SHAPE_TYPE_Polygon

def SG_Get_ShapeType_Name(*args):
  return _saga_api.SG_Get_ShapeType_Name(*args)
SG_Get_ShapeType_Name = _saga_api.SG_Get_ShapeType_Name
class CSG_Shape(CSG_Table_Record):
    __swig_setmethods__ = {}
    for _s in [CSG_Table_Record]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Shape, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Table_Record]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Shape, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Destroy(self): return _saga_api.CSG_Shape_Destroy(self)
    def Assign(self, *args): return _saga_api.CSG_Shape_Assign(self, *args)
    def Get_Type(self): return _saga_api.CSG_Shape_Get_Type(self)
    def is_Valid(self): return _saga_api.CSG_Shape_is_Valid(self)
    def Del_Point(self, *args): return _saga_api.CSG_Shape_Del_Point(self, *args)
    def Add_Point(self, *args): return _saga_api.CSG_Shape_Add_Point(self, *args)
    def Ins_Point(self, *args): return _saga_api.CSG_Shape_Ins_Point(self, *args)
    def Set_Point(self, *args): return _saga_api.CSG_Shape_Set_Point(self, *args)
    def Del_Part(self, *args): return _saga_api.CSG_Shape_Del_Part(self, *args)
    def Del_Parts(self): return _saga_api.CSG_Shape_Del_Parts(self)
    def Get_Part_Count(self): return _saga_api.CSG_Shape_Get_Part_Count(self)
    def Get_Point_Count(self, *args): return _saga_api.CSG_Shape_Get_Point_Count(self, *args)
    def Get_Point(self, *args): return _saga_api.CSG_Shape_Get_Point(self, *args)
    def Set_Z(self, *args): return _saga_api.CSG_Shape_Set_Z(self, *args)
    def Get_Z(self, *args): return _saga_api.CSG_Shape_Get_Z(self, *args)
    def Get_ZMin(self): return _saga_api.CSG_Shape_Get_ZMin(self)
    def Get_ZMax(self): return _saga_api.CSG_Shape_Get_ZMax(self)
    def Set_M(self, *args): return _saga_api.CSG_Shape_Set_M(self, *args)
    def Get_M(self, *args): return _saga_api.CSG_Shape_Get_M(self, *args)
    def Get_MMin(self): return _saga_api.CSG_Shape_Get_MMin(self)
    def Get_MMax(self): return _saga_api.CSG_Shape_Get_MMax(self)
    def Get_Extent(self, *args): return _saga_api.CSG_Shape_Get_Extent(self, *args)
    def Get_Centroid(self): return _saga_api.CSG_Shape_Get_Centroid(self)
    def Intersects(self, *args): return _saga_api.CSG_Shape_Intersects(self, *args)
    def Get_Distance(self, *args): return _saga_api.CSG_Shape_Get_Distance(self, *args)
    def Revert_Points(self, *args): return _saga_api.CSG_Shape_Revert_Points(self, *args)
CSG_Shape_swigregister = _saga_api.CSG_Shape_swigregister
CSG_Shape_swigregister(CSG_Shape)

class CSG_Shape_Point(CSG_Shape):
    __swig_setmethods__ = {}
    for _s in [CSG_Shape]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Shape_Point, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Shape]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Shape_Point, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def is_Valid(self): return _saga_api.CSG_Shape_Point_is_Valid(self)
    def Add_Point(self, *args): return _saga_api.CSG_Shape_Point_Add_Point(self, *args)
    def Ins_Point(self, *args): return _saga_api.CSG_Shape_Point_Ins_Point(self, *args)
    def Set_Point(self, *args): return _saga_api.CSG_Shape_Point_Set_Point(self, *args)
    def Del_Point(self, *args): return _saga_api.CSG_Shape_Point_Del_Point(self, *args)
    def Del_Part(self, *args): return _saga_api.CSG_Shape_Point_Del_Part(self, *args)
    def Del_Parts(self): return _saga_api.CSG_Shape_Point_Del_Parts(self)
    def Get_Part_Count(self): return _saga_api.CSG_Shape_Point_Get_Part_Count(self)
    def Get_Point_Count(self, *args): return _saga_api.CSG_Shape_Point_Get_Point_Count(self, *args)
    def Get_Point(self, *args): return _saga_api.CSG_Shape_Point_Get_Point(self, *args)
    def Get_Extent(self): return _saga_api.CSG_Shape_Point_Get_Extent(self)
    def Get_Centroid(self): return _saga_api.CSG_Shape_Point_Get_Centroid(self)
    def Get_Distance(self, *args): return _saga_api.CSG_Shape_Point_Get_Distance(self, *args)
CSG_Shape_Point_swigregister = _saga_api.CSG_Shape_Point_swigregister
CSG_Shape_Point_swigregister(CSG_Shape_Point)

class CSG_Shape_Point_Z(CSG_Shape_Point):
    __swig_setmethods__ = {}
    for _s in [CSG_Shape_Point]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Shape_Point_Z, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Shape_Point]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Shape_Point_Z, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Shape_Point_Z(*args)
        try: self.this.append(this)
        except: self.this = this
    def Set_Z(self, *args): return _saga_api.CSG_Shape_Point_Z_Set_Z(self, *args)
    def Get_Z(self, *args): return _saga_api.CSG_Shape_Point_Z_Get_Z(self, *args)
    def Get_ZMin(self): return _saga_api.CSG_Shape_Point_Z_Get_ZMin(self)
    def Get_ZMax(self): return _saga_api.CSG_Shape_Point_Z_Get_ZMax(self)
    __swig_destroy__ = _saga_api.delete_CSG_Shape_Point_Z
    __del__ = lambda self : None;
CSG_Shape_Point_Z_swigregister = _saga_api.CSG_Shape_Point_Z_swigregister
CSG_Shape_Point_Z_swigregister(CSG_Shape_Point_Z)

class CSG_Shape_Point_ZM(CSG_Shape_Point_Z):
    __swig_setmethods__ = {}
    for _s in [CSG_Shape_Point_Z]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Shape_Point_ZM, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Shape_Point_Z]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Shape_Point_ZM, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Shape_Point_ZM(*args)
        try: self.this.append(this)
        except: self.this = this
    def Set_M(self, *args): return _saga_api.CSG_Shape_Point_ZM_Set_M(self, *args)
    def Get_M(self, *args): return _saga_api.CSG_Shape_Point_ZM_Get_M(self, *args)
    def Get_MMin(self): return _saga_api.CSG_Shape_Point_ZM_Get_MMin(self)
    def Get_MMax(self): return _saga_api.CSG_Shape_Point_ZM_Get_MMax(self)
    __swig_destroy__ = _saga_api.delete_CSG_Shape_Point_ZM
    __del__ = lambda self : None;
CSG_Shape_Point_ZM_swigregister = _saga_api.CSG_Shape_Point_ZM_swigregister
CSG_Shape_Point_ZM_swigregister(CSG_Shape_Point_ZM)

class CSG_Shape_Part(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Shape_Part, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Shape_Part, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def Get_Owner(self): return _saga_api.CSG_Shape_Part_Get_Owner(self)
    def Destroy(self): return _saga_api.CSG_Shape_Part_Destroy(self)
    def Assign(self, *args): return _saga_api.CSG_Shape_Part_Assign(self, *args)
    def Get_Extent(self): return _saga_api.CSG_Shape_Part_Get_Extent(self)
    def Get_Count(self): return _saga_api.CSG_Shape_Part_Get_Count(self)
    def Get_Point(self, *args): return _saga_api.CSG_Shape_Part_Get_Point(self, *args)
    def Add_Point(self, *args): return _saga_api.CSG_Shape_Part_Add_Point(self, *args)
    def Ins_Point(self, *args): return _saga_api.CSG_Shape_Part_Ins_Point(self, *args)
    def Set_Point(self, *args): return _saga_api.CSG_Shape_Part_Set_Point(self, *args)
    def Del_Point(self, *args): return _saga_api.CSG_Shape_Part_Del_Point(self, *args)
    def Set_Z(self, *args): return _saga_api.CSG_Shape_Part_Set_Z(self, *args)
    def Get_Z(self, *args): return _saga_api.CSG_Shape_Part_Get_Z(self, *args)
    def Get_ZMin(self): return _saga_api.CSG_Shape_Part_Get_ZMin(self)
    def Get_ZMax(self): return _saga_api.CSG_Shape_Part_Get_ZMax(self)
    def Set_M(self, *args): return _saga_api.CSG_Shape_Part_Set_M(self, *args)
    def Get_M(self, *args): return _saga_api.CSG_Shape_Part_Get_M(self, *args)
    def Get_MMin(self): return _saga_api.CSG_Shape_Part_Get_MMin(self)
    def Get_MMax(self): return _saga_api.CSG_Shape_Part_Get_MMax(self)
    def Revert_Points(self): return _saga_api.CSG_Shape_Part_Revert_Points(self)
CSG_Shape_Part_swigregister = _saga_api.CSG_Shape_Part_swigregister
CSG_Shape_Part_swigregister(CSG_Shape_Part)

class CSG_Shape_Points(CSG_Shape):
    __swig_setmethods__ = {}
    for _s in [CSG_Shape]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Shape_Points, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Shape]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Shape_Points, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def Destroy(self): return _saga_api.CSG_Shape_Points_Destroy(self)
    def is_Valid(self): return _saga_api.CSG_Shape_Points_is_Valid(self)
    def Del_Point(self, *args): return _saga_api.CSG_Shape_Points_Del_Point(self, *args)
    def Add_Point(self, *args): return _saga_api.CSG_Shape_Points_Add_Point(self, *args)
    def Ins_Point(self, *args): return _saga_api.CSG_Shape_Points_Ins_Point(self, *args)
    def Set_Point(self, *args): return _saga_api.CSG_Shape_Points_Set_Point(self, *args)
    def Del_Part(self, *args): return _saga_api.CSG_Shape_Points_Del_Part(self, *args)
    def Del_Parts(self): return _saga_api.CSG_Shape_Points_Del_Parts(self)
    def Get_Part_Count(self): return _saga_api.CSG_Shape_Points_Get_Part_Count(self)
    def Get_Part(self, *args): return _saga_api.CSG_Shape_Points_Get_Part(self, *args)
    def Get_Point_Count(self, *args): return _saga_api.CSG_Shape_Points_Get_Point_Count(self, *args)
    def Get_Point(self, *args): return _saga_api.CSG_Shape_Points_Get_Point(self, *args)
    def Set_Z(self, *args): return _saga_api.CSG_Shape_Points_Set_Z(self, *args)
    def Get_Z(self, *args): return _saga_api.CSG_Shape_Points_Get_Z(self, *args)
    def Get_ZMin(self): return _saga_api.CSG_Shape_Points_Get_ZMin(self)
    def Get_ZMax(self): return _saga_api.CSG_Shape_Points_Get_ZMax(self)
    def Set_M(self, *args): return _saga_api.CSG_Shape_Points_Set_M(self, *args)
    def Get_M(self, *args): return _saga_api.CSG_Shape_Points_Get_M(self, *args)
    def Get_MMin(self): return _saga_api.CSG_Shape_Points_Get_MMin(self)
    def Get_MMax(self): return _saga_api.CSG_Shape_Points_Get_MMax(self)
    def Get_Extent(self): return _saga_api.CSG_Shape_Points_Get_Extent(self)
    def Get_Centroid(self): return _saga_api.CSG_Shape_Points_Get_Centroid(self)
    def Get_Distance(self, *args): return _saga_api.CSG_Shape_Points_Get_Distance(self, *args)
    def Revert_Points(self, *args): return _saga_api.CSG_Shape_Points_Revert_Points(self, *args)
CSG_Shape_Points_swigregister = _saga_api.CSG_Shape_Points_swigregister
CSG_Shape_Points_swigregister(CSG_Shape_Points)

class CSG_Shape_Line(CSG_Shape_Points):
    __swig_setmethods__ = {}
    for _s in [CSG_Shape_Points]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Shape_Line, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Shape_Points]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Shape_Line, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def is_Valid(self): return _saga_api.CSG_Shape_Line_is_Valid(self)
    def Get_Centroid(self): return _saga_api.CSG_Shape_Line_Get_Centroid(self)
    def Get_Length(self, *args): return _saga_api.CSG_Shape_Line_Get_Length(self, *args)
    def Get_Distance(self, *args): return _saga_api.CSG_Shape_Line_Get_Distance(self, *args)
CSG_Shape_Line_swigregister = _saga_api.CSG_Shape_Line_swigregister
CSG_Shape_Line_swigregister(CSG_Shape_Line)

class CSG_Shape_Polygon_Part(CSG_Shape_Part):
    __swig_setmethods__ = {}
    for _s in [CSG_Shape_Part]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Shape_Polygon_Part, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Shape_Part]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Shape_Polygon_Part, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def is_Clockwise(self): return _saga_api.CSG_Shape_Polygon_Part_is_Clockwise(self)
    def Get_Perimeter(self): return _saga_api.CSG_Shape_Polygon_Part_Get_Perimeter(self)
    def Get_Area(self): return _saga_api.CSG_Shape_Polygon_Part_Get_Area(self)
    def Get_Centroid(self): return _saga_api.CSG_Shape_Polygon_Part_Get_Centroid(self)
    def Contains(self, *args): return _saga_api.CSG_Shape_Polygon_Part_Contains(self, *args)
    def Get_Distance(self, *args): return _saga_api.CSG_Shape_Polygon_Part_Get_Distance(self, *args)
CSG_Shape_Polygon_Part_swigregister = _saga_api.CSG_Shape_Polygon_Part_swigregister
CSG_Shape_Polygon_Part_swigregister(CSG_Shape_Polygon_Part)

class CSG_Shape_Polygon(CSG_Shape_Points):
    __swig_setmethods__ = {}
    for _s in [CSG_Shape_Points]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Shape_Polygon, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Shape_Points]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Shape_Polygon, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def is_Valid(self): return _saga_api.CSG_Shape_Polygon_is_Valid(self)
    def Get_Polygon_Part(self, *args): return _saga_api.CSG_Shape_Polygon_Get_Polygon_Part(self, *args)
    def is_Lake(self, *args): return _saga_api.CSG_Shape_Polygon_is_Lake(self, *args)
    def is_Clockwise(self, *args): return _saga_api.CSG_Shape_Polygon_is_Clockwise(self, *args)
    def Get_Perimeter(self, *args): return _saga_api.CSG_Shape_Polygon_Get_Perimeter(self, *args)
    def Get_Area(self, *args): return _saga_api.CSG_Shape_Polygon_Get_Area(self, *args)
    def Get_Centroid(self, *args): return _saga_api.CSG_Shape_Polygon_Get_Centroid(self, *args)
    def Contains(self, *args): return _saga_api.CSG_Shape_Polygon_Contains(self, *args)
    def Get_Distance(self, *args): return _saga_api.CSG_Shape_Polygon_Get_Distance(self, *args)
CSG_Shape_Polygon_swigregister = _saga_api.CSG_Shape_Polygon_swigregister
CSG_Shape_Polygon_swigregister(CSG_Shape_Polygon)

SHAPE_NO_COPY = _saga_api.SHAPE_NO_COPY
SHAPE_COPY_GEOM = _saga_api.SHAPE_COPY_GEOM
SHAPE_COPY_ATTR = _saga_api.SHAPE_COPY_ATTR
SHAPE_COPY = _saga_api.SHAPE_COPY
class CSG_Shapes(CSG_Table):
    __swig_setmethods__ = {}
    for _s in [CSG_Table]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Shapes, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Table]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Shapes, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Shapes(*args)
        try: self.this.append(this)
        except: self.this = this
    def Create(self, *args): return _saga_api.CSG_Shapes_Create(self, *args)
    __swig_destroy__ = _saga_api.delete_CSG_Shapes
    __del__ = lambda self : None;
    def Destroy(self): return _saga_api.CSG_Shapes_Destroy(self)
    def Get_ObjectType(self): return _saga_api.CSG_Shapes_Get_ObjectType(self)
    def Assign(self, *args): return _saga_api.CSG_Shapes_Assign(self, *args)
    def Save(self, *args): return _saga_api.CSG_Shapes_Save(self, *args)
    def is_Valid(self): return _saga_api.CSG_Shapes_is_Valid(self)
    def Get_Type(self): return _saga_api.CSG_Shapes_Get_Type(self)
    def Get_Vertex_Type(self): return _saga_api.CSG_Shapes_Get_Vertex_Type(self)
    def Get_Extent(self): return _saga_api.CSG_Shapes_Get_Extent(self)
    def Get_ZMin(self): return _saga_api.CSG_Shapes_Get_ZMin(self)
    def Get_ZMax(self): return _saga_api.CSG_Shapes_Get_ZMax(self)
    def Get_MMin(self): return _saga_api.CSG_Shapes_Get_MMin(self)
    def Get_MMax(self): return _saga_api.CSG_Shapes_Get_MMax(self)
    def Add_Shape(self, *args): return _saga_api.CSG_Shapes_Add_Shape(self, *args)
    def Del_Shape(self, *args): return _saga_api.CSG_Shapes_Del_Shape(self, *args)
    def Del_Shapes(self): return _saga_api.CSG_Shapes_Del_Shapes(self)
    def Get_Shape(self, *args): return _saga_api.CSG_Shapes_Get_Shape(self, *args)
    def Get_Shape_byIndex(self, *args): return _saga_api.CSG_Shapes_Get_Shape_byIndex(self, *args)
    def Make_Clean(self): return _saga_api.CSG_Shapes_Make_Clean(self)
    def Get_Selection(self, Index = 0): return _saga_api.CSG_Shapes_Get_Selection(self, Index)
    def Get_Selection_Extent(self): return _saga_api.CSG_Shapes_Get_Selection_Extent(self)
    def Select(self, *args): return _saga_api.CSG_Shapes_Select(self, *args)
CSG_Shapes_swigregister = _saga_api.CSG_Shapes_swigregister
CSG_Shapes_swigregister(CSG_Shapes)

class CSG_PRQuadTree_Item(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_PRQuadTree_Item, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_PRQuadTree_Item, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def is_Leaf(self): return _saga_api.CSG_PRQuadTree_Item_is_Leaf(self)
    def is_Node(self): return _saga_api.CSG_PRQuadTree_Item_is_Node(self)
    def has_Statistics(self): return _saga_api.CSG_PRQuadTree_Item_has_Statistics(self)
    def Get_Extent(self): return _saga_api.CSG_PRQuadTree_Item_Get_Extent(self)
    def Get_xMin(self): return _saga_api.CSG_PRQuadTree_Item_Get_xMin(self)
    def Get_yMin(self): return _saga_api.CSG_PRQuadTree_Item_Get_yMin(self)
    def Get_xCenter(self): return _saga_api.CSG_PRQuadTree_Item_Get_xCenter(self)
    def Get_yCenter(self): return _saga_api.CSG_PRQuadTree_Item_Get_yCenter(self)
    def Get_xMax(self): return _saga_api.CSG_PRQuadTree_Item_Get_xMax(self)
    def Get_yMax(self): return _saga_api.CSG_PRQuadTree_Item_Get_yMax(self)
    def Get_Size(self): return _saga_api.CSG_PRQuadTree_Item_Get_Size(self)
    def Contains(self, *args): return _saga_api.CSG_PRQuadTree_Item_Contains(self, *args)
    def asLeaf(self): return _saga_api.CSG_PRQuadTree_Item_asLeaf(self)
    def asNode(self): return _saga_api.CSG_PRQuadTree_Item_asNode(self)
    __swig_destroy__ = _saga_api.delete_CSG_PRQuadTree_Item
    __del__ = lambda self : None;
CSG_PRQuadTree_Item_swigregister = _saga_api.CSG_PRQuadTree_Item_swigregister
CSG_PRQuadTree_Item_swigregister(CSG_PRQuadTree_Item)

def SG_Create_Shapes(*args):
  return _saga_api.SG_Create_Shapes(*args)
SG_Create_Shapes = _saga_api.SG_Create_Shapes

class CSG_PRQuadTree_Leaf(CSG_PRQuadTree_Item):
    __swig_setmethods__ = {}
    for _s in [CSG_PRQuadTree_Item]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_PRQuadTree_Leaf, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_PRQuadTree_Item]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_PRQuadTree_Leaf, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def is_Leaf(self): return _saga_api.CSG_PRQuadTree_Leaf_is_Leaf(self)
    def Get_Point(self): return _saga_api.CSG_PRQuadTree_Leaf_Get_Point(self)
    def Get_X(self): return _saga_api.CSG_PRQuadTree_Leaf_Get_X(self)
    def Get_Y(self): return _saga_api.CSG_PRQuadTree_Leaf_Get_Y(self)
    def Get_Z(self): return _saga_api.CSG_PRQuadTree_Leaf_Get_Z(self)
    __swig_destroy__ = _saga_api.delete_CSG_PRQuadTree_Leaf
    __del__ = lambda self : None;
CSG_PRQuadTree_Leaf_swigregister = _saga_api.CSG_PRQuadTree_Leaf_swigregister
CSG_PRQuadTree_Leaf_swigregister(CSG_PRQuadTree_Leaf)

class CSG_PRQuadTree_Leaf_List(CSG_PRQuadTree_Leaf):
    __swig_setmethods__ = {}
    for _s in [CSG_PRQuadTree_Leaf]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_PRQuadTree_Leaf_List, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_PRQuadTree_Leaf]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_PRQuadTree_Leaf_List, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def has_Statistics(self): return _saga_api.CSG_PRQuadTree_Leaf_List_has_Statistics(self)
    def Get_Count(self): return _saga_api.CSG_PRQuadTree_Leaf_List_Get_Count(self)
    def Get_Value(self, *args): return _saga_api.CSG_PRQuadTree_Leaf_List_Get_Value(self, *args)
    def Get_Minimum(self): return _saga_api.CSG_PRQuadTree_Leaf_List_Get_Minimum(self)
    def Get_Maximum(self): return _saga_api.CSG_PRQuadTree_Leaf_List_Get_Maximum(self)
    def Get_Range(self): return _saga_api.CSG_PRQuadTree_Leaf_List_Get_Range(self)
    def Get_Sum(self): return _saga_api.CSG_PRQuadTree_Leaf_List_Get_Sum(self)
    def Get_Mean(self): return _saga_api.CSG_PRQuadTree_Leaf_List_Get_Mean(self)
    def Get_Variance(self): return _saga_api.CSG_PRQuadTree_Leaf_List_Get_Variance(self)
    def Get_StdDev(self): return _saga_api.CSG_PRQuadTree_Leaf_List_Get_StdDev(self)
    __swig_destroy__ = _saga_api.delete_CSG_PRQuadTree_Leaf_List
    __del__ = lambda self : None;
CSG_PRQuadTree_Leaf_List_swigregister = _saga_api.CSG_PRQuadTree_Leaf_List_swigregister
CSG_PRQuadTree_Leaf_List_swigregister(CSG_PRQuadTree_Leaf_List)

class CSG_PRQuadTree_Node(CSG_PRQuadTree_Item):
    __swig_setmethods__ = {}
    for _s in [CSG_PRQuadTree_Item]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_PRQuadTree_Node, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_PRQuadTree_Item]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_PRQuadTree_Node, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def is_Node(self): return _saga_api.CSG_PRQuadTree_Node_is_Node(self)
    def Get_Child(self, *args): return _saga_api.CSG_PRQuadTree_Node_Get_Child(self, *args)
    def Add_Point(self, *args): return _saga_api.CSG_PRQuadTree_Node_Add_Point(self, *args)
    def Get_X(self): return _saga_api.CSG_PRQuadTree_Node_Get_X(self)
    def Get_Y(self): return _saga_api.CSG_PRQuadTree_Node_Get_Y(self)
    def Get_Z(self): return _saga_api.CSG_PRQuadTree_Node_Get_Z(self)
CSG_PRQuadTree_Node_swigregister = _saga_api.CSG_PRQuadTree_Node_swigregister
CSG_PRQuadTree_Node_swigregister(CSG_PRQuadTree_Node)

class CSG_PRQuadTree_Node_Statistics(CSG_PRQuadTree_Node):
    __swig_setmethods__ = {}
    for _s in [CSG_PRQuadTree_Node]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_PRQuadTree_Node_Statistics, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_PRQuadTree_Node]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_PRQuadTree_Node_Statistics, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def has_Statistics(self): return _saga_api.CSG_PRQuadTree_Node_Statistics_has_Statistics(self)
    def Get_X(self): return _saga_api.CSG_PRQuadTree_Node_Statistics_Get_X(self)
    def Get_Y(self): return _saga_api.CSG_PRQuadTree_Node_Statistics_Get_Y(self)
    def Get_Z(self): return _saga_api.CSG_PRQuadTree_Node_Statistics_Get_Z(self)
    __swig_destroy__ = _saga_api.delete_CSG_PRQuadTree_Node_Statistics
    __del__ = lambda self : None;
CSG_PRQuadTree_Node_Statistics_swigregister = _saga_api.CSG_PRQuadTree_Node_Statistics_swigregister
CSG_PRQuadTree_Node_Statistics_swigregister(CSG_PRQuadTree_Node_Statistics)

class CSG_PRQuadTree(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_PRQuadTree, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_PRQuadTree, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_PRQuadTree(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_PRQuadTree
    __del__ = lambda self : None;
    def Create(self, *args): return _saga_api.CSG_PRQuadTree_Create(self, *args)
    def Destroy(self): return _saga_api.CSG_PRQuadTree_Destroy(self)
    def Add_Point(self, *args): return _saga_api.CSG_PRQuadTree_Add_Point(self, *args)
    def Get_Point_Count(self): return _saga_api.CSG_PRQuadTree_Get_Point_Count(self)
    def Get_Root(self): return _saga_api.CSG_PRQuadTree_Get_Root(self)
    def Get_Root_Pointer(self): return _saga_api.CSG_PRQuadTree_Get_Root_Pointer(self)
    def is_Okay(self): return _saga_api.CSG_PRQuadTree_is_Okay(self)
    def Get_Nearest_Leaf(self, *args): return _saga_api.CSG_PRQuadTree_Get_Nearest_Leaf(self, *args)
    def Get_Nearest_Point(self, *args): return _saga_api.CSG_PRQuadTree_Get_Nearest_Point(self, *args)
    def Select_Nearest_Points(self, *args): return _saga_api.CSG_PRQuadTree_Select_Nearest_Points(self, *args)
    def Get_Selected_Count(self): return _saga_api.CSG_PRQuadTree_Get_Selected_Count(self)
    def Get_Selected_Leaf(self, *args): return _saga_api.CSG_PRQuadTree_Get_Selected_Leaf(self, *args)
    def Get_Selected_Z(self, *args): return _saga_api.CSG_PRQuadTree_Get_Selected_Z(self, *args)
    def Get_Selected_Distance(self, *args): return _saga_api.CSG_PRQuadTree_Get_Selected_Distance(self, *args)
    def Get_Selected_Point(self, *args): return _saga_api.CSG_PRQuadTree_Get_Selected_Point(self, *args)
CSG_PRQuadTree_swigregister = _saga_api.CSG_PRQuadTree_swigregister
CSG_PRQuadTree_swigregister(CSG_PRQuadTree)

class CSG_Shapes_Search(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Shapes_Search, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Shapes_Search, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Shapes_Search(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Shapes_Search
    __del__ = lambda self : None;
    def Create(self, *args): return _saga_api.CSG_Shapes_Search_Create(self, *args)
    def Destroy(self): return _saga_api.CSG_Shapes_Search_Destroy(self)
    def is_Valid(self): return _saga_api.CSG_Shapes_Search_is_Valid(self)
    def Get_Point_Nearest(self, *args): return _saga_api.CSG_Shapes_Search_Get_Point_Nearest(self, *args)
    def Select_Radius(self, *args): return _saga_api.CSG_Shapes_Search_Select_Radius(self, *args)
    def Select_Quadrants(self, *args): return _saga_api.CSG_Shapes_Search_Select_Quadrants(self, *args)
    def Get_Selected_Count(self): return _saga_api.CSG_Shapes_Search_Get_Selected_Count(self)
    def Get_Selected_Point(self, *args): return _saga_api.CSG_Shapes_Search_Get_Selected_Point(self, *args)
CSG_Shapes_Search_swigregister = _saga_api.CSG_Shapes_Search_swigregister
CSG_Shapes_Search_swigregister(CSG_Shapes_Search)

SG_OGIS_BYTEORDER_XDR = _saga_api.SG_OGIS_BYTEORDER_XDR
SG_OGIS_BYTEORDER_NDR = _saga_api.SG_OGIS_BYTEORDER_NDR
SG_OGIS_TYPE_Point = _saga_api.SG_OGIS_TYPE_Point
SG_OGIS_TYPE_LineString = _saga_api.SG_OGIS_TYPE_LineString
SG_OGIS_TYPE_Polygon = _saga_api.SG_OGIS_TYPE_Polygon
SG_OGIS_TYPE_MultiPoint = _saga_api.SG_OGIS_TYPE_MultiPoint
SG_OGIS_TYPE_MultiLineString = _saga_api.SG_OGIS_TYPE_MultiLineString
SG_OGIS_TYPE_MultiPolygon = _saga_api.SG_OGIS_TYPE_MultiPolygon
SG_OGIS_TYPE_GeometryCollection = _saga_api.SG_OGIS_TYPE_GeometryCollection
SG_OGIS_TYPE_PolyhedralSurface = _saga_api.SG_OGIS_TYPE_PolyhedralSurface
SG_OGIS_TYPE_TIN = _saga_api.SG_OGIS_TYPE_TIN
SG_OGIS_TYPE_Triangle = _saga_api.SG_OGIS_TYPE_Triangle
SG_OGIS_TYPE_PointZ = _saga_api.SG_OGIS_TYPE_PointZ
SG_OGIS_TYPE_LineStringZ = _saga_api.SG_OGIS_TYPE_LineStringZ
SG_OGIS_TYPE_PolygonZ = _saga_api.SG_OGIS_TYPE_PolygonZ
SG_OGIS_TYPE_MultiPointZ = _saga_api.SG_OGIS_TYPE_MultiPointZ
SG_OGIS_TYPE_MultiLineStringZ = _saga_api.SG_OGIS_TYPE_MultiLineStringZ
SG_OGIS_TYPE_MultiPolygonZ = _saga_api.SG_OGIS_TYPE_MultiPolygonZ
SG_OGIS_TYPE_GeometryCollectionZ = _saga_api.SG_OGIS_TYPE_GeometryCollectionZ
SG_OGIS_TYPE_PolyhedralSurfaceZ = _saga_api.SG_OGIS_TYPE_PolyhedralSurfaceZ
SG_OGIS_TYPE_TINZ = _saga_api.SG_OGIS_TYPE_TINZ
SG_OGIS_TYPE_Trianglez = _saga_api.SG_OGIS_TYPE_Trianglez
SG_OGIS_TYPE_PointM = _saga_api.SG_OGIS_TYPE_PointM
SG_OGIS_TYPE_LineStringM = _saga_api.SG_OGIS_TYPE_LineStringM
SG_OGIS_TYPE_PolygonM = _saga_api.SG_OGIS_TYPE_PolygonM
SG_OGIS_TYPE_MultiPointM = _saga_api.SG_OGIS_TYPE_MultiPointM
SG_OGIS_TYPE_MultiLineStringM = _saga_api.SG_OGIS_TYPE_MultiLineStringM
SG_OGIS_TYPE_MultiPolygonM = _saga_api.SG_OGIS_TYPE_MultiPolygonM
SG_OGIS_TYPE_GeometryCollectionM = _saga_api.SG_OGIS_TYPE_GeometryCollectionM
SG_OGIS_TYPE_PolyhedralSurfaceM = _saga_api.SG_OGIS_TYPE_PolyhedralSurfaceM
SG_OGIS_TYPE_TINM = _saga_api.SG_OGIS_TYPE_TINM
SG_OGIS_TYPE_TriangleM = _saga_api.SG_OGIS_TYPE_TriangleM
SG_OGIS_TYPE_PointZM = _saga_api.SG_OGIS_TYPE_PointZM
SG_OGIS_TYPE_LineStringZM = _saga_api.SG_OGIS_TYPE_LineStringZM
SG_OGIS_TYPE_PolygonZM = _saga_api.SG_OGIS_TYPE_PolygonZM
SG_OGIS_TYPE_MultiPointZM = _saga_api.SG_OGIS_TYPE_MultiPointZM
SG_OGIS_TYPE_MultiLineStringZM = _saga_api.SG_OGIS_TYPE_MultiLineStringZM
SG_OGIS_TYPE_MultiPolygonZM = _saga_api.SG_OGIS_TYPE_MultiPolygonZM
SG_OGIS_TYPE_GeometryCollectionZM = _saga_api.SG_OGIS_TYPE_GeometryCollectionZM
SG_OGIS_TYPE_PolyhedralSurfaceZM = _saga_api.SG_OGIS_TYPE_PolyhedralSurfaceZM
SG_OGIS_TYPE_TinZM = _saga_api.SG_OGIS_TYPE_TinZM
SG_OGIS_TYPE_TriangleZM = _saga_api.SG_OGIS_TYPE_TriangleZM
class CSG_Shapes_OGIS_Converter(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Shapes_OGIS_Converter, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Shapes_OGIS_Converter, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _saga_api.new_CSG_Shapes_OGIS_Converter()
        try: self.this.append(this)
        except: self.this = this
    __swig_getmethods__["from_WKText"] = lambda x: _saga_api.CSG_Shapes_OGIS_Converter_from_WKText
    if _newclass:from_WKText = staticmethod(_saga_api.CSG_Shapes_OGIS_Converter_from_WKText)
    __swig_getmethods__["to_WKText"] = lambda x: _saga_api.CSG_Shapes_OGIS_Converter_to_WKText
    if _newclass:to_WKText = staticmethod(_saga_api.CSG_Shapes_OGIS_Converter_to_WKText)
    __swig_getmethods__["from_WKBinary"] = lambda x: _saga_api.CSG_Shapes_OGIS_Converter_from_WKBinary
    if _newclass:from_WKBinary = staticmethod(_saga_api.CSG_Shapes_OGIS_Converter_from_WKBinary)
    __swig_getmethods__["to_WKBinary"] = lambda x: _saga_api.CSG_Shapes_OGIS_Converter_to_WKBinary
    if _newclass:to_WKBinary = staticmethod(_saga_api.CSG_Shapes_OGIS_Converter_to_WKBinary)
    __swig_destroy__ = _saga_api.delete_CSG_Shapes_OGIS_Converter
    __del__ = lambda self : None;
CSG_Shapes_OGIS_Converter_swigregister = _saga_api.CSG_Shapes_OGIS_Converter_swigregister
CSG_Shapes_OGIS_Converter_swigregister(CSG_Shapes_OGIS_Converter)

def CSG_Shapes_OGIS_Converter_from_WKText(*args):
  return _saga_api.CSG_Shapes_OGIS_Converter_from_WKText(*args)
CSG_Shapes_OGIS_Converter_from_WKText = _saga_api.CSG_Shapes_OGIS_Converter_from_WKText

def CSG_Shapes_OGIS_Converter_to_WKText(*args):
  return _saga_api.CSG_Shapes_OGIS_Converter_to_WKText(*args)
CSG_Shapes_OGIS_Converter_to_WKText = _saga_api.CSG_Shapes_OGIS_Converter_to_WKText

def CSG_Shapes_OGIS_Converter_from_WKBinary(*args):
  return _saga_api.CSG_Shapes_OGIS_Converter_from_WKBinary(*args)
CSG_Shapes_OGIS_Converter_from_WKBinary = _saga_api.CSG_Shapes_OGIS_Converter_from_WKBinary

def CSG_Shapes_OGIS_Converter_to_WKBinary(*args):
  return _saga_api.CSG_Shapes_OGIS_Converter_to_WKBinary(*args)
CSG_Shapes_OGIS_Converter_to_WKBinary = _saga_api.CSG_Shapes_OGIS_Converter_to_WKBinary

class CSG_TIN_Node(CSG_Table_Record):
    __swig_setmethods__ = {}
    for _s in [CSG_Table_Record]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_TIN_Node, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Table_Record]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_TIN_Node, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def Get_ID(self): return _saga_api.CSG_TIN_Node_Get_ID(self)
    def Get_Point(self): return _saga_api.CSG_TIN_Node_Get_Point(self)
    def Get_X(self): return _saga_api.CSG_TIN_Node_Get_X(self)
    def Get_Y(self): return _saga_api.CSG_TIN_Node_Get_Y(self)
    def Get_Neighbor_Count(self): return _saga_api.CSG_TIN_Node_Get_Neighbor_Count(self)
    def Get_Neighbor(self, *args): return _saga_api.CSG_TIN_Node_Get_Neighbor(self, *args)
    def Get_Gradient(self, *args): return _saga_api.CSG_TIN_Node_Get_Gradient(self, *args)
    def Get_Triangle_Count(self): return _saga_api.CSG_TIN_Node_Get_Triangle_Count(self)
    def Get_Triangle(self, *args): return _saga_api.CSG_TIN_Node_Get_Triangle(self, *args)
    def Get_Polygon(self, *args): return _saga_api.CSG_TIN_Node_Get_Polygon(self, *args)
    def Get_Polygon_Area(self): return _saga_api.CSG_TIN_Node_Get_Polygon_Area(self)
CSG_TIN_Node_swigregister = _saga_api.CSG_TIN_Node_swigregister
CSG_TIN_Node_swigregister(CSG_TIN_Node)

class CSG_TIN_Edge(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_TIN_Edge, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_TIN_Edge, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def Get_Node(self, *args): return _saga_api.CSG_TIN_Edge_Get_Node(self, *args)
CSG_TIN_Edge_swigregister = _saga_api.CSG_TIN_Edge_swigregister
CSG_TIN_Edge_swigregister(CSG_TIN_Edge)

class CSG_TIN_Triangle(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_TIN_Triangle, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_TIN_Triangle, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def Get_Node(self, *args): return _saga_api.CSG_TIN_Triangle_Get_Node(self, *args)
    def Get_Extent(self): return _saga_api.CSG_TIN_Triangle_Get_Extent(self)
    def Get_Area(self): return _saga_api.CSG_TIN_Triangle_Get_Area(self)
    def is_Containing(self, *args): return _saga_api.CSG_TIN_Triangle_is_Containing(self, *args)
    def Get_Gradient(self, *args): return _saga_api.CSG_TIN_Triangle_Get_Gradient(self, *args)
    def Get_CircumCircle(self, *args): return _saga_api.CSG_TIN_Triangle_Get_CircumCircle(self, *args)
    def Get_CircumCircle_Radius(self): return _saga_api.CSG_TIN_Triangle_Get_CircumCircle_Radius(self)
    def Get_CircumCircle_Point(self): return _saga_api.CSG_TIN_Triangle_Get_CircumCircle_Point(self)
CSG_TIN_Triangle_swigregister = _saga_api.CSG_TIN_Triangle_swigregister
CSG_TIN_Triangle_swigregister(CSG_TIN_Triangle)

class CSG_TIN(CSG_Table):
    __swig_setmethods__ = {}
    for _s in [CSG_Table]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_TIN, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Table]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_TIN, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_TIN(*args)
        try: self.this.append(this)
        except: self.this = this
    def Create(self, *args): return _saga_api.CSG_TIN_Create(self, *args)
    __swig_destroy__ = _saga_api.delete_CSG_TIN
    __del__ = lambda self : None;
    def Destroy(self): return _saga_api.CSG_TIN_Destroy(self)
    def Get_ObjectType(self): return _saga_api.CSG_TIN_Get_ObjectType(self)
    def Assign(self, *args): return _saga_api.CSG_TIN_Assign(self, *args)
    def Save(self, *args): return _saga_api.CSG_TIN_Save(self, *args)
    def is_Valid(self): return _saga_api.CSG_TIN_is_Valid(self)
    def Get_Extent(self): return _saga_api.CSG_TIN_Get_Extent(self)
    def Add_Node(self, *args): return _saga_api.CSG_TIN_Add_Node(self, *args)
    def Del_Node(self, *args): return _saga_api.CSG_TIN_Del_Node(self, *args)
    def Get_Node_Count(self): return _saga_api.CSG_TIN_Get_Node_Count(self)
    def Get_Node(self, *args): return _saga_api.CSG_TIN_Get_Node(self, *args)
    def Get_Edge_Count(self): return _saga_api.CSG_TIN_Get_Edge_Count(self)
    def Get_Edge(self, *args): return _saga_api.CSG_TIN_Get_Edge(self, *args)
    def Get_Triangle_Count(self): return _saga_api.CSG_TIN_Get_Triangle_Count(self)
    def Get_Triangle(self, *args): return _saga_api.CSG_TIN_Get_Triangle(self, *args)
CSG_TIN_swigregister = _saga_api.CSG_TIN_swigregister
CSG_TIN_swigregister(CSG_TIN)

class CSG_PointCloud(CSG_Shapes):
    __swig_setmethods__ = {}
    for _s in [CSG_Shapes]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_PointCloud, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Shapes]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_PointCloud, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_PointCloud(*args)
        try: self.this.append(this)
        except: self.this = this
    def Create(self, *args): return _saga_api.CSG_PointCloud_Create(self, *args)
    __swig_destroy__ = _saga_api.delete_CSG_PointCloud
    __del__ = lambda self : None;
    def Destroy(self): return _saga_api.CSG_PointCloud_Destroy(self)
    def Get_ObjectType(self): return _saga_api.CSG_PointCloud_Get_ObjectType(self)
    def Assign(self, *args): return _saga_api.CSG_PointCloud_Assign(self, *args)
    def Save(self, *args): return _saga_api.CSG_PointCloud_Save(self, *args)
    def Set_XYZ_Precision(self, *args): return _saga_api.CSG_PointCloud_Set_XYZ_Precision(self, *args)
    def is_Valid(self): return _saga_api.CSG_PointCloud_is_Valid(self)
    def is_Compatible(self, *args): return _saga_api.CSG_PointCloud_is_Compatible(self, *args)
    def Add_Field(self, *args): return _saga_api.CSG_PointCloud_Add_Field(self, *args)
    def Del_Field(self, *args): return _saga_api.CSG_PointCloud_Del_Field(self, *args)
    def Get_Attribute_Count(self): return _saga_api.CSG_PointCloud_Get_Attribute_Count(self)
    def Get_Attribute_Name(self, *args): return _saga_api.CSG_PointCloud_Get_Attribute_Name(self, *args)
    def Get_Attribute_Type(self, *args): return _saga_api.CSG_PointCloud_Get_Attribute_Type(self, *args)
    def Add_Point(self, *args): return _saga_api.CSG_PointCloud_Add_Point(self, *args)
    def Del_Point(self, *args): return _saga_api.CSG_PointCloud_Del_Point(self, *args)
    def Del_Points(self): return _saga_api.CSG_PointCloud_Del_Points(self)
    def Get_Point_Count(self): return _saga_api.CSG_PointCloud_Get_Point_Count(self)
    def Set_Cursor(self, *args): return _saga_api.CSG_PointCloud_Set_Cursor(self, *args)
    def Get_X(self, *args): return _saga_api.CSG_PointCloud_Get_X(self, *args)
    def Get_Y(self, *args): return _saga_api.CSG_PointCloud_Get_Y(self, *args)
    def Get_Z(self, *args): return _saga_api.CSG_PointCloud_Get_Z(self, *args)
    def Set_Attribute(self, *args): return _saga_api.CSG_PointCloud_Set_Attribute(self, *args)
    def Get_Attribute(self, *args): return _saga_api.CSG_PointCloud_Get_Attribute(self, *args)
    def Set_NoData(self, *args): return _saga_api.CSG_PointCloud_Set_NoData(self, *args)
    def is_NoData(self, *args): return _saga_api.CSG_PointCloud_is_NoData(self, *args)
    def Set_Value(self, *args): return _saga_api.CSG_PointCloud_Set_Value(self, *args)
    def Get_Value(self, *args): return _saga_api.CSG_PointCloud_Get_Value(self, *args)
    def Get_Point(self, *args): return _saga_api.CSG_PointCloud_Get_Point(self, *args)
    def Set_Modified(self, bModified = True): return _saga_api.CSG_PointCloud_Set_Modified(self, bModified)
    def Get_Record(self, *args): return _saga_api.CSG_PointCloud_Get_Record(self, *args)
    def Get_Shape(self, *args): return _saga_api.CSG_PointCloud_Get_Shape(self, *args)
    def Del_Record(self, *args): return _saga_api.CSG_PointCloud_Del_Record(self, *args)
    def Del_Records(self): return _saga_api.CSG_PointCloud_Del_Records(self)
    def Del_Shapes(self): return _saga_api.CSG_PointCloud_Del_Shapes(self)
    def Ins_Record(self, *args): return _saga_api.CSG_PointCloud_Ins_Record(self, *args)
    def Add_Record(self, pCopy = None): return _saga_api.CSG_PointCloud_Add_Record(self, pCopy)
    def Add_Shape(self, *args): return _saga_api.CSG_PointCloud_Add_Shape(self, *args)
    def Del_Shape(self, *args): return _saga_api.CSG_PointCloud_Del_Shape(self, *args)
    def Select(self, *args): return _saga_api.CSG_PointCloud_Select(self, *args)
    def is_Selected(self, *args): return _saga_api.CSG_PointCloud_is_Selected(self, *args)
    def Del_Selection(self): return _saga_api.CSG_PointCloud_Del_Selection(self)
    def Inv_Selection(self): return _saga_api.CSG_PointCloud_Inv_Selection(self)
    def Get_Selection(self, Index = 0): return _saga_api.CSG_PointCloud_Get_Selection(self, Index)
    def Get_Selection_Extent(self): return _saga_api.CSG_PointCloud_Get_Selection_Extent(self)
CSG_PointCloud_swigregister = _saga_api.CSG_PointCloud_swigregister
CSG_PointCloud_swigregister(CSG_PointCloud)

def SG_Create_TIN(*args):
  return _saga_api.SG_Create_TIN(*args)
SG_Create_TIN = _saga_api.SG_Create_TIN

PARAMETER_INPUT = _saga_api.PARAMETER_INPUT
PARAMETER_OUTPUT = _saga_api.PARAMETER_OUTPUT
PARAMETER_OPTIONAL = _saga_api.PARAMETER_OPTIONAL
PARAMETER_INFORMATION = _saga_api.PARAMETER_INFORMATION
PARAMETER_IGNORE_PROJECTION = _saga_api.PARAMETER_IGNORE_PROJECTION
PARAMETER_INPUT_OPTIONAL = _saga_api.PARAMETER_INPUT_OPTIONAL
PARAMETER_OUTPUT_OPTIONAL = _saga_api.PARAMETER_OUTPUT_OPTIONAL
PARAMETER_DESCRIPTION_NAME = _saga_api.PARAMETER_DESCRIPTION_NAME
PARAMETER_DESCRIPTION_TYPE = _saga_api.PARAMETER_DESCRIPTION_TYPE
PARAMETER_DESCRIPTION_OPTIONAL = _saga_api.PARAMETER_DESCRIPTION_OPTIONAL
PARAMETER_DESCRIPTION_PROPERTIES = _saga_api.PARAMETER_DESCRIPTION_PROPERTIES
PARAMETER_DESCRIPTION_TEXT = _saga_api.PARAMETER_DESCRIPTION_TEXT
PARAMETER_DESCRIPTION_ALL = _saga_api.PARAMETER_DESCRIPTION_ALL
PARAMETER_TYPE_Node = _saga_api.PARAMETER_TYPE_Node
PARAMETER_TYPE_Bool = _saga_api.PARAMETER_TYPE_Bool
PARAMETER_TYPE_Int = _saga_api.PARAMETER_TYPE_Int
PARAMETER_TYPE_Double = _saga_api.PARAMETER_TYPE_Double
PARAMETER_TYPE_Degree = _saga_api.PARAMETER_TYPE_Degree
PARAMETER_TYPE_Range = _saga_api.PARAMETER_TYPE_Range
PARAMETER_TYPE_Choice = _saga_api.PARAMETER_TYPE_Choice
PARAMETER_TYPE_String = _saga_api.PARAMETER_TYPE_String
PARAMETER_TYPE_Text = _saga_api.PARAMETER_TYPE_Text
PARAMETER_TYPE_FilePath = _saga_api.PARAMETER_TYPE_FilePath
PARAMETER_TYPE_Font = _saga_api.PARAMETER_TYPE_Font
PARAMETER_TYPE_Color = _saga_api.PARAMETER_TYPE_Color
PARAMETER_TYPE_Colors = _saga_api.PARAMETER_TYPE_Colors
PARAMETER_TYPE_FixedTable = _saga_api.PARAMETER_TYPE_FixedTable
PARAMETER_TYPE_Grid_System = _saga_api.PARAMETER_TYPE_Grid_System
PARAMETER_TYPE_Table_Field = _saga_api.PARAMETER_TYPE_Table_Field
PARAMETER_TYPE_PointCloud = _saga_api.PARAMETER_TYPE_PointCloud
PARAMETER_TYPE_Grid = _saga_api.PARAMETER_TYPE_Grid
PARAMETER_TYPE_Table = _saga_api.PARAMETER_TYPE_Table
PARAMETER_TYPE_Shapes = _saga_api.PARAMETER_TYPE_Shapes
PARAMETER_TYPE_TIN = _saga_api.PARAMETER_TYPE_TIN
PARAMETER_TYPE_Grid_List = _saga_api.PARAMETER_TYPE_Grid_List
PARAMETER_TYPE_Table_List = _saga_api.PARAMETER_TYPE_Table_List
PARAMETER_TYPE_Shapes_List = _saga_api.PARAMETER_TYPE_Shapes_List
PARAMETER_TYPE_TIN_List = _saga_api.PARAMETER_TYPE_TIN_List
PARAMETER_TYPE_PointCloud_List = _saga_api.PARAMETER_TYPE_PointCloud_List
PARAMETER_TYPE_DataObject_Output = _saga_api.PARAMETER_TYPE_DataObject_Output
PARAMETER_TYPE_Parameters = _saga_api.PARAMETER_TYPE_Parameters
PARAMETER_TYPE_Undefined = _saga_api.PARAMETER_TYPE_Undefined

def SG_Parameter_Type_Get_Name(*args):
  return _saga_api.SG_Parameter_Type_Get_Name(*args)
SG_Parameter_Type_Get_Name = _saga_api.SG_Parameter_Type_Get_Name

def SG_Parameter_Type_Get_Identifier(*args):
  return _saga_api.SG_Parameter_Type_Get_Identifier(*args)
SG_Parameter_Type_Get_Identifier = _saga_api.SG_Parameter_Type_Get_Identifier

def SG_Parameter_Type_Get_Type(*args):
  return _saga_api.SG_Parameter_Type_Get_Type(*args)
SG_Parameter_Type_Get_Type = _saga_api.SG_Parameter_Type_Get_Type
PARAMETER_CHECK_VALUES = _saga_api.PARAMETER_CHECK_VALUES
PARAMETER_CHECK_ENABLE = _saga_api.PARAMETER_CHECK_ENABLE
PARAMETER_CHECK_ALL = _saga_api.PARAMETER_CHECK_ALL
class CSG_Parameter_Data(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_Data, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_Data, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_Data
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_Data_Get_Type(self)
    def Get_Type_Identifier(self): return _saga_api.CSG_Parameter_Data_Get_Type_Identifier(self)
    def Get_Type_Name(self): return _saga_api.CSG_Parameter_Data_Get_Type_Name(self)
    def Get_Constraint(self): return _saga_api.CSG_Parameter_Data_Get_Constraint(self)
    def is_Valid(self): return _saga_api.CSG_Parameter_Data_is_Valid(self)
    def Assign(self, *args): return _saga_api.CSG_Parameter_Data_Assign(self, *args)
    def Serialize(self, *args): return _saga_api.CSG_Parameter_Data_Serialize(self, *args)
    def Set_Value(self, *args): return _saga_api.CSG_Parameter_Data_Set_Value(self, *args)
    def asInt(self): return _saga_api.CSG_Parameter_Data_asInt(self)
    def asDouble(self): return _saga_api.CSG_Parameter_Data_asDouble(self)
    def asPointer(self): return _saga_api.CSG_Parameter_Data_asPointer(self)
    def asString(self): return _saga_api.CSG_Parameter_Data_asString(self)
    def Get_Default(self): return _saga_api.CSG_Parameter_Data_Get_Default(self)
    def Set_Default(self, *args): return _saga_api.CSG_Parameter_Data_Set_Default(self, *args)
    def Restore_Default(self): return _saga_api.CSG_Parameter_Data_Restore_Default(self)
CSG_Parameter_Data_swigregister = _saga_api.CSG_Parameter_Data_swigregister
CSG_Parameter_Data_swigregister(CSG_Parameter_Data)

def SG_Create_PointCloud(*args):
  return _saga_api.SG_Create_PointCloud(*args)
SG_Create_PointCloud = _saga_api.SG_Create_PointCloud

class CSG_Parameter_Node(CSG_Parameter_Data):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_Data]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_Node, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_Data]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_Node, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_Node(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_Node
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_Node_Get_Type(self)
CSG_Parameter_Node_swigregister = _saga_api.CSG_Parameter_Node_swigregister
CSG_Parameter_Node_swigregister(CSG_Parameter_Node)

class CSG_Parameter_Bool(CSG_Parameter_Data):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_Data]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_Bool, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_Data]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_Bool, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_Bool(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_Bool
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_Bool_Get_Type(self)
    def Set_Value(self, *args): return _saga_api.CSG_Parameter_Bool_Set_Value(self, *args)
    def asInt(self): return _saga_api.CSG_Parameter_Bool_asInt(self)
    def asString(self): return _saga_api.CSG_Parameter_Bool_asString(self)
    def Restore_Default(self): return _saga_api.CSG_Parameter_Bool_Restore_Default(self)
CSG_Parameter_Bool_swigregister = _saga_api.CSG_Parameter_Bool_swigregister
CSG_Parameter_Bool_swigregister(CSG_Parameter_Bool)

class CSG_Parameter_Value(CSG_Parameter_Data):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_Data]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_Value, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_Data]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_Value, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_Value
    __del__ = lambda self : None;
    def Set_Range(self, *args): return _saga_api.CSG_Parameter_Value_Set_Range(self, *args)
    def Set_Minimum(self, *args): return _saga_api.CSG_Parameter_Value_Set_Minimum(self, *args)
    def Get_Minimum(self): return _saga_api.CSG_Parameter_Value_Get_Minimum(self)
    def has_Minimum(self): return _saga_api.CSG_Parameter_Value_has_Minimum(self)
    def Set_Maximum(self, *args): return _saga_api.CSG_Parameter_Value_Set_Maximum(self, *args)
    def Get_Maximum(self): return _saga_api.CSG_Parameter_Value_Get_Maximum(self)
    def has_Maximum(self): return _saga_api.CSG_Parameter_Value_has_Maximum(self)
CSG_Parameter_Value_swigregister = _saga_api.CSG_Parameter_Value_swigregister
CSG_Parameter_Value_swigregister(CSG_Parameter_Value)

class CSG_Parameter_Int(CSG_Parameter_Value):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_Value]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_Int, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_Value]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_Int, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_Int(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_Int
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_Int_Get_Type(self)
    def Set_Value(self, *args): return _saga_api.CSG_Parameter_Int_Set_Value(self, *args)
    def asInt(self): return _saga_api.CSG_Parameter_Int_asInt(self)
    def asDouble(self): return _saga_api.CSG_Parameter_Int_asDouble(self)
    def asString(self): return _saga_api.CSG_Parameter_Int_asString(self)
    def Restore_Default(self): return _saga_api.CSG_Parameter_Int_Restore_Default(self)
CSG_Parameter_Int_swigregister = _saga_api.CSG_Parameter_Int_swigregister
CSG_Parameter_Int_swigregister(CSG_Parameter_Int)

class CSG_Parameter_Double(CSG_Parameter_Value):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_Value]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_Double, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_Value]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_Double, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_Double(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_Double
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_Double_Get_Type(self)
    def Set_Value(self, *args): return _saga_api.CSG_Parameter_Double_Set_Value(self, *args)
    def asInt(self): return _saga_api.CSG_Parameter_Double_asInt(self)
    def asDouble(self): return _saga_api.CSG_Parameter_Double_asDouble(self)
    def asString(self): return _saga_api.CSG_Parameter_Double_asString(self)
    def Restore_Default(self): return _saga_api.CSG_Parameter_Double_Restore_Default(self)
CSG_Parameter_Double_swigregister = _saga_api.CSG_Parameter_Double_swigregister
CSG_Parameter_Double_swigregister(CSG_Parameter_Double)

class CSG_Parameter_Degree(CSG_Parameter_Double):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_Double]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_Degree, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_Double]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_Degree, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_Degree(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_Degree
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_Degree_Get_Type(self)
    def Set_Value(self, *args): return _saga_api.CSG_Parameter_Degree_Set_Value(self, *args)
    def asString(self): return _saga_api.CSG_Parameter_Degree_asString(self)
CSG_Parameter_Degree_swigregister = _saga_api.CSG_Parameter_Degree_swigregister
CSG_Parameter_Degree_swigregister(CSG_Parameter_Degree)

class CSG_Parameter_Range(CSG_Parameter_Data):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_Data]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_Range, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_Data]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_Range, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_Range(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_Range
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_Range_Get_Type(self)
    def asString(self): return _saga_api.CSG_Parameter_Range_asString(self)
    def Set_Range(self, *args): return _saga_api.CSG_Parameter_Range_Set_Range(self, *args)
    def Set_LoVal(self, *args): return _saga_api.CSG_Parameter_Range_Set_LoVal(self, *args)
    def Get_LoVal(self): return _saga_api.CSG_Parameter_Range_Get_LoVal(self)
    def Set_HiVal(self, *args): return _saga_api.CSG_Parameter_Range_Set_HiVal(self, *args)
    def Get_HiVal(self): return _saga_api.CSG_Parameter_Range_Get_HiVal(self)
    def Get_LoParm(self): return _saga_api.CSG_Parameter_Range_Get_LoParm(self)
    def Get_HiParm(self): return _saga_api.CSG_Parameter_Range_Get_HiParm(self)
    def Restore_Default(self): return _saga_api.CSG_Parameter_Range_Restore_Default(self)
CSG_Parameter_Range_swigregister = _saga_api.CSG_Parameter_Range_swigregister
CSG_Parameter_Range_swigregister(CSG_Parameter_Range)

class CSG_Parameter_Choice(CSG_Parameter_Int):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_Int]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_Choice, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_Int]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_Choice, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_Choice(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_Choice
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_Choice_Get_Type(self)
    def Set_Value(self, *args): return _saga_api.CSG_Parameter_Choice_Set_Value(self, *args)
    def asString(self): return _saga_api.CSG_Parameter_Choice_asString(self)
    def Set_Items(self, *args): return _saga_api.CSG_Parameter_Choice_Set_Items(self, *args)
    def Get_Item(self, *args): return _saga_api.CSG_Parameter_Choice_Get_Item(self, *args)
    def Get_Data(self, *args): return _saga_api.CSG_Parameter_Choice_Get_Data(self, *args)
    def Get_Count(self): return _saga_api.CSG_Parameter_Choice_Get_Count(self)
CSG_Parameter_Choice_swigregister = _saga_api.CSG_Parameter_Choice_swigregister
CSG_Parameter_Choice_swigregister(CSG_Parameter_Choice)

class CSG_Parameter_String(CSG_Parameter_Data):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_Data]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_String, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_Data]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_String, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_String(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_String
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_String_Get_Type(self)
    def asString(self): return _saga_api.CSG_Parameter_String_asString(self)
    def is_Valid(self): return _saga_api.CSG_Parameter_String_is_Valid(self)
    def Set_Value(self, *args): return _saga_api.CSG_Parameter_String_Set_Value(self, *args)
    def Set_Password(self, *args): return _saga_api.CSG_Parameter_String_Set_Password(self, *args)
    def is_Password(self): return _saga_api.CSG_Parameter_String_is_Password(self)
    def Restore_Default(self): return _saga_api.CSG_Parameter_String_Restore_Default(self)
CSG_Parameter_String_swigregister = _saga_api.CSG_Parameter_String_swigregister
CSG_Parameter_String_swigregister(CSG_Parameter_String)

class CSG_Parameter_Text(CSG_Parameter_String):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_String]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_Text, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_String]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_Text, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_Text(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_Text
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_Text_Get_Type(self)
CSG_Parameter_Text_swigregister = _saga_api.CSG_Parameter_Text_swigregister
CSG_Parameter_Text_swigregister(CSG_Parameter_Text)

class CSG_Parameter_File_Name(CSG_Parameter_String):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_String]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_File_Name, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_String]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_File_Name, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_File_Name(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_File_Name
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_File_Name_Get_Type(self)
    def Set_Filter(self, *args): return _saga_api.CSG_Parameter_File_Name_Set_Filter(self, *args)
    def Get_Filter(self): return _saga_api.CSG_Parameter_File_Name_Get_Filter(self)
    def Set_Flag_Save(self, *args): return _saga_api.CSG_Parameter_File_Name_Set_Flag_Save(self, *args)
    def is_Save(self): return _saga_api.CSG_Parameter_File_Name_is_Save(self)
    def Set_Flag_Multiple(self, *args): return _saga_api.CSG_Parameter_File_Name_Set_Flag_Multiple(self, *args)
    def is_Multiple(self): return _saga_api.CSG_Parameter_File_Name_is_Multiple(self)
    def Set_Flag_Directory(self, *args): return _saga_api.CSG_Parameter_File_Name_Set_Flag_Directory(self, *args)
    def is_Directory(self): return _saga_api.CSG_Parameter_File_Name_is_Directory(self)
    def Get_FilePaths(self, *args): return _saga_api.CSG_Parameter_File_Name_Get_FilePaths(self, *args)
CSG_Parameter_File_Name_swigregister = _saga_api.CSG_Parameter_File_Name_swigregister
CSG_Parameter_File_Name_swigregister(CSG_Parameter_File_Name)

class CSG_Parameter_Font(CSG_Parameter_Data):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_Data]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_Font, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_Data]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_Font, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_Font(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_Font
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_Font_Get_Type(self)
    def Set_Value(self, *args): return _saga_api.CSG_Parameter_Font_Set_Value(self, *args)
    def asInt(self): return _saga_api.CSG_Parameter_Font_asInt(self)
    def asPointer(self): return _saga_api.CSG_Parameter_Font_asPointer(self)
    def asString(self): return _saga_api.CSG_Parameter_Font_asString(self)
    def Restore_Default(self): return _saga_api.CSG_Parameter_Font_Restore_Default(self)
CSG_Parameter_Font_swigregister = _saga_api.CSG_Parameter_Font_swigregister
CSG_Parameter_Font_swigregister(CSG_Parameter_Font)

class CSG_Parameter_Color(CSG_Parameter_Int):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_Int]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_Color, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_Int]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_Color, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_Color(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_Color
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_Color_Get_Type(self)
CSG_Parameter_Color_swigregister = _saga_api.CSG_Parameter_Color_swigregister
CSG_Parameter_Color_swigregister(CSG_Parameter_Color)

class CSG_Parameter_Colors(CSG_Parameter_Data):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_Data]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_Colors, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_Data]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_Colors, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_Colors(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_Colors
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_Colors_Get_Type(self)
    def asInt(self): return _saga_api.CSG_Parameter_Colors_asInt(self)
    def asPointer(self): return _saga_api.CSG_Parameter_Colors_asPointer(self)
    def asString(self): return _saga_api.CSG_Parameter_Colors_asString(self)
CSG_Parameter_Colors_swigregister = _saga_api.CSG_Parameter_Colors_swigregister
CSG_Parameter_Colors_swigregister(CSG_Parameter_Colors)

class CSG_Parameter_Fixed_Table(CSG_Parameter_Data):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_Data]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_Fixed_Table, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_Data]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_Fixed_Table, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_Fixed_Table(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_Fixed_Table
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_Fixed_Table_Get_Type(self)
    def asPointer(self): return _saga_api.CSG_Parameter_Fixed_Table_asPointer(self)
    def asString(self): return _saga_api.CSG_Parameter_Fixed_Table_asString(self)
CSG_Parameter_Fixed_Table_swigregister = _saga_api.CSG_Parameter_Fixed_Table_swigregister
CSG_Parameter_Fixed_Table_swigregister(CSG_Parameter_Fixed_Table)

class CSG_Parameter_Grid_System(CSG_Parameter_Data):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_Data]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_Grid_System, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_Data]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_Grid_System, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_Grid_System(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_Grid_System
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_Grid_System_Get_Type(self)
    def Set_Value(self, *args): return _saga_api.CSG_Parameter_Grid_System_Set_Value(self, *args)
    def asPointer(self): return _saga_api.CSG_Parameter_Grid_System_asPointer(self)
    def asString(self): return _saga_api.CSG_Parameter_Grid_System_asString(self)
CSG_Parameter_Grid_System_swigregister = _saga_api.CSG_Parameter_Grid_System_swigregister
CSG_Parameter_Grid_System_swigregister(CSG_Parameter_Grid_System)

class CSG_Parameter_Table_Field(CSG_Parameter_Int):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_Int]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_Table_Field, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_Int]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_Table_Field, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_Table_Field(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_Table_Field
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_Table_Field_Get_Type(self)
    def asString(self): return _saga_api.CSG_Parameter_Table_Field_asString(self)
    def Set_Value(self, *args): return _saga_api.CSG_Parameter_Table_Field_Set_Value(self, *args)
    def Get_Table(self): return _saga_api.CSG_Parameter_Table_Field_Get_Table(self)
CSG_Parameter_Table_Field_swigregister = _saga_api.CSG_Parameter_Table_Field_swigregister
CSG_Parameter_Table_Field_swigregister(CSG_Parameter_Table_Field)

class CSG_Parameter_Data_Object(CSG_Parameter_Data):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_Data]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_Data_Object, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_Data]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_Data_Object, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_Data_Object
    __del__ = lambda self : None;
    def is_Valid(self): return _saga_api.CSG_Parameter_Data_Object_is_Valid(self)
    def Set_Value(self, *args): return _saga_api.CSG_Parameter_Data_Object_Set_Value(self, *args)
    def asPointer(self): return _saga_api.CSG_Parameter_Data_Object_asPointer(self)
    def asString(self): return _saga_api.CSG_Parameter_Data_Object_asString(self)
CSG_Parameter_Data_Object_swigregister = _saga_api.CSG_Parameter_Data_Object_swigregister
CSG_Parameter_Data_Object_swigregister(CSG_Parameter_Data_Object)

class CSG_Parameter_Data_Object_Output(CSG_Parameter_Data_Object):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_Data_Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_Data_Object_Output, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_Data_Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_Data_Object_Output, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_Data_Object_Output(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_Data_Object_Output
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_Data_Object_Output_Get_Type(self)
    def Set_Value(self, *args): return _saga_api.CSG_Parameter_Data_Object_Output_Set_Value(self, *args)
    def Set_DataObject_Type(self, *args): return _saga_api.CSG_Parameter_Data_Object_Output_Set_DataObject_Type(self, *args)
    def Get_DataObject_Type(self): return _saga_api.CSG_Parameter_Data_Object_Output_Get_DataObject_Type(self)
CSG_Parameter_Data_Object_Output_swigregister = _saga_api.CSG_Parameter_Data_Object_Output_swigregister
CSG_Parameter_Data_Object_Output_swigregister(CSG_Parameter_Data_Object_Output)

class CSG_Parameter_Grid(CSG_Parameter_Data_Object):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_Data_Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_Grid, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_Data_Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_Grid, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_Grid(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_Grid
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_Grid_Get_Type(self)
    def Set_Value(self, *args): return _saga_api.CSG_Parameter_Grid_Set_Value(self, *args)
    def Set_Preferred_Type(self, *args): return _saga_api.CSG_Parameter_Grid_Set_Preferred_Type(self, *args)
    def Get_Preferred_Type(self): return _saga_api.CSG_Parameter_Grid_Get_Preferred_Type(self)
    def Get_System(self): return _saga_api.CSG_Parameter_Grid_Get_System(self)
CSG_Parameter_Grid_swigregister = _saga_api.CSG_Parameter_Grid_swigregister
CSG_Parameter_Grid_swigregister(CSG_Parameter_Grid)

class CSG_Parameter_Table(CSG_Parameter_Data_Object):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_Data_Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_Table, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_Data_Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_Table, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_Table(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_Table
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_Table_Get_Type(self)
    def Set_Value(self, *args): return _saga_api.CSG_Parameter_Table_Set_Value(self, *args)
CSG_Parameter_Table_swigregister = _saga_api.CSG_Parameter_Table_swigregister
CSG_Parameter_Table_swigregister(CSG_Parameter_Table)

class CSG_Parameter_Shapes(CSG_Parameter_Data_Object):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_Data_Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_Shapes, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_Data_Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_Shapes, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_Shapes(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_Shapes
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_Shapes_Get_Type(self)
    def Set_Value(self, *args): return _saga_api.CSG_Parameter_Shapes_Set_Value(self, *args)
    def Set_Shape_Type(self, *args): return _saga_api.CSG_Parameter_Shapes_Set_Shape_Type(self, *args)
    def Get_Shape_Type(self): return _saga_api.CSG_Parameter_Shapes_Get_Shape_Type(self)
CSG_Parameter_Shapes_swigregister = _saga_api.CSG_Parameter_Shapes_swigregister
CSG_Parameter_Shapes_swigregister(CSG_Parameter_Shapes)

class CSG_Parameter_TIN(CSG_Parameter_Data_Object):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_Data_Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_TIN, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_Data_Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_TIN, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_TIN(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_TIN
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_TIN_Get_Type(self)
    def Set_Value(self, *args): return _saga_api.CSG_Parameter_TIN_Set_Value(self, *args)
CSG_Parameter_TIN_swigregister = _saga_api.CSG_Parameter_TIN_swigregister
CSG_Parameter_TIN_swigregister(CSG_Parameter_TIN)

class CSG_Parameter_PointCloud(CSG_Parameter_Data_Object):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_Data_Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_PointCloud, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_Data_Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_PointCloud, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_PointCloud(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_PointCloud
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_PointCloud_Get_Type(self)
    def Set_Value(self, *args): return _saga_api.CSG_Parameter_PointCloud_Set_Value(self, *args)
CSG_Parameter_PointCloud_swigregister = _saga_api.CSG_Parameter_PointCloud_swigregister
CSG_Parameter_PointCloud_swigregister(CSG_Parameter_PointCloud)

class CSG_Parameter_List(CSG_Parameter_Data):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_Data]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_List, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_Data]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_List, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_List
    __del__ = lambda self : None;
    def asString(self): return _saga_api.CSG_Parameter_List_asString(self)
    def asInt(self): return _saga_api.CSG_Parameter_List_asInt(self)
    def asPointer(self): return _saga_api.CSG_Parameter_List_asPointer(self)
    def Add_Item(self, *args): return _saga_api.CSG_Parameter_List_Add_Item(self, *args)
    def Del_Item(self, *args): return _saga_api.CSG_Parameter_List_Del_Item(self, *args)
    def Del_Items(self): return _saga_api.CSG_Parameter_List_Del_Items(self)
    def Get_Count(self): return _saga_api.CSG_Parameter_List_Get_Count(self)
    def asDataObject(self, *args): return _saga_api.CSG_Parameter_List_asDataObject(self, *args)
CSG_Parameter_List_swigregister = _saga_api.CSG_Parameter_List_swigregister
CSG_Parameter_List_swigregister(CSG_Parameter_List)

class CSG_Parameter_Grid_List(CSG_Parameter_List):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_List]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_Grid_List, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_List]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_Grid_List, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_Grid_List(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_Grid_List
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_Grid_List_Get_Type(self)
    def Get_System(self): return _saga_api.CSG_Parameter_Grid_List_Get_System(self)
    def asGrid(self, *args): return _saga_api.CSG_Parameter_Grid_List_asGrid(self, *args)
CSG_Parameter_Grid_List_swigregister = _saga_api.CSG_Parameter_Grid_List_swigregister
CSG_Parameter_Grid_List_swigregister(CSG_Parameter_Grid_List)

class CSG_Parameter_Table_List(CSG_Parameter_List):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_List]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_Table_List, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_List]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_Table_List, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_Table_List(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_Table_List
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_Table_List_Get_Type(self)
    def asTable(self, *args): return _saga_api.CSG_Parameter_Table_List_asTable(self, *args)
CSG_Parameter_Table_List_swigregister = _saga_api.CSG_Parameter_Table_List_swigregister
CSG_Parameter_Table_List_swigregister(CSG_Parameter_Table_List)

class CSG_Parameter_Shapes_List(CSG_Parameter_List):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_List]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_Shapes_List, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_List]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_Shapes_List, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_Shapes_List(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_Shapes_List
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_Shapes_List_Get_Type(self)
    def Set_Shape_Type(self, *args): return _saga_api.CSG_Parameter_Shapes_List_Set_Shape_Type(self, *args)
    def Get_Shape_Type(self): return _saga_api.CSG_Parameter_Shapes_List_Get_Shape_Type(self)
    def asShapes(self, *args): return _saga_api.CSG_Parameter_Shapes_List_asShapes(self, *args)
CSG_Parameter_Shapes_List_swigregister = _saga_api.CSG_Parameter_Shapes_List_swigregister
CSG_Parameter_Shapes_List_swigregister(CSG_Parameter_Shapes_List)

class CSG_Parameter_TIN_List(CSG_Parameter_List):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_List]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_TIN_List, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_List]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_TIN_List, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_TIN_List(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_TIN_List
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_TIN_List_Get_Type(self)
    def asTIN(self, *args): return _saga_api.CSG_Parameter_TIN_List_asTIN(self, *args)
CSG_Parameter_TIN_List_swigregister = _saga_api.CSG_Parameter_TIN_List_swigregister
CSG_Parameter_TIN_List_swigregister(CSG_Parameter_TIN_List)

class CSG_Parameter_PointCloud_List(CSG_Parameter_List):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_List]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_PointCloud_List, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_List]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_PointCloud_List, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_PointCloud_List(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_PointCloud_List
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_PointCloud_List_Get_Type(self)
    def asPointCloud(self, *args): return _saga_api.CSG_Parameter_PointCloud_List_asPointCloud(self, *args)
CSG_Parameter_PointCloud_List_swigregister = _saga_api.CSG_Parameter_PointCloud_List_swigregister
CSG_Parameter_PointCloud_List_swigregister(CSG_Parameter_PointCloud_List)

class CSG_Parameter_Parameters(CSG_Parameter_Data):
    __swig_setmethods__ = {}
    for _s in [CSG_Parameter_Data]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter_Parameters, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Parameter_Data]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter_Parameters, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameter_Parameters(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Parameter_Parameters
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Parameter_Parameters_Get_Type(self)
    def asString(self): return _saga_api.CSG_Parameter_Parameters_asString(self)
    def asPointer(self): return _saga_api.CSG_Parameter_Parameters_asPointer(self)
    def Restore_Default(self): return _saga_api.CSG_Parameter_Parameters_Restore_Default(self)
CSG_Parameter_Parameters_swigregister = _saga_api.CSG_Parameter_Parameters_swigregister
CSG_Parameter_Parameters_swigregister(CSG_Parameter_Parameters)

class CSG_Parameters_Grid_Target(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameters_Grid_Target, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameters_Grid_Target, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _saga_api.new_CSG_Parameters_Grid_Target()
        try: self.this.append(this)
        except: self.this = this
    def Create(self): return _saga_api.CSG_Parameters_Grid_Target_Create(self)
    def Add_Parameters_User(self, *args): return _saga_api.CSG_Parameters_Grid_Target_Add_Parameters_User(self, *args)
    def Add_Parameters_Grid(self, *args): return _saga_api.CSG_Parameters_Grid_Target_Add_Parameters_Grid(self, *args)
    def Add_Parameters_System(self, *args): return _saga_api.CSG_Parameters_Grid_Target_Add_Parameters_System(self, *args)
    def Add_Grid_Parameter(self, *args): return _saga_api.CSG_Parameters_Grid_Target_Add_Grid_Parameter(self, *args)
    def On_User_Changed(self, *args): return _saga_api.CSG_Parameters_Grid_Target_On_User_Changed(self, *args)
    def Init_User(self, *args): return _saga_api.CSG_Parameters_Grid_Target_Init_User(self, *args)
    def Get_User(self, *args): return _saga_api.CSG_Parameters_Grid_Target_Get_User(self, *args)
    def Get_Grid(self, *args): return _saga_api.CSG_Parameters_Grid_Target_Get_Grid(self, *args)
    def Get_System_User(self, *args): return _saga_api.CSG_Parameters_Grid_Target_Get_System_User(self, *args)
    def Get_System(self, *args): return _saga_api.CSG_Parameters_Grid_Target_Get_System(self, *args)
    __swig_destroy__ = _saga_api.delete_CSG_Parameters_Grid_Target
    __del__ = lambda self : None;
CSG_Parameters_Grid_Target_swigregister = _saga_api.CSG_Parameters_Grid_Target_swigregister
CSG_Parameters_Grid_Target_swigregister(CSG_Parameters_Grid_Target)

class CSG_Parameter(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameter, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameter, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def Get_Owner(self): return _saga_api.CSG_Parameter_Get_Owner(self)
    def Get_Parent(self): return _saga_api.CSG_Parameter_Get_Parent(self)
    def Get_Type(self): return _saga_api.CSG_Parameter_Get_Type(self)
    def Get_Type_Identifier(self): return _saga_api.CSG_Parameter_Get_Type_Identifier(self)
    def Get_Type_Name(self): return _saga_api.CSG_Parameter_Get_Type_Name(self)
    def Get_Data(self): return _saga_api.CSG_Parameter_Get_Data(self)
    def Get_Identifier(self): return _saga_api.CSG_Parameter_Get_Identifier(self)
    def Get_Name(self): return _saga_api.CSG_Parameter_Get_Name(self)
    def Get_Description(self, *args): return _saga_api.CSG_Parameter_Get_Description(self, *args)
    def Set_Enabled(self, *args): return _saga_api.CSG_Parameter_Set_Enabled(self, *args)
    def is_Enabled(self): return _saga_api.CSG_Parameter_is_Enabled(self)
    def ignore_Projection(self): return _saga_api.CSG_Parameter_ignore_Projection(self)
    def is_Valid(self): return _saga_api.CSG_Parameter_is_Valid(self)
    def is_Input(self): return _saga_api.CSG_Parameter_is_Input(self)
    def is_Output(self): return _saga_api.CSG_Parameter_is_Output(self)
    def is_Optional(self): return _saga_api.CSG_Parameter_is_Optional(self)
    def is_Information(self): return _saga_api.CSG_Parameter_is_Information(self)
    def is_Option(self): return _saga_api.CSG_Parameter_is_Option(self)
    def is_DataObject(self): return _saga_api.CSG_Parameter_is_DataObject(self)
    def is_DataObject_List(self): return _saga_api.CSG_Parameter_is_DataObject_List(self)
    def is_Parameters(self): return _saga_api.CSG_Parameter_is_Parameters(self)
    def is_Serializable(self): return _saga_api.CSG_Parameter_is_Serializable(self)
    def Get_Children_Count(self): return _saga_api.CSG_Parameter_Get_Children_Count(self)
    def Get_Child(self, *args): return _saga_api.CSG_Parameter_Get_Child(self, *args)
    def Set_Value(self, *args): return _saga_api.CSG_Parameter_Set_Value(self, *args)
    def Set_Default(self, *args): return _saga_api.CSG_Parameter_Set_Default(self, *args)
    def Restore_Default(self): return _saga_api.CSG_Parameter_Restore_Default(self)
    def has_Changed(self, *args): return _saga_api.CSG_Parameter_has_Changed(self, *args)
    def asBool(self): return _saga_api.CSG_Parameter_asBool(self)
    def asInt(self): return _saga_api.CSG_Parameter_asInt(self)
    def asColor(self): return _saga_api.CSG_Parameter_asColor(self)
    def asDouble(self): return _saga_api.CSG_Parameter_asDouble(self)
    def asPointer(self): return _saga_api.CSG_Parameter_asPointer(self)
    def asString(self): return _saga_api.CSG_Parameter_asString(self)
    def asFont(self): return _saga_api.CSG_Parameter_asFont(self)
    def asColors(self): return _saga_api.CSG_Parameter_asColors(self)
    def asGrid_System(self): return _saga_api.CSG_Parameter_asGrid_System(self)
    def asDataObject(self): return _saga_api.CSG_Parameter_asDataObject(self)
    def asGrid(self): return _saga_api.CSG_Parameter_asGrid(self)
    def asTable(self): return _saga_api.CSG_Parameter_asTable(self)
    def asShapes(self): return _saga_api.CSG_Parameter_asShapes(self)
    def asTIN(self): return _saga_api.CSG_Parameter_asTIN(self)
    def asPointCloud(self): return _saga_api.CSG_Parameter_asPointCloud(self)
    def asValue(self): return _saga_api.CSG_Parameter_asValue(self)
    def asChoice(self): return _saga_api.CSG_Parameter_asChoice(self)
    def asRange(self): return _saga_api.CSG_Parameter_asRange(self)
    def asFilePath(self): return _saga_api.CSG_Parameter_asFilePath(self)
    def asList(self): return _saga_api.CSG_Parameter_asList(self)
    def asGridList(self): return _saga_api.CSG_Parameter_asGridList(self)
    def asTableList(self): return _saga_api.CSG_Parameter_asTableList(self)
    def asShapesList(self): return _saga_api.CSG_Parameter_asShapesList(self)
    def asTINList(self): return _saga_api.CSG_Parameter_asTINList(self)
    def asPointCloudList(self): return _saga_api.CSG_Parameter_asPointCloudList(self)
    def asParameters(self): return _saga_api.CSG_Parameter_asParameters(self)
    def Assign(self, *args): return _saga_api.CSG_Parameter_Assign(self, *args)
    def Serialize(self, *args): return _saga_api.CSG_Parameter_Serialize(self, *args)
CSG_Parameter_swigregister = _saga_api.CSG_Parameter_swigregister
CSG_Parameter_swigregister(CSG_Parameter)

class CSG_Parameters(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Parameters, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Parameters, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _saga_api.delete_CSG_Parameters
    __del__ = lambda self : None;
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Parameters(*args)
        try: self.this.append(this)
        except: self.this = this
    def Create(self, *args): return _saga_api.CSG_Parameters_Create(self, *args)
    def Destroy(self): return _saga_api.CSG_Parameters_Destroy(self)
    def Get_Owner(self): return _saga_api.CSG_Parameters_Get_Owner(self)
    def Get_Count(self): return _saga_api.CSG_Parameters_Get_Count(self)
    def Set_Identifier(self, *args): return _saga_api.CSG_Parameters_Set_Identifier(self, *args)
    def Get_Identifier(self): return _saga_api.CSG_Parameters_Get_Identifier(self)
    def Set_Name(self, *args): return _saga_api.CSG_Parameters_Set_Name(self, *args)
    def Get_Name(self): return _saga_api.CSG_Parameters_Get_Name(self)
    def Set_Description(self, *args): return _saga_api.CSG_Parameters_Set_Description(self, *args)
    def Get_Description(self): return _saga_api.CSG_Parameters_Get_Description(self)
    def Set_Translation(self, *args): return _saga_api.CSG_Parameters_Set_Translation(self, *args)
    def Set_Enabled(self, *args): return _saga_api.CSG_Parameters_Set_Enabled(self, *args)
    def Set_Callback_On_Parameter_Changed(self, *args): return _saga_api.CSG_Parameters_Set_Callback_On_Parameter_Changed(self, *args)
    def Set_Callback(self, bActive = True): return _saga_api.CSG_Parameters_Set_Callback(self, bActive)
    def Del_Parameters(self): return _saga_api.CSG_Parameters_Del_Parameters(self)
    def Set_Parameter(self, *args): return _saga_api.CSG_Parameters_Set_Parameter(self, *args)
    def Restore_Defaults(self): return _saga_api.CSG_Parameters_Restore_Defaults(self)
    def Assign(self, *args): return _saga_api.CSG_Parameters_Assign(self, *args)
    def Assign_Values(self, *args): return _saga_api.CSG_Parameters_Assign_Values(self, *args)
    def Serialize(self, *args): return _saga_api.CSG_Parameters_Serialize(self, *args)
    def Serialize_Compatibility(self, *args): return _saga_api.CSG_Parameters_Serialize_Compatibility(self, *args)
    def DataObjects_Check(self, bSilent = False): return _saga_api.CSG_Parameters_DataObjects_Check(self, bSilent)
    def Get_String(self, *args): return _saga_api.CSG_Parameters_Get_String(self, *args)
    def Msg_String(self, *args): return _saga_api.CSG_Parameters_Msg_String(self, *args)
    def Set_History(self, *args): return _saga_api.CSG_Parameters_Set_History(self, *args)
    def Get_Grid_System(self): return _saga_api.CSG_Parameters_Get_Grid_System(self)
    def is_Managed(self): return _saga_api.CSG_Parameters_is_Managed(self)
    def Get_Parameter(self, *args): return _saga_api.CSG_Parameters_Get_Parameter(self, *args)
    def __call__(self, *args): return _saga_api.CSG_Parameters___call__(self, *args)
    def Del_Parameter(self, *args): return _saga_api.CSG_Parameters_Del_Parameter(self, *args)
    def Add_Node(self, *args): return _saga_api.CSG_Parameters_Add_Node(self, *args)
    def Add_Value(self, *args): return _saga_api.CSG_Parameters_Add_Value(self, *args)
    def Add_Info_Value(self, *args): return _saga_api.CSG_Parameters_Add_Info_Value(self, *args)
    def Add_Range(self, *args): return _saga_api.CSG_Parameters_Add_Range(self, *args)
    def Add_Info_Range(self, *args): return _saga_api.CSG_Parameters_Add_Info_Range(self, *args)
    def Add_Choice(self, *args): return _saga_api.CSG_Parameters_Add_Choice(self, *args)
    def Add_String(self, *args): return _saga_api.CSG_Parameters_Add_String(self, *args)
    def Add_Info_String(self, *args): return _saga_api.CSG_Parameters_Add_Info_String(self, *args)
    def Add_FilePath(self, *args): return _saga_api.CSG_Parameters_Add_FilePath(self, *args)
    def Add_Font(self, *args): return _saga_api.CSG_Parameters_Add_Font(self, *args)
    def Add_Colors(self, *args): return _saga_api.CSG_Parameters_Add_Colors(self, *args)
    def Add_FixedTable(self, *args): return _saga_api.CSG_Parameters_Add_FixedTable(self, *args)
    def Add_Grid_System(self, *args): return _saga_api.CSG_Parameters_Add_Grid_System(self, *args)
    def Add_Grid(self, *args): return _saga_api.CSG_Parameters_Add_Grid(self, *args)
    def Add_Grid_Output(self, *args): return _saga_api.CSG_Parameters_Add_Grid_Output(self, *args)
    def Add_Grid_List(self, *args): return _saga_api.CSG_Parameters_Add_Grid_List(self, *args)
    def Add_Table_Field(self, *args): return _saga_api.CSG_Parameters_Add_Table_Field(self, *args)
    def Add_Table(self, *args): return _saga_api.CSG_Parameters_Add_Table(self, *args)
    def Add_Table_Output(self, *args): return _saga_api.CSG_Parameters_Add_Table_Output(self, *args)
    def Add_Table_List(self, *args): return _saga_api.CSG_Parameters_Add_Table_List(self, *args)
    def Add_Shapes(self, *args): return _saga_api.CSG_Parameters_Add_Shapes(self, *args)
    def Add_Shapes_Output(self, *args): return _saga_api.CSG_Parameters_Add_Shapes_Output(self, *args)
    def Add_Shapes_List(self, *args): return _saga_api.CSG_Parameters_Add_Shapes_List(self, *args)
    def Add_TIN(self, *args): return _saga_api.CSG_Parameters_Add_TIN(self, *args)
    def Add_TIN_Output(self, *args): return _saga_api.CSG_Parameters_Add_TIN_Output(self, *args)
    def Add_TIN_List(self, *args): return _saga_api.CSG_Parameters_Add_TIN_List(self, *args)
    def Add_PointCloud(self, *args): return _saga_api.CSG_Parameters_Add_PointCloud(self, *args)
    def Add_PointCloud_Output(self, *args): return _saga_api.CSG_Parameters_Add_PointCloud_Output(self, *args)
    def Add_PointCloud_List(self, *args): return _saga_api.CSG_Parameters_Add_PointCloud_List(self, *args)
    def Add_Parameters(self, *args): return _saga_api.CSG_Parameters_Add_Parameters(self, *args)
CSG_Parameters_swigregister = _saga_api.CSG_Parameters_swigregister
CSG_Parameters_swigregister(CSG_Parameters)

MODULE_TYPE_Base = _saga_api.MODULE_TYPE_Base
MODULE_TYPE_Interactive = _saga_api.MODULE_TYPE_Interactive
MODULE_TYPE_Grid = _saga_api.MODULE_TYPE_Grid
MODULE_TYPE_Grid_Interactive = _saga_api.MODULE_TYPE_Grid_Interactive
MODULE_ERROR_Unknown = _saga_api.MODULE_ERROR_Unknown
MODULE_ERROR_Calculation = _saga_api.MODULE_ERROR_Calculation
class CSG_Module(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Module, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Module, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _saga_api.delete_CSG_Module
    __del__ = lambda self : None;
    def Destroy(self): return _saga_api.CSG_Module_Destroy(self)
    def Get_Type(self): return _saga_api.CSG_Module_Get_Type(self)
    def Get_ID(self): return _saga_api.CSG_Module_Get_ID(self)
    def Get_Name(self): return _saga_api.CSG_Module_Get_Name(self)
    def Get_Description(self): return _saga_api.CSG_Module_Get_Description(self)
    def Get_Author(self): return _saga_api.CSG_Module_Get_Author(self)
    def Get_Icon(self): return _saga_api.CSG_Module_Get_Icon(self)
    def Get_MenuPath(self): return _saga_api.CSG_Module_Get_MenuPath(self)
    def Get_Parameters_Count(self): return _saga_api.CSG_Module_Get_Parameters_Count(self)
    def Get_Parameters(self, *args): return _saga_api.CSG_Module_Get_Parameters(self, *args)
    def Garbage_Get_Count(self): return _saga_api.CSG_Module_Garbage_Get_Count(self)
    def Garbage_Get_Item(self, *args): return _saga_api.CSG_Module_Garbage_Get_Item(self, *args)
    def Garbage_Del_Item(self, *args): return _saga_api.CSG_Module_Garbage_Del_Item(self, *args)
    def Garbage_Clear(self): return _saga_api.CSG_Module_Garbage_Clear(self)
    def do_Sync_Projections(self): return _saga_api.CSG_Module_do_Sync_Projections(self)
    def is_Grid(self): return _saga_api.CSG_Module_is_Grid(self)
    def is_Interactive(self): return _saga_api.CSG_Module_is_Interactive(self)
    def is_Progress(self): return _saga_api.CSG_Module_is_Progress(self)
    def is_Executing(self): return _saga_api.CSG_Module_is_Executing(self)
    def Set_Translation(self, *args): return _saga_api.CSG_Module_Set_Translation(self, *args)
    def Set_Managed(self, bOn = True): return _saga_api.CSG_Module_Set_Managed(self, bOn)
    def Set_Show_Progress(self, bOn = True): return _saga_api.CSG_Module_Set_Show_Progress(self, bOn)
    def On_Before_Execution(self): return _saga_api.CSG_Module_On_Before_Execution(self)
    def On_After_Execution(self): return _saga_api.CSG_Module_On_After_Execution(self)
    def Execute(self): return _saga_api.CSG_Module_Execute(self)
CSG_Module_swigregister = _saga_api.CSG_Module_swigregister
CSG_Module_swigregister(CSG_Module)

class CSG_Module_Grid(CSG_Module):
    __swig_setmethods__ = {}
    for _s in [CSG_Module]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Module_Grid, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Module]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Module_Grid, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _saga_api.delete_CSG_Module_Grid
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Module_Grid_Get_Type(self)
    def Get_System(self): return _saga_api.CSG_Module_Grid_Get_System(self)
    def is_Grid(self): return _saga_api.CSG_Module_Grid_is_Grid(self)
CSG_Module_Grid_swigregister = _saga_api.CSG_Module_Grid_swigregister
CSG_Module_Grid_swigregister(CSG_Module_Grid)

MODULE_INTERACTIVE_UNDEFINED = _saga_api.MODULE_INTERACTIVE_UNDEFINED
MODULE_INTERACTIVE_LDOWN = _saga_api.MODULE_INTERACTIVE_LDOWN
MODULE_INTERACTIVE_LUP = _saga_api.MODULE_INTERACTIVE_LUP
MODULE_INTERACTIVE_LDCLICK = _saga_api.MODULE_INTERACTIVE_LDCLICK
MODULE_INTERACTIVE_MDOWN = _saga_api.MODULE_INTERACTIVE_MDOWN
MODULE_INTERACTIVE_MUP = _saga_api.MODULE_INTERACTIVE_MUP
MODULE_INTERACTIVE_MDCLICK = _saga_api.MODULE_INTERACTIVE_MDCLICK
MODULE_INTERACTIVE_RDOWN = _saga_api.MODULE_INTERACTIVE_RDOWN
MODULE_INTERACTIVE_RUP = _saga_api.MODULE_INTERACTIVE_RUP
MODULE_INTERACTIVE_RDCLICK = _saga_api.MODULE_INTERACTIVE_RDCLICK
MODULE_INTERACTIVE_MOVE = _saga_api.MODULE_INTERACTIVE_MOVE
MODULE_INTERACTIVE_MOVE_LDOWN = _saga_api.MODULE_INTERACTIVE_MOVE_LDOWN
MODULE_INTERACTIVE_MOVE_MDOWN = _saga_api.MODULE_INTERACTIVE_MOVE_MDOWN
MODULE_INTERACTIVE_MOVE_RDOWN = _saga_api.MODULE_INTERACTIVE_MOVE_RDOWN
MODULE_INTERACTIVE_DRAG_NONE = _saga_api.MODULE_INTERACTIVE_DRAG_NONE
MODULE_INTERACTIVE_DRAG_LINE = _saga_api.MODULE_INTERACTIVE_DRAG_LINE
MODULE_INTERACTIVE_DRAG_BOX = _saga_api.MODULE_INTERACTIVE_DRAG_BOX
MODULE_INTERACTIVE_DRAG_CIRCLE = _saga_api.MODULE_INTERACTIVE_DRAG_CIRCLE
MODULE_INTERACTIVE_KEY_LEFT = _saga_api.MODULE_INTERACTIVE_KEY_LEFT
MODULE_INTERACTIVE_KEY_MIDDLE = _saga_api.MODULE_INTERACTIVE_KEY_MIDDLE
MODULE_INTERACTIVE_KEY_RIGHT = _saga_api.MODULE_INTERACTIVE_KEY_RIGHT
MODULE_INTERACTIVE_KEY_SHIFT = _saga_api.MODULE_INTERACTIVE_KEY_SHIFT
MODULE_INTERACTIVE_KEY_ALT = _saga_api.MODULE_INTERACTIVE_KEY_ALT
MODULE_INTERACTIVE_KEY_CTRL = _saga_api.MODULE_INTERACTIVE_KEY_CTRL
class CSG_Module_Interactive_Base(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Module_Interactive_Base, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Module_Interactive_Base, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _saga_api.new_CSG_Module_Interactive_Base()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Module_Interactive_Base
    __del__ = lambda self : None;
    def Execute_Position(self, *args): return _saga_api.CSG_Module_Interactive_Base_Execute_Position(self, *args)
    def Execute_Keyboard(self, *args): return _saga_api.CSG_Module_Interactive_Base_Execute_Keyboard(self, *args)
    def Execute_Finish(self): return _saga_api.CSG_Module_Interactive_Base_Execute_Finish(self)
    def Get_Drag_Mode(self): return _saga_api.CSG_Module_Interactive_Base_Get_Drag_Mode(self)
CSG_Module_Interactive_Base_swigregister = _saga_api.CSG_Module_Interactive_Base_swigregister
CSG_Module_Interactive_Base_swigregister(CSG_Module_Interactive_Base)

class CSG_Module_Interactive(CSG_Module_Interactive_Base,CSG_Module):
    __swig_setmethods__ = {}
    for _s in [CSG_Module_Interactive_Base,CSG_Module]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Module_Interactive, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Module_Interactive_Base,CSG_Module]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Module_Interactive, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _saga_api.delete_CSG_Module_Interactive
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Module_Interactive_Get_Type(self)
    def is_Interactive(self): return _saga_api.CSG_Module_Interactive_is_Interactive(self)
CSG_Module_Interactive_swigregister = _saga_api.CSG_Module_Interactive_swigregister
CSG_Module_Interactive_swigregister(CSG_Module_Interactive)

class CSG_Module_Grid_Interactive(CSG_Module_Interactive_Base,CSG_Module_Grid):
    __swig_setmethods__ = {}
    for _s in [CSG_Module_Interactive_Base,CSG_Module_Grid]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Module_Grid_Interactive, name, value)
    __swig_getmethods__ = {}
    for _s in [CSG_Module_Interactive_Base,CSG_Module_Grid]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Module_Grid_Interactive, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _saga_api.delete_CSG_Module_Grid_Interactive
    __del__ = lambda self : None;
    def Get_Type(self): return _saga_api.CSG_Module_Grid_Interactive_Get_Type(self)
    def is_Interactive(self): return _saga_api.CSG_Module_Grid_Interactive_is_Interactive(self)
CSG_Module_Grid_Interactive_swigregister = _saga_api.CSG_Module_Grid_Interactive_swigregister
CSG_Module_Grid_Interactive_swigregister(CSG_Module_Grid_Interactive)

MLB_INFO_Name = _saga_api.MLB_INFO_Name
MLB_INFO_Description = _saga_api.MLB_INFO_Description
MLB_INFO_Author = _saga_api.MLB_INFO_Author
MLB_INFO_Version = _saga_api.MLB_INFO_Version
MLB_INFO_Menu_Path = _saga_api.MLB_INFO_Menu_Path
MLB_INFO_User = _saga_api.MLB_INFO_User
MLB_INFO_Count = _saga_api.MLB_INFO_Count
class CSG_Module_Library_Interface(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Module_Library_Interface, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Module_Library_Interface, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _saga_api.new_CSG_Module_Library_Interface()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _saga_api.delete_CSG_Module_Library_Interface
    __del__ = lambda self : None;
    def Set_Info(self, *args): return _saga_api.CSG_Module_Library_Interface_Set_Info(self, *args)
    def Get_Info(self, *args): return _saga_api.CSG_Module_Library_Interface_Get_Info(self, *args)
    def Get_Count(self): return _saga_api.CSG_Module_Library_Interface_Get_Count(self)
    def Add_Module(self, *args): return _saga_api.CSG_Module_Library_Interface_Add_Module(self, *args)
    def Get_Module(self, *args): return _saga_api.CSG_Module_Library_Interface_Get_Module(self, *args)
    def Set_File_Name(self, *args): return _saga_api.CSG_Module_Library_Interface_Set_File_Name(self, *args)
    def Get_File_Name(self): return _saga_api.CSG_Module_Library_Interface_Get_File_Name(self)
    def Get_Translation(self, *args): return _saga_api.CSG_Module_Library_Interface_Get_Translation(self, *args)
CSG_Module_Library_Interface_swigregister = _saga_api.CSG_Module_Library_Interface_swigregister
CSG_Module_Library_Interface_swigregister(CSG_Module_Library_Interface)

class CSG_Module_Library(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSG_Module_Library, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSG_Module_Library, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _saga_api.delete_CSG_Module_Library
    __del__ = lambda self : None;
    def __init__(self, *args): 
        this = _saga_api.new_CSG_Module_Library(*args)
        try: self.this.append(this)
        except: self.this = this
    def Create(self, *args): return _saga_api.CSG_Module_Library_Create(self, *args)
    def Destroy(self): return _saga_api.CSG_Module_Library_Destroy(self)
    def is_Valid(self): return _saga_api.CSG_Module_Library_is_Valid(self)
    def Get_File_Name(self): return _saga_api.CSG_Module_Library_Get_File_Name(self)
    def Get_Info(self, *args): return _saga_api.CSG_Module_Library_Get_Info(self, *args)
    def Get_Name(self): return _saga_api.CSG_Module_Library_Get_Name(self)
    def Get_Description(self): return _saga_api.CSG_Module_Library_Get_Description(self)
    def Get_Author(self): return _saga_api.CSG_Module_Library_Get_Author(self)
    def Get_Version(self): return _saga_api.CSG_Module_Library_Get_Version(self)
    def Get_Summary(self, bHTML = False): return _saga_api.CSG_Module_Library_Get_Summary(self, bHTML)
    def Get_Count(self): return _saga_api.CSG_Module_Library_Get_Count(self)
    def Get_Module(self, *args): return _saga_api.CSG_Module_Library_Get_Module(self, *args)
    def Get_Module_Grid(self, *args): return _saga_api.CSG_Module_Library_Get_Module_Grid(self, *args)
    def Get_Module_I(self, *args): return _saga_api.CSG_Module_Library_Get_Module_I(self, *args)
    def Get_Module_Grid_I(self, *args): return _saga_api.CSG_Module_Library_Get_Module_Grid_I(self, *args)
    def Get_Menu(self, *args): return _saga_api.CSG_Module_Library_Get_Menu(self, *args)
CSG_Module_Library_swigregister = _saga_api.CSG_Module_Library_swigregister
CSG_Module_Library_swigregister(CSG_Module_Library)


def SAGA_API_Get_Version():
  return _saga_api.SAGA_API_Get_Version()
SAGA_API_Get_Version = _saga_api.SAGA_API_Get_Version


